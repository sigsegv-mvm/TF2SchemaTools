// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf_gcmessages.proto

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning(push)
#pragma warning(disable : 4530)	// warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4244)	// warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)	// warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)	// warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)	// warning C4127: conditional expression is constant
#pragma warning(disable : 4100)	// warning C4100: 'op' : unreferenced formal parameter
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _PS3
#endif // _GNUC

#ifndef PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "steammessages.pb.h"
#include "base_gcmessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

class CMsgTFGoldenWrenchBroadcast;
class CMsgTFSaxxyBroadcast;
class CMsgGCTFSpecificItemBroadcast;
class CMsgTFWorldStatus;
class CSOTFDuelSummary;
class CSOTFMapContribution;
class CMsgTFVoteKickBanPlayer;
class CMsgTFVoteKickBanPlayerResult;
class CMsgTFFreeTrialChooseMostHelpfulFriend;
class CMsgTFRequestTF2Friends;
class CMsgTFRequestTF2FriendsResponse;
class CSOTFPlayerInfo;
class CMsgTFThankedBySomeone;
class CMsgTFThankedSomeone;
class CMsgTFFreeTrialConvertedToPremium;
class CMsgSaxxyAwarded;
class CMsgReplaySubmitContestEntry;
class CMsgReplaySubmitContestEntryResponse;
class CReplayCachedContestData;
class CMsgTFCoaching_AddToCoaches;
class CMsgTFCoaching_RemoveFromCoaches;
class CMsgTFCoaching_FindCoach;
class CMsgTFCoaching_FindCoachResponse;
class CMsgTFCoaching_AskCoach;
class CMsgTFCoaching_AskCoachResponse;
class CMsgTFCoaching_CoachJoinGame;
class CMsgTFCoaching_CoachJoining;
class CMsgTFCoaching_CoachJoined;
class CMsgTFCoaching_LikeCurrentCoach;
class CMsgTFCoaching_RemoveCurrentCoach;
class CMsgTFQuickplay_ScoreServers;
class CMsgTFQuickplay_ScoreServers_ServerInfo;
class CMsgTFQuickplay_ScoreServersResponse;
class CMsgTFQuickplay_ScoreServersResponse_ServerInfo;
class CMsgTFQuickplay_PlayerJoining;
class CMsgGC_GameServer_LevelInfo;
class CMsgGC_GameServer_AuthChallenge;
class CMsgGC_GameServer_AuthResult;
class CMsgGC_GameServer_AuthChallengeResponse;
class CMsgGC_GameServer_CreateIdentity;
class CMsgGC_GameServer_CreateIdentityResponse;
class CMsgGC_GameServer_List;
class CMsgGC_GameServer_ListResponse;
class CMsgGC_GameServer_ListResponse_GameServerIdentity;
class CMsgGC_GameServer_ResetIdentity;
class CMsgGC_GameServer_ResetIdentityResponse;
class CMsgGC_GameServer_AckPolicy;
class CMsgGC_GameServer_AckPolicyResponse;
class CMsgGC_Client_UseServerModificationItem;
class CMsgGC_Client_UseServerModificationItem_Response;
class CMsgGC_GameServer_UseServerModificationItem;
class CMsgGC_GameServer_UseServerModificationItem_Response;
class CMsgGC_GameServer_ServerModificationItemExpired;
class CMsgGC_GameServer_ServerModificationItem;
class CMsgGC_Halloween_ReservedItem;
class CMsgGC_Halloween_GrantItem;
class CMsgGC_Halloween_GrantItemResponse;
class CMsgGC_Halloween_ItemClaimed;
class CMsgGC_PickupItemEligibility_Query;
class CMsgGC_PickupItemEligibility_QueryResponse;
class CSOTFPartyMember;
class CMsgMatchSearchCriteria;
class CMsgCasualMatchmakingSearchCriteria;
class CMsgCreateOrUpdateParty;
class CMsgCreateOrUpdatePartyReply;
class CSOTFParty;
class CSOTFPartyInvite;
class CSOTFPartyInvite_PartyMember;
class CTFLobbyMember;
class CLobbyPendingPlayerReport;
class CSOTFLobby;
class CMsgExitMatchmaking;
class CMsgAcceptInvite;
class CMsgAcceptInviteResponse;
class CMsgReadyUp;
class CMsgMatchmakingSearchCountRequest;
class CMsgMatchmakingSearchCountResponse;
class CMsgKickedFromMatchmakingQueue;
class CMsgTFJoinChatChannel;
class CMsgTFLeaveChatChannel;
class CMsgTFJoinChatChannelResponse;
class CMsgTFJoinChatChannelResponse_ChatMember;
class CMsgTFOtherJoinedChatChannel;
class CMsgTFOtherLeftChatChannel;
class CMsgTFRequestDefaultChatChannel;
class CMsgTFRequestDefaultChatChannelResponse;
class CMsgTFRequestChatChannelList;
class CMsgTFRequestChatChannelListResponse;
class CMsgTFRequestChatChannelListResponse_ChatChannel;
class CMsgGameServerMatchmakingStatus;
class CMsgGameServerMatchmakingStatus_Player;
class CMsgMatchmakingProgress;
class CMsgMvMVictoryInfo;
class CMsgMvMVictoryInfo_Item;
class CMsgMvMVictoryInfo_Player;
class CGCMsgTFHelloResponse;
class CGCMsgTFSync;
class CGCMsgTFSyncEx;
class CMsgMvMVictory;
class CMsgMvMVictory_Player;
class CMsgMvMMannUpVictoryReply;
class CMsgGameServerKickingLobby;
class CMsgGameServerKickingLobbyResponse;
class CMsgLeaveGameAndPrepareToJoinParty;
class CMsgPlayerLeftMatch;
class CMsgPlayerLeftMatchResponse;
class CMsgHalloween_ServerBossEvent;
class CMsgHalloween_Merasmus2012;
class CMsgUpdateHalloweenMerasmusLootLevel;
class CMsgUpdateHalloweenMerasmusLootLevel_Player;
class CAttribute_String;
class CAttribute_DynamicRecipeComponent;
class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT;
class CAttribute_ItemSlotCriteria;
class CMsgSetItemSlotAttribute;
class CSOWarData;
class CGCMsgGC_War_IndividualUpdate;
class CGCMsgGC_War_JoinWar;
class CGCMsgGC_War_RequestGlobalStats;
class CGCMsgGC_War_GlobalStatsResponse;
class CGCMsgGC_War_GlobalStatsResponse_SideScore;
class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate;
class CAttribute_WorldItemPlacement;
class CGCMsg_WorldItemPlacement_Update;
class CMsgGCNotification;
class CMsgGCNotificationQueue;
class CMsgNotificationAcknowledge;
class CMsgNotificationAcknowledgeReply;
class CMsgGC_Match_Result;
class CMsgGC_Match_Result_Player;
class CMsgGC_Match_ResultResponse;
class CEconItemPreviewDataBlock;
class CMsgGC_Client2GCEconPreviewDataBlockRequest;
class CMsgGC_Client2GCEconPreviewDataBlockResponse;
class CSOTFLadderPlayerStats;
class CMsgGC_TFVoteKickPlayerRequest;
class CMsgGC_VoteKickPlayerRequestResponse;
class CMsgGC_DailyCompetitiveStatsRollup;
class CMsgGC_DailyCompetitiveStatsRollup_Response;
class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry;
class CMsgGC_ReportPlayer;
class CSOTFMatchResultPlayerStats;
class CMsgGCRequestCasualCriteriaStats;
class CMsgGCCasualCriteriaStatsResponse;
class CMsgGCMatchHistoryLoad;

enum CMsgGC_GameServer_CreateIdentityResponse_EStatus {
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure = 0,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany = -1,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs = -2,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created = 1
};
bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(int value);
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
const int CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE = CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), value);
}
inline bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(
    const ::std::string& name, CMsgGC_GameServer_CreateIdentityResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_CreateIdentityResponse_EStatus>(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), name, value);
}
enum CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse = 1,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer = 2,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject = 3,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError = 4,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive = 5
};
bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(int value);
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
const int CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
inline const ::std::string& CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), value);
}
inline bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(
    const ::std::string& name, CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), name, value);
}
enum CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted = 1,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled = 2,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed = 3
};
bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(int value);
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
const int CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
inline const ::std::string& CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), value);
}
inline bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(
    const ::std::string& name, CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), name, value);
}
enum CSOTFParty_State {
  CSOTFParty_State_UI = 0,
  CSOTFParty_State_FINDING_MATCH = 1,
  CSOTFParty_State_IN_MATCH = 2,
  CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION = 3
};
bool CSOTFParty_State_IsValid(int value);
const CSOTFParty_State CSOTFParty_State_State_MIN = CSOTFParty_State_UI;
const CSOTFParty_State CSOTFParty_State_State_MAX = CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION;
const int CSOTFParty_State_State_ARRAYSIZE = CSOTFParty_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFParty_State_descriptor();
inline const ::std::string& CSOTFParty_State_Name(CSOTFParty_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFParty_State_descriptor(), value);
}
inline bool CSOTFParty_State_Parse(
    const ::std::string& name, CSOTFParty_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFParty_State>(
    CSOTFParty_State_descriptor(), name, value);
}
enum CTFLobbyMember_ConnectState {
  CTFLobbyMember_ConnectState_INVALID = 0,
  CTFLobbyMember_ConnectState_RESERVATION_PENDING = 1,
  CTFLobbyMember_ConnectState_RESERVED = 2,
  CTFLobbyMember_ConnectState_CONNECTED = 3,
  CTFLobbyMember_ConnectState_DISCONNECTED = 5
};
bool CTFLobbyMember_ConnectState_IsValid(int value);
const CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState_ConnectState_MIN = CTFLobbyMember_ConnectState_INVALID;
const CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState_ConnectState_MAX = CTFLobbyMember_ConnectState_DISCONNECTED;
const int CTFLobbyMember_ConnectState_ConnectState_ARRAYSIZE = CTFLobbyMember_ConnectState_ConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTFLobbyMember_ConnectState_descriptor();
inline const ::std::string& CTFLobbyMember_ConnectState_Name(CTFLobbyMember_ConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTFLobbyMember_ConnectState_descriptor(), value);
}
inline bool CTFLobbyMember_ConnectState_Parse(
    const ::std::string& name, CTFLobbyMember_ConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTFLobbyMember_ConnectState>(
    CTFLobbyMember_ConnectState_descriptor(), name, value);
}
enum CSOTFLobby_State {
  CSOTFLobby_State_SERVERSETUP = 1,
  CSOTFLobby_State_RUN = 2,
  CSOTFLobby_State_POSTGAME = 3,
  CSOTFLobby_State_NOTREADY = 5,
  CSOTFLobby_State_SERVERASSIGN = 6
};
bool CSOTFLobby_State_IsValid(int value);
const CSOTFLobby_State CSOTFLobby_State_State_MIN = CSOTFLobby_State_SERVERSETUP;
const CSOTFLobby_State CSOTFLobby_State_State_MAX = CSOTFLobby_State_SERVERASSIGN;
const int CSOTFLobby_State_State_ARRAYSIZE = CSOTFLobby_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFLobby_State_descriptor();
inline const ::std::string& CSOTFLobby_State_Name(CSOTFLobby_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFLobby_State_descriptor(), value);
}
inline bool CSOTFLobby_State_Parse(
    const ::std::string& name, CSOTFLobby_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFLobby_State>(
    CSOTFLobby_State_descriptor(), name, value);
}
enum CSOTFLobby_LobbyType {
  CSOTFLobby_LobbyType_INVALID = -1,
  CSOTFLobby_LobbyType_MATCH = 0,
  CSOTFLobby_LobbyType_PRACTICE = 1,
  CSOTFLobby_LobbyType_TOURNAMENT = 2,
  CSOTFLobby_LobbyType_TUTORIAL = 3
};
bool CSOTFLobby_LobbyType_IsValid(int value);
const CSOTFLobby_LobbyType CSOTFLobby_LobbyType_LobbyType_MIN = CSOTFLobby_LobbyType_INVALID;
const CSOTFLobby_LobbyType CSOTFLobby_LobbyType_LobbyType_MAX = CSOTFLobby_LobbyType_TUTORIAL;
const int CSOTFLobby_LobbyType_LobbyType_ARRAYSIZE = CSOTFLobby_LobbyType_LobbyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFLobby_LobbyType_descriptor();
inline const ::std::string& CSOTFLobby_LobbyType_Name(CSOTFLobby_LobbyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFLobby_LobbyType_descriptor(), value);
}
inline bool CSOTFLobby_LobbyType_Parse(
    const ::std::string& name, CSOTFLobby_LobbyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFLobby_LobbyType>(
    CSOTFLobby_LobbyType_descriptor(), name, value);
}
enum CSOTFLobby_WarMatch {
  CSOTFLobby_WarMatch_NOPE = 0,
  CSOTFLobby_WarMatch_INVADERS_ARE_PYRO = 1,
  CSOTFLobby_WarMatch_INVADERS_ARE_HEAVY = 2
};
bool CSOTFLobby_WarMatch_IsValid(int value);
const CSOTFLobby_WarMatch CSOTFLobby_WarMatch_WarMatch_MIN = CSOTFLobby_WarMatch_NOPE;
const CSOTFLobby_WarMatch CSOTFLobby_WarMatch_WarMatch_MAX = CSOTFLobby_WarMatch_INVADERS_ARE_HEAVY;
const int CSOTFLobby_WarMatch_WarMatch_ARRAYSIZE = CSOTFLobby_WarMatch_WarMatch_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFLobby_WarMatch_descriptor();
inline const ::std::string& CSOTFLobby_WarMatch_Name(CSOTFLobby_WarMatch value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFLobby_WarMatch_descriptor(), value);
}
inline bool CSOTFLobby_WarMatch_Parse(
    const ::std::string& name, CSOTFLobby_WarMatch* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFLobby_WarMatch>(
    CSOTFLobby_WarMatch_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_PlayerConnectState {
  CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID = 0,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED = 1,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED = 2
};
bool CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(int value);
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
const int CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE = CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_PlayerConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_PlayerConnectState>(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_Event {
  CMsgGameServerMatchmakingStatus_Event_None = 0,
  CMsgGameServerMatchmakingStatus_Event_MvMVictory = 1,
  CMsgGameServerMatchmakingStatus_Event_MvMDefeat = 2,
  CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers = 3
};
bool CMsgGameServerMatchmakingStatus_Event_IsValid(int value);
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MIN = CMsgGameServerMatchmakingStatus_Event_None;
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MAX = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
const int CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE = CMsgGameServerMatchmakingStatus_Event_Event_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_Event_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_Event_Name(CMsgGameServerMatchmakingStatus_Event value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_Event_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_Event>(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), name, value);
}
enum CMsgMvMVictoryInfo_GrantReason {
  CMsgMvMVictoryInfo_GrantReason_INVALID = 0,
  CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED = 1,
  CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS = 2,
  CMsgMvMVictoryInfo_GrantReason_MANN_UP = 3,
  CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB = 4
};
bool CMsgMvMVictoryInfo_GrantReason_IsValid(int value);
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN = CMsgMvMVictoryInfo_GrantReason_INVALID;
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
const int CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE = CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgMvMVictoryInfo_GrantReason_descriptor();
inline const ::std::string& CMsgMvMVictoryInfo_GrantReason_Name(CMsgMvMVictoryInfo_GrantReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), value);
}
inline bool CMsgMvMVictoryInfo_GrantReason_Parse(
    const ::std::string& name, CMsgMvMVictoryInfo_GrantReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgMvMVictoryInfo_GrantReason>(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), name, value);
}
enum CMsgGCNotification_NotificationType {
  CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED = 0,
  CMsgGCNotification_NotificationType_NOTIFICATION_CUSTOM_STRING = 1,
  CMsgGCNotification_NotificationType_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS = 2,
  CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED = 3,
  CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES = 4
};
bool CMsgGCNotification_NotificationType_IsValid(int value);
const CMsgGCNotification_NotificationType CMsgGCNotification_NotificationType_NotificationType_MIN = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED;
const CMsgGCNotification_NotificationType CMsgGCNotification_NotificationType_NotificationType_MAX = CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES;
const int CMsgGCNotification_NotificationType_NotificationType_ARRAYSIZE = CMsgGCNotification_NotificationType_NotificationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotification_NotificationType_descriptor();
inline const ::std::string& CMsgGCNotification_NotificationType_Name(CMsgGCNotification_NotificationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotification_NotificationType_descriptor(), value);
}
inline bool CMsgGCNotification_NotificationType_Parse(
    const ::std::string& name, CMsgGCNotification_NotificationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotification_NotificationType>(
    CMsgGCNotification_NotificationType_descriptor(), name, value);
}
enum CMsgGC_Match_Result_Status {
  CMsgGC_Match_Result_Status_MATCH_SUCCEEDED = 0,
  CMsgGC_Match_Result_Status_MATCH_FAILED_GC = 1,
  CMsgGC_Match_Result_Status_MATCH_FAILED_TRUSTED = 2,
  CMsgGC_Match_Result_Status_MATCH_FAILED_ABANDON = 3,
  CMsgGC_Match_Result_Status_MATCH_FAILED_UNKNOWN = 5,
  CMsgGC_Match_Result_Status_MATCH_FAILED_TIMEOUT = 6,
  CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON = 7
};
bool CMsgGC_Match_Result_Status_IsValid(int value);
const CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status_Status_MIN = CMsgGC_Match_Result_Status_MATCH_SUCCEEDED;
const CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status_Status_MAX = CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON;
const int CMsgGC_Match_Result_Status_Status_ARRAYSIZE = CMsgGC_Match_Result_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Match_Result_Status_descriptor();
inline const ::std::string& CMsgGC_Match_Result_Status_Name(CMsgGC_Match_Result_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Match_Result_Status_descriptor(), value);
}
inline bool CMsgGC_Match_Result_Status_Parse(
    const ::std::string& name, CMsgGC_Match_Result_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Match_Result_Status>(
    CMsgGC_Match_Result_Status_descriptor(), name, value);
}
enum CMsgGC_ReportPlayer_EReason {
  CMsgGC_ReportPlayer_EReason_kReason_INVALID = 0,
  CMsgGC_ReportPlayer_EReason_kReason_CHEATING = 1,
  CMsgGC_ReportPlayer_EReason_kReason_IDLE = 2,
  CMsgGC_ReportPlayer_EReason_kReason_HARASSMENT = 3,
  CMsgGC_ReportPlayer_EReason_kReason_GRIEFING = 4,
  CMsgGC_ReportPlayer_EReason_kReason_COUNT = 5
};
bool CMsgGC_ReportPlayer_EReason_IsValid(int value);
const CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer_EReason_EReason_MIN = CMsgGC_ReportPlayer_EReason_kReason_INVALID;
const CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer_EReason_EReason_MAX = CMsgGC_ReportPlayer_EReason_kReason_COUNT;
const int CMsgGC_ReportPlayer_EReason_EReason_ARRAYSIZE = CMsgGC_ReportPlayer_EReason_EReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_ReportPlayer_EReason_descriptor();
inline const ::std::string& CMsgGC_ReportPlayer_EReason_Name(CMsgGC_ReportPlayer_EReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_ReportPlayer_EReason_descriptor(), value);
}
inline bool CMsgGC_ReportPlayer_EReason_Parse(
    const ::std::string& name, CMsgGC_ReportPlayer_EReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_ReportPlayer_EReason>(
    CMsgGC_ReportPlayer_EReason_descriptor(), name, value);
}
enum ETFGCMsg {
  k_EMsgGCReportWarKill = 5001,
  k_EMsgGCVoteKickBanPlayer = 5018,
  k_EMsgGCVoteKickBanPlayerResult = 5019,
  k_EMsgGCKickPlayer_DEPRECATED = 5020,
  k_EMsgGCStartedTraining_DEPRECATED = 5021,
  k_EMsgGCFreeTrial_ChooseMostHelpfulFriend = 5022,
  k_EMsgGCRequestTF2Friends = 5023,
  k_EMsgGCRequestTF2FriendsResponse = 5024,
  k_EMsgGCReplay_SubmitContestEntry = 5026,
  k_EMsgGCReplay_SubmitContestEntryResponse = 5027,
  k_EMsgGCSaxxy_Awarded = 5029,
  k_EMsgGCFreeTrial_ThankedBySomeone = 5028,
  k_EMsgGCFreeTrial_ThankedSomeone = 5030,
  k_EMsgGCFreeTrial_ConvertedToPremium = 5031,
  k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED = 5032,
  k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED = 5033,
  k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED = 5034,
  k_EMsgGCCoaching_AddToCoaches = 5200,
  k_EMsgGCCoaching_AddToCoachesResponse = 5201,
  k_EMsgGCCoaching_RemoveFromCoaches = 5202,
  k_EMsgGCCoaching_RemoveFromCoachesResponse = 5203,
  k_EMsgGCCoaching_FindCoach = 5204,
  k_EMsgGCCoaching_FindCoachResponse = 5205,
  k_EMsgGCCoaching_AskCoach = 5206,
  k_EMsgGCCoaching_AskCoachResponse = 5207,
  k_EMsgGCCoaching_CoachJoinGame = 5208,
  k_EMsgGCCoaching_CoachJoining = 5209,
  k_EMsgGCCoaching_CoachJoined = 5210,
  k_EMsgGCCoaching_LikeCurrentCoach = 5211,
  k_EMsgGCCoaching_RemoveCurrentCoach = 5212,
  k_EMsgGCCoaching_AlreadyRatedCoach = 5213,
  k_EMsgGC_Duel_Request = 5500,
  k_EMsgGC_Duel_Response = 5501,
  k_EMsgGC_Duel_Results = 5502,
  k_EMsgGC_Duel_Status = 5503,
  k_EMsgGC_Halloween_ReservedItem_DEPRECATED = 5600,
  k_EMsgGC_Halloween_GrantItem_DEPRECATED = 5601,
  k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED = 5604,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED = 5605,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED = 5606,
  k_EMsgGC_Halloween_ReservedItem = 5607,
  k_EMsgGC_Halloween_GrantItem = 5608,
  k_EMsgGC_Halloween_GrantItemResponse = 5609,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2 = 5610,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2 = 5611,
  k_EMsgGC_Halloween_ServerBossEvent = 5612,
  k_EMsgGC_Halloween_Merasmus2012 = 5613,
  k_EMsgGC_Halloween_UpdateMerasmusLootLevel = 5614,
  k_EMsgGC_GameServer_LevelInfo = 5700,
  k_EMsgGC_GameServer_AuthChallenge = 5701,
  k_EMsgGC_GameServer_AuthChallengeResponse = 5702,
  k_EMsgGC_GameServer_CreateIdentity = 5703,
  k_EMsgGC_GameServer_CreateIdentityResponse = 5704,
  k_EMsgGC_GameServer_List = 5705,
  k_EMsgGC_GameServer_ListResponse = 5706,
  k_EMsgGC_GameServer_AuthResult = 5707,
  k_EMsgGC_GameServer_ResetIdentity = 5708,
  k_EMsgGC_GameServer_ResetIdentityResponse = 5709,
  k_EMsgGC_Client_UseServerModificationItem = 5710,
  k_EMsgGC_Client_UseServerModificationItem_Response = 5711,
  k_EMsgGC_GameServer_UseServerModificationItem = 5712,
  k_EMsgGC_GameServer_UseServerModificationItem_Response = 5713,
  k_EMsgGC_GameServer_ServerModificationItemExpired = 5714,
  k_EMsgGC_GameServer_ModificationItemState = 5715,
  k_EMsgGC_GameServer_AckPolicy = 5716,
  k_EMsgGC_GameServer_AckPolicyResponse = 5717,
  k_EMsgGC_QP_ScoreServers = 5800,
  k_EMsgGC_QP_ScoreServersResponse = 5801,
  k_EMsgGC_QP_PlayerJoining = 5802,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED = 6000,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2 = 6001,
  k_EMsgGC_IncrementKillCountAttribute_DEPRECATED = 6100,
  k_EMsgGC_IncrementKillCountResponse_DEPRECATED = 6101,
  k_EMsgGCCreateOrUpdateParty = 6233,
  k_EMsgGCAbandonCurrentGame = 6235,
  k_EMsgForceSOCacheResend = 6237,
  k_EMsgGCRequestChatChannelList = 6260,
  k_EMsgGCRequestChatChannelListResponse = 6261,
  k_EMsgGCReadyUp = 6270,
  k_EMsgGCKickedFromMatchmakingQueue = 6271,
  k_EMsgGCLeaverDetected = 6272,
  k_EMsgGCLeaverDetectedResponse = 6287,
  k_EMsgGCExitMatchmaking = 6289,
  k_EMsgGCAcceptInvite = 6291,
  k_EMsgGCAcceptInviteResponse = 6292,
  k_EMsgGCMatchmakingProgress = 6293,
  k_EMsgGCMvMVictoryInfo = 6294,
  k_EMsgGCGameServerMatchmakingStatus = 6295,
  k_EMsgGCCreateOrUpdatePartyReply = 6296,
  k_EMsgGCMvMVictory = 6297,
  k_EMsgGCMvMVictoryReply = 6298,
  k_EMsgGCGameServerKickingLobby = 6299,
  k_EMsgGCLeaveGameAndPrepareToJoinParty = 6300,
  k_EMsgGC_UpdatePeriodicEvent = 6400,
  k_EMsgGC_DuckLeaderboard_IndividualUpdate = 6401,
  k_EMsgGC_Client2GCEconPreviewDataBlockRequest = 6402,
  k_EMsgGC_Client2GCEconPreviewDataBlockResponse = 6403,
  k_EMsgGC_ClientVerificationChallenge = 6500,
  k_EMsgGC_ClientVerificationChallengeResponse = 6501,
  k_EMsgGC_ClientVerificationVerboseResponse = 6502,
  k_EMsgGC_ClientSetItemSlotAttribute = 6503,
  k_EMsgGC_War_IndividualUpdate = 6505,
  k_EMsgGC_War_JoinWar = 6506,
  k_EMsgGC_War_RequestGlobalStats = 6507,
  k_EMsgGC_War_GlobalStatsResponse = 6508,
  k_EMsgGC_WorldItemPlacement_Attribute = 6510,
  k_EMsgGC_WorldItemPlacement_Update = 6511,
  k_EMsgGC_Match_Result = 6512,
  k_EMsgGCVoteKickPlayerRequest = 6513,
  k_EMsgGCVoteKickPlayerRequestResponse = 6514,
  k_EMsgGC_DailyCompetitiveStatsRollup = 6516,
  k_EMsgGC_DailyCompetitiveStatsRollup_Response = 6517,
  k_EMsgGC_WorldStatusBroadcast = 6518,
  k_EMsgGC_ReportPlayer = 6519,
  k_EMsgGC_Match_ResultResponse = 6520,
  k_EMsgGCGameServerKickingLobbyResponse = 6521,
  k_EMsgGCPlayerLeftMatch = 6522,
  k_EMsgGCPlayerLeftMatchResponse = 6523,
  k_EMsgGCRequestCasualCriteriaStats = 6524,
  k_EMsgGCCasualCriteriaStatsResponse = 6525,
  k_EMsgGCMatchHistoryLoad = 6526,
  k_EMsgGC_NotificationAcknowledge = 6529,
  k_EMsgGC_NotificationAcknowledgeReply = 6530,
  k_EMsgGCDev_GrantWarKill = 10001
};
bool ETFGCMsg_IsValid(int value);
const ETFGCMsg ETFGCMsg_MIN = k_EMsgGCReportWarKill;
const ETFGCMsg ETFGCMsg_MAX = k_EMsgGCDev_GrantWarKill;
const int ETFGCMsg_ARRAYSIZE = ETFGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFGCMsg_descriptor();
inline const ::std::string& ETFGCMsg_Name(ETFGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFGCMsg_descriptor(), value);
}
inline bool ETFGCMsg_Parse(
    const ::std::string& name, ETFGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFGCMsg>(
    ETFGCMsg_descriptor(), name, value);
}
enum EServerModificationItemType {
  kGameServerModificationItem_Halloween = 1
};
bool EServerModificationItemType_IsValid(int value);
const EServerModificationItemType EServerModificationItemType_MIN = kGameServerModificationItem_Halloween;
const EServerModificationItemType EServerModificationItemType_MAX = kGameServerModificationItem_Halloween;
const int EServerModificationItemType_ARRAYSIZE = EServerModificationItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerModificationItemType_descriptor();
inline const ::std::string& EServerModificationItemType_Name(EServerModificationItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerModificationItemType_descriptor(), value);
}
inline bool EServerModificationItemType_Parse(
    const ::std::string& name, EServerModificationItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerModificationItemType>(
    EServerModificationItemType_descriptor(), name, value);
}
enum TF_MatchmakingMode {
  TF_Matchmaking_INVALID = 0,
  TF_Matchmaking_MVM = 1,
  TF_Matchmaking_LADDER = 2,
  TF_Matchmaking_CASUAL = 3
};
bool TF_MatchmakingMode_IsValid(int value);
const TF_MatchmakingMode TF_MatchmakingMode_MIN = TF_Matchmaking_INVALID;
const TF_MatchmakingMode TF_MatchmakingMode_MAX = TF_Matchmaking_CASUAL;
const int TF_MatchmakingMode_ARRAYSIZE = TF_MatchmakingMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_MatchmakingMode_descriptor();
inline const ::std::string& TF_MatchmakingMode_Name(TF_MatchmakingMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_MatchmakingMode_descriptor(), value);
}
inline bool TF_MatchmakingMode_Parse(
    const ::std::string& name, TF_MatchmakingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_MatchmakingMode>(
    TF_MatchmakingMode_descriptor(), name, value);
}
enum TF_Matchmaking_WizardStep {
  TF_Matchmaking_WizardStep_INVALID = 0,
  TF_Matchmaking_WizardStep_MVM_PLAY_FOR_BRAGGING_RIGHTS = 1,
  TF_Matchmaking_WizardStep_MVM_TOUR_OF_DUTY = 2,
  TF_Matchmaking_WizardStep_MVM_CHALLENGE = 3,
  TF_Matchmaking_WizardStep_SEARCHING = 4,
  TF_Matchmaking_WizardStep_LADDER = 5,
  TF_Matchmaking_WizardStep_CASUAL = 6
};
bool TF_Matchmaking_WizardStep_IsValid(int value);
const TF_Matchmaking_WizardStep TF_Matchmaking_WizardStep_MIN = TF_Matchmaking_WizardStep_INVALID;
const TF_Matchmaking_WizardStep TF_Matchmaking_WizardStep_MAX = TF_Matchmaking_WizardStep_CASUAL;
const int TF_Matchmaking_WizardStep_ARRAYSIZE = TF_Matchmaking_WizardStep_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_Matchmaking_WizardStep_descriptor();
inline const ::std::string& TF_Matchmaking_WizardStep_Name(TF_Matchmaking_WizardStep value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_Matchmaking_WizardStep_descriptor(), value);
}
inline bool TF_Matchmaking_WizardStep_Parse(
    const ::std::string& name, TF_Matchmaking_WizardStep* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_Matchmaking_WizardStep>(
    TF_Matchmaking_WizardStep_descriptor(), name, value);
}
enum TF_GC_GameState {
  TF_GC_GAMESTATE_STATE_INIT = 0,
  TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
  TF_GC_GAMESTATE_STRATEGY_TIME = 3,
  TF_GC_GAMESTATE_GAME_IN_PROGRESS = 5,
  TF_GC_GAMESTATE_POST_GAME = 6,
  TF_GC_GAMESTATE_DISCONNECT = 7,
  TF_GC_GAMESTATE_LAST = 8
};
bool TF_GC_GameState_IsValid(int value);
const TF_GC_GameState TF_GC_GameState_MIN = TF_GC_GAMESTATE_STATE_INIT;
const TF_GC_GameState TF_GC_GameState_MAX = TF_GC_GAMESTATE_LAST;
const int TF_GC_GameState_ARRAYSIZE = TF_GC_GameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_GameState_descriptor();
inline const ::std::string& TF_GC_GameState_Name(TF_GC_GameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_GameState_descriptor(), value);
}
inline bool TF_GC_GameState_Parse(
    const ::std::string& name, TF_GC_GameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_GameState>(
    TF_GC_GameState_descriptor(), name, value);
}
enum TF_GC_TEAM {
  TF_GC_TEAM_DEFENDERS = 0,
  TF_GC_TEAM_INVADERS = 1,
  TF_GC_TEAM_BROADCASTER = 2,
  TF_GC_TEAM_SPECTATOR = 3,
  TF_GC_TEAM_PLAYER_POOL = 4,
  TF_GC_TEAM_NOTEAM = 5
};
bool TF_GC_TEAM_IsValid(int value);
const TF_GC_TEAM TF_GC_TEAM_MIN = TF_GC_TEAM_DEFENDERS;
const TF_GC_TEAM TF_GC_TEAM_MAX = TF_GC_TEAM_NOTEAM;
const int TF_GC_TEAM_ARRAYSIZE = TF_GC_TEAM_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_TEAM_descriptor();
inline const ::std::string& TF_GC_TEAM_Name(TF_GC_TEAM value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_TEAM_descriptor(), value);
}
inline bool TF_GC_TEAM_Parse(
    const ::std::string& name, TF_GC_TEAM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_TEAM>(
    TF_GC_TEAM_descriptor(), name, value);
}
enum TFMatchLeaveReason {
  TFMatchLeaveReason_UNSPECIFIED = 0,
  TFMatchLeaveReason_VOTE_KICK = 1,
  TFMatchLeaveReason_IDLE = 2,
  TFMatchLeaveReason_ADMIN_KICK = 3,
  TFMatchLeaveReason_AWOL = 4,
  TFMatchLeaveReason_NO_SHOW = 5,
  TFMatchLeaveReason_GC_REMOVED = 6
};
bool TFMatchLeaveReason_IsValid(int value);
const TFMatchLeaveReason TFMatchLeaveReason_MIN = TFMatchLeaveReason_UNSPECIFIED;
const TFMatchLeaveReason TFMatchLeaveReason_MAX = TFMatchLeaveReason_GC_REMOVED;
const int TFMatchLeaveReason_ARRAYSIZE = TFMatchLeaveReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFMatchLeaveReason_descriptor();
inline const ::std::string& TFMatchLeaveReason_Name(TFMatchLeaveReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFMatchLeaveReason_descriptor(), value);
}
inline bool TFMatchLeaveReason_Parse(
    const ::std::string& name, TFMatchLeaveReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFMatchLeaveReason>(
    TFMatchLeaveReason_descriptor(), name, value);
}
enum TFLobbyReadyState {
  TFLobbyReadyState_UNDECLARED = 0,
  TFLobbyReadyState_ACCEPTED = 1,
  TFLobbyReadyState_DECLINED = 2
};
bool TFLobbyReadyState_IsValid(int value);
const TFLobbyReadyState TFLobbyReadyState_MIN = TFLobbyReadyState_UNDECLARED;
const TFLobbyReadyState TFLobbyReadyState_MAX = TFLobbyReadyState_DECLINED;
const int TFLobbyReadyState_ARRAYSIZE = TFLobbyReadyState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFLobbyReadyState_descriptor();
inline const ::std::string& TFLobbyReadyState_Name(TFLobbyReadyState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFLobbyReadyState_descriptor(), value);
}
inline bool TFLobbyReadyState_Parse(
    const ::std::string& name, TFLobbyReadyState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFLobbyReadyState>(
    TFLobbyReadyState_descriptor(), name, value);
}
enum ChatChannelType_t {
  ChatChannelType_Regional = 0,
  ChatChannelType_Custom = 1,
  ChatChannelType_Party = 2,
  ChatChannelType_Lobby = 3
};
bool ChatChannelType_t_IsValid(int value);
const ChatChannelType_t ChatChannelType_t_MIN = ChatChannelType_Regional;
const ChatChannelType_t ChatChannelType_t_MAX = ChatChannelType_Lobby;
const int ChatChannelType_t_ARRAYSIZE = ChatChannelType_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatChannelType_t_descriptor();
inline const ::std::string& ChatChannelType_t_Name(ChatChannelType_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatChannelType_t_descriptor(), value);
}
inline bool ChatChannelType_t_Parse(
    const ::std::string& name, ChatChannelType_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatChannelType_t>(
    ChatChannelType_t_descriptor(), name, value);
}
enum ServerMatchmakingState {
  ServerMatchmakingState_INVALID = 0,
  ServerMatchmakingState_NOT_PARTICIPATING = 1,
  ServerMatchmakingState_EMPTY = 2,
  ServerMatchmakingState_ACTIVE_MATCH_REQUESTING_LATE_JOIN = 3,
  ServerMatchmakingState_ACTIVE_MATCH = 4
};
bool ServerMatchmakingState_IsValid(int value);
const ServerMatchmakingState ServerMatchmakingState_MIN = ServerMatchmakingState_INVALID;
const ServerMatchmakingState ServerMatchmakingState_MAX = ServerMatchmakingState_ACTIVE_MATCH;
const int ServerMatchmakingState_ARRAYSIZE = ServerMatchmakingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerMatchmakingState_descriptor();
inline const ::std::string& ServerMatchmakingState_Name(ServerMatchmakingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerMatchmakingState_descriptor(), value);
}
inline bool ServerMatchmakingState_Parse(
    const ::std::string& name, ServerMatchmakingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerMatchmakingState>(
    ServerMatchmakingState_descriptor(), name, value);
}
// ===================================================================

class CMsgTFGoldenWrenchBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFGoldenWrenchBroadcast();
  virtual ~CMsgTFGoldenWrenchBroadcast();
  
  CMsgTFGoldenWrenchBroadcast(const CMsgTFGoldenWrenchBroadcast& from);
  
  inline CMsgTFGoldenWrenchBroadcast& operator=(const CMsgTFGoldenWrenchBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFGoldenWrenchBroadcast& default_instance();
  
  void Swap(CMsgTFGoldenWrenchBroadcast* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFGoldenWrenchBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void MergeFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 wrench_number = 1;
  inline bool has_wrench_number() const;
  inline void clear_wrench_number();
  static const int kWrenchNumberFieldNumber = 1;
  inline ::google::protobuf::int32 wrench_number() const;
  inline void set_wrench_number(::google::protobuf::int32 value);
  
  // optional bool deleted = 2;
  inline bool has_deleted() const;
  inline void clear_deleted();
  static const int kDeletedFieldNumber = 2;
  inline bool deleted() const;
  inline void set_deleted(bool value);
  
  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFGoldenWrenchBroadcast)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 wrench_number_;
  bool deleted_;
  ::std::string* user_name_;
  static const ::std::string _default_user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFGoldenWrenchBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFSaxxyBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFSaxxyBroadcast();
  virtual ~CMsgTFSaxxyBroadcast();
  
  CMsgTFSaxxyBroadcast(const CMsgTFSaxxyBroadcast& from);
  
  inline CMsgTFSaxxyBroadcast& operator=(const CMsgTFSaxxyBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFSaxxyBroadcast& default_instance();
  
  void Swap(CMsgTFSaxxyBroadcast* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFSaxxyBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFSaxxyBroadcast& from);
  void MergeFrom(const CMsgTFSaxxyBroadcast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 category_number = 1;
  inline bool has_category_number() const;
  inline void clear_category_number();
  static const int kCategoryNumberFieldNumber = 1;
  inline ::google::protobuf::int32 category_number() const;
  inline void set_category_number(::google::protobuf::int32 value);
  
  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFSaxxyBroadcast)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 category_number_;
  ::std::string* user_name_;
  static const ::std::string _default_user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFSaxxyBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCTFSpecificItemBroadcast : public ::google::protobuf::Message {
 public:
  CMsgGCTFSpecificItemBroadcast();
  virtual ~CMsgGCTFSpecificItemBroadcast();
  
  CMsgGCTFSpecificItemBroadcast(const CMsgGCTFSpecificItemBroadcast& from);
  
  inline CMsgGCTFSpecificItemBroadcast& operator=(const CMsgGCTFSpecificItemBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCTFSpecificItemBroadcast& default_instance();
  
  void Swap(CMsgGCTFSpecificItemBroadcast* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCTFSpecificItemBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void MergeFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 item_def_index = 1;
  inline bool has_item_def_index() const;
  inline void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 item_def_index() const;
  inline void set_item_def_index(::google::protobuf::uint32 value);
  
  // optional bool was_destruction = 2;
  inline bool has_was_destruction() const;
  inline void clear_was_destruction();
  static const int kWasDestructionFieldNumber = 2;
  inline bool was_destruction() const;
  inline void set_was_destruction(bool value);
  
  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  
  // @@protoc_insertion_point(class_scope:CMsgGCTFSpecificItemBroadcast)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 item_def_index_;
  bool was_destruction_;
  ::std::string* user_name_;
  static const ::std::string _default_user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGCTFSpecificItemBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFWorldStatus : public ::google::protobuf::Message {
 public:
  CMsgTFWorldStatus();
  virtual ~CMsgTFWorldStatus();
  
  CMsgTFWorldStatus(const CMsgTFWorldStatus& from);
  
  inline CMsgTFWorldStatus& operator=(const CMsgTFWorldStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFWorldStatus& default_instance();
  
  void Swap(CMsgTFWorldStatus* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFWorldStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFWorldStatus& from);
  void MergeFrom(const CMsgTFWorldStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool beta_stress_test_event_active = 1 [default = false];
  inline bool has_beta_stress_test_event_active() const;
  inline void clear_beta_stress_test_event_active();
  static const int kBetaStressTestEventActiveFieldNumber = 1;
  inline bool beta_stress_test_event_active() const;
  inline void set_beta_stress_test_event_active(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFWorldStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool beta_stress_test_event_active_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFWorldStatus* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFDuelSummary : public ::google::protobuf::Message {
 public:
  CSOTFDuelSummary();
  virtual ~CSOTFDuelSummary();
  
  CSOTFDuelSummary(const CSOTFDuelSummary& from);
  
  inline CSOTFDuelSummary& operator=(const CSOTFDuelSummary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFDuelSummary& default_instance();
  
  void Swap(CSOTFDuelSummary* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFDuelSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFDuelSummary& from);
  void MergeFrom(const CSOTFDuelSummary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 duel_wins = 2;
  inline bool has_duel_wins() const;
  inline void clear_duel_wins();
  static const int kDuelWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 duel_wins() const;
  inline void set_duel_wins(::google::protobuf::uint32 value);
  
  // optional uint32 duel_losses = 3;
  inline bool has_duel_losses() const;
  inline void clear_duel_losses();
  static const int kDuelLossesFieldNumber = 3;
  inline ::google::protobuf::uint32 duel_losses() const;
  inline void set_duel_losses(::google::protobuf::uint32 value);
  
  // optional uint32 last_duel_account_id = 4;
  inline bool has_last_duel_account_id() const;
  inline void clear_last_duel_account_id();
  static const int kLastDuelAccountIdFieldNumber = 4;
  inline ::google::protobuf::uint32 last_duel_account_id() const;
  inline void set_last_duel_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 last_duel_timestamp = 5;
  inline bool has_last_duel_timestamp() const;
  inline void clear_last_duel_timestamp();
  static const int kLastDuelTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 last_duel_timestamp() const;
  inline void set_last_duel_timestamp(::google::protobuf::uint32 value);
  
  // optional uint32 last_duel_status = 6;
  inline bool has_last_duel_status() const;
  inline void clear_last_duel_status();
  static const int kLastDuelStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 last_duel_status() const;
  inline void set_last_duel_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFDuelSummary)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 duel_wins_;
  ::google::protobuf::uint32 duel_losses_;
  ::google::protobuf::uint32 last_duel_account_id_;
  ::google::protobuf::uint32 last_duel_timestamp_;
  ::google::protobuf::uint32 last_duel_status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFDuelSummary* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFMapContribution : public ::google::protobuf::Message {
 public:
  CSOTFMapContribution();
  virtual ~CSOTFMapContribution();
  
  CSOTFMapContribution(const CSOTFMapContribution& from);
  
  inline CSOTFMapContribution& operator=(const CSOTFMapContribution& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMapContribution& default_instance();
  
  void Swap(CSOTFMapContribution* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFMapContribution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFMapContribution& from);
  void MergeFrom(const CSOTFMapContribution& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 def_index = 2;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional uint32 contribution_level = 3;
  inline bool has_contribution_level() const;
  inline void clear_contribution_level();
  static const int kContributionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 contribution_level() const;
  inline void set_contribution_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFMapContribution)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 contribution_level_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFMapContribution* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayer : public ::google::protobuf::Message {
 public:
  CMsgTFVoteKickBanPlayer();
  virtual ~CMsgTFVoteKickBanPlayer();
  
  CMsgTFVoteKickBanPlayer(const CMsgTFVoteKickBanPlayer& from);
  
  inline CMsgTFVoteKickBanPlayer& operator=(const CMsgTFVoteKickBanPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayer& default_instance();
  
  void Swap(CMsgTFVoteKickBanPlayer* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFVoteKickBanPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFVoteKickBanPlayer& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_subject = 1;
  inline bool has_account_id_subject() const;
  inline void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_subject() const;
  inline void set_account_id_subject(::google::protobuf::uint32 value);
  
  // optional uint32 kick_reason = 2;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayer)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFVoteKickBanPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayerResult : public ::google::protobuf::Message {
 public:
  CMsgTFVoteKickBanPlayerResult();
  virtual ~CMsgTFVoteKickBanPlayerResult();
  
  CMsgTFVoteKickBanPlayerResult(const CMsgTFVoteKickBanPlayerResult& from);
  
  inline CMsgTFVoteKickBanPlayerResult& operator=(const CMsgTFVoteKickBanPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayerResult& default_instance();
  
  void Swap(CMsgTFVoteKickBanPlayerResult* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFVoteKickBanPlayerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_initiator = 1;
  inline bool has_account_id_initiator() const;
  inline void clear_account_id_initiator();
  static const int kAccountIdInitiatorFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_initiator() const;
  inline void set_account_id_initiator(::google::protobuf::uint32 value);
  
  // optional uint32 account_id_subject = 2;
  inline bool has_account_id_subject() const;
  inline void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_subject() const;
  inline void set_account_id_subject(::google::protobuf::uint32 value);
  
  // optional uint32 kick_reason = 3;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);
  
  // optional bool kick_successful = 4;
  inline bool has_kick_successful() const;
  inline void clear_kick_successful();
  static const int kKickSuccessfulFieldNumber = 4;
  inline bool kick_successful() const;
  inline void set_kick_successful(bool value);
  
  // optional uint32 num_yes_votes = 5;
  inline bool has_num_yes_votes() const;
  inline void clear_num_yes_votes();
  static const int kNumYesVotesFieldNumber = 5;
  inline ::google::protobuf::uint32 num_yes_votes() const;
  inline void set_num_yes_votes(::google::protobuf::uint32 value);
  
  // optional uint32 num_no_votes = 6;
  inline bool has_num_no_votes() const;
  inline void clear_num_no_votes();
  static const int kNumNoVotesFieldNumber = 6;
  inline ::google::protobuf::uint32 num_no_votes() const;
  inline void set_num_no_votes(::google::protobuf::uint32 value);
  
  // optional uint32 num_possible_votes = 7;
  inline bool has_num_possible_votes() const;
  inline void clear_num_possible_votes();
  static const int kNumPossibleVotesFieldNumber = 7;
  inline ::google::protobuf::uint32 num_possible_votes() const;
  inline void set_num_possible_votes(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayerResult)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_initiator_;
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  bool kick_successful_;
  ::google::protobuf::uint32 num_yes_votes_;
  ::google::protobuf::uint32 num_no_votes_;
  ::google::protobuf::uint32 num_possible_votes_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFVoteKickBanPlayerResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialChooseMostHelpfulFriend : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialChooseMostHelpfulFriend();
  virtual ~CMsgTFFreeTrialChooseMostHelpfulFriend();
  
  CMsgTFFreeTrialChooseMostHelpfulFriend(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  
  inline CMsgTFFreeTrialChooseMostHelpfulFriend& operator=(const CMsgTFFreeTrialChooseMostHelpfulFriend& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialChooseMostHelpfulFriend& default_instance();
  
  void Swap(CMsgTFFreeTrialChooseMostHelpfulFriend* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFFreeTrialChooseMostHelpfulFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void MergeFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_friend = 1;
  inline bool has_account_id_friend() const;
  inline void clear_account_id_friend();
  static const int kAccountIdFriendFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend() const;
  inline void set_account_id_friend(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialChooseMostHelpfulFriend)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_friend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFFreeTrialChooseMostHelpfulFriend* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2Friends : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2Friends();
  virtual ~CMsgTFRequestTF2Friends();
  
  CMsgTFRequestTF2Friends(const CMsgTFRequestTF2Friends& from);
  
  inline CMsgTFRequestTF2Friends& operator=(const CMsgTFRequestTF2Friends& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2Friends& default_instance();
  
  void Swap(CMsgTFRequestTF2Friends* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestTF2Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2Friends& from);
  void MergeFrom(const CMsgTFRequestTF2Friends& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2Friends)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestTF2Friends* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2FriendsResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2FriendsResponse();
  virtual ~CMsgTFRequestTF2FriendsResponse();
  
  CMsgTFRequestTF2FriendsResponse(const CMsgTFRequestTF2FriendsResponse& from);
  
  inline CMsgTFRequestTF2FriendsResponse& operator=(const CMsgTFRequestTF2FriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2FriendsResponse& default_instance();
  
  void Swap(CMsgTFRequestTF2FriendsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestTF2FriendsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void MergeFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2FriendsResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestTF2FriendsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPlayerInfo : public ::google::protobuf::Message {
 public:
  CSOTFPlayerInfo();
  virtual ~CSOTFPlayerInfo();
  
  CSOTFPlayerInfo(const CSOTFPlayerInfo& from);
  
  inline CSOTFPlayerInfo& operator=(const CSOTFPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPlayerInfo& default_instance();
  
  void Swap(CSOTFPlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPlayerInfo& from);
  void MergeFrom(const CSOTFPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 num_new_users_helped = 1;
  inline bool has_num_new_users_helped() const;
  inline void clear_num_new_users_helped();
  static const int kNumNewUsersHelpedFieldNumber = 1;
  inline ::google::protobuf::uint32 num_new_users_helped() const;
  inline void set_num_new_users_helped(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFPlayerInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 num_new_users_helped_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedBySomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedBySomeone();
  virtual ~CMsgTFThankedBySomeone();
  
  CMsgTFThankedBySomeone(const CMsgTFThankedBySomeone& from);
  
  inline CMsgTFThankedBySomeone& operator=(const CMsgTFThankedBySomeone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedBySomeone& default_instance();
  
  void Swap(CMsgTFThankedBySomeone* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFThankedBySomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedBySomeone& from);
  void MergeFrom(const CMsgTFThankedBySomeone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 thanker_steam_id = 1;
  inline bool has_thanker_steam_id() const;
  inline void clear_thanker_steam_id();
  static const int kThankerSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 thanker_steam_id() const;
  inline void set_thanker_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFThankedBySomeone)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 thanker_steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFThankedBySomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedSomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedSomeone();
  virtual ~CMsgTFThankedSomeone();
  
  CMsgTFThankedSomeone(const CMsgTFThankedSomeone& from);
  
  inline CMsgTFThankedSomeone& operator=(const CMsgTFThankedSomeone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedSomeone& default_instance();
  
  void Swap(CMsgTFThankedSomeone* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFThankedSomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedSomeone& from);
  void MergeFrom(const CMsgTFThankedSomeone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFThankedSomeone)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFThankedSomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialConvertedToPremium : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialConvertedToPremium();
  virtual ~CMsgTFFreeTrialConvertedToPremium();
  
  CMsgTFFreeTrialConvertedToPremium(const CMsgTFFreeTrialConvertedToPremium& from);
  
  inline CMsgTFFreeTrialConvertedToPremium& operator=(const CMsgTFFreeTrialConvertedToPremium& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialConvertedToPremium& default_instance();
  
  void Swap(CMsgTFFreeTrialConvertedToPremium* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFFreeTrialConvertedToPremium* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void MergeFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialConvertedToPremium)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFFreeTrialConvertedToPremium* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSaxxyAwarded : public ::google::protobuf::Message {
 public:
  CMsgSaxxyAwarded();
  virtual ~CMsgSaxxyAwarded();
  
  CMsgSaxxyAwarded(const CMsgSaxxyAwarded& from);
  
  inline CMsgSaxxyAwarded& operator=(const CMsgSaxxyAwarded& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaxxyAwarded& default_instance();
  
  void Swap(CMsgSaxxyAwarded* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSaxxyAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSaxxyAwarded& from);
  void MergeFrom(const CMsgSaxxyAwarded& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 category = 1;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);
  
  // repeated string winner_names = 2;
  inline int winner_names_size() const;
  inline void clear_winner_names();
  static const int kWinnerNamesFieldNumber = 2;
  inline const ::std::string& winner_names(int index) const;
  inline ::std::string* mutable_winner_names(int index);
  inline void set_winner_names(int index, const ::std::string& value);
  inline void set_winner_names(int index, const char* value);
  inline void set_winner_names(int index, const char* value, size_t size);
  inline ::std::string* add_winner_names();
  inline void add_winner_names(const ::std::string& value);
  inline void add_winner_names(const char* value);
  inline void add_winner_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& winner_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_winner_names();
  
  // @@protoc_insertion_point(class_scope:CMsgSaxxyAwarded)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 category_;
  ::google::protobuf::RepeatedPtrField< ::std::string> winner_names_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgSaxxyAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntry : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntry();
  virtual ~CMsgReplaySubmitContestEntry();
  
  CMsgReplaySubmitContestEntry(const CMsgReplaySubmitContestEntry& from);
  
  inline CMsgReplaySubmitContestEntry& operator=(const CMsgReplaySubmitContestEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntry& default_instance();
  
  void Swap(CMsgReplaySubmitContestEntry* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReplaySubmitContestEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntry& from);
  void MergeFrom(const CMsgReplaySubmitContestEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string youtube_url = 1;
  inline bool has_youtube_url() const;
  inline void clear_youtube_url();
  static const int kYoutubeUrlFieldNumber = 1;
  inline const ::std::string& youtube_url() const;
  inline void set_youtube_url(const ::std::string& value);
  inline void set_youtube_url(const char* value);
  inline void set_youtube_url(const char* value, size_t size);
  inline ::std::string* mutable_youtube_url();
  
  // optional uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* youtube_url_;
  static const ::std::string _default_youtube_url_;
  ::google::protobuf::uint32 category_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntryResponse : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntryResponse();
  virtual ~CMsgReplaySubmitContestEntryResponse();
  
  CMsgReplaySubmitContestEntryResponse(const CMsgReplaySubmitContestEntryResponse& from);
  
  inline CMsgReplaySubmitContestEntryResponse& operator=(const CMsgReplaySubmitContestEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntryResponse& default_instance();
  
  void Swap(CMsgReplaySubmitContestEntryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReplaySubmitContestEntryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void MergeFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntryResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool success_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CReplayCachedContestData : public ::google::protobuf::Message {
 public:
  CReplayCachedContestData();
  virtual ~CReplayCachedContestData();
  
  CReplayCachedContestData(const CReplayCachedContestData& from);
  
  inline CReplayCachedContestData& operator=(const CReplayCachedContestData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CReplayCachedContestData& default_instance();
  
  void Swap(CReplayCachedContestData* other);
  
  // implements Message ----------------------------------------------
  
  CReplayCachedContestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CReplayCachedContestData& from);
  void MergeFrom(const CReplayCachedContestData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);
  
  // optional uint32 num_votes_last_day = 2;
  inline bool has_num_votes_last_day() const;
  inline void clear_num_votes_last_day();
  static const int kNumVotesLastDayFieldNumber = 2;
  inline ::google::protobuf::uint32 num_votes_last_day() const;
  inline void set_num_votes_last_day(::google::protobuf::uint32 value);
  
  // repeated uint32 video_entry_ids = 3;
  inline int video_entry_ids_size() const;
  inline void clear_video_entry_ids();
  static const int kVideoEntryIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 video_entry_ids(int index) const;
  inline void set_video_entry_ids(int index, ::google::protobuf::uint32 value);
  inline void add_video_entry_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      video_entry_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_video_entry_ids();
  
  // optional uint32 num_flags_last_day = 4;
  inline bool has_num_flags_last_day() const;
  inline void clear_num_flags_last_day();
  static const int kNumFlagsLastDayFieldNumber = 4;
  inline ::google::protobuf::uint32 num_flags_last_day() const;
  inline void set_num_flags_last_day(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CReplayCachedContestData)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 num_votes_last_day_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > video_entry_ids_;
  ::google::protobuf::uint32 num_flags_last_day_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CReplayCachedContestData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AddToCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AddToCoaches();
  virtual ~CMsgTFCoaching_AddToCoaches();
  
  CMsgTFCoaching_AddToCoaches(const CMsgTFCoaching_AddToCoaches& from);
  
  inline CMsgTFCoaching_AddToCoaches& operator=(const CMsgTFCoaching_AddToCoaches& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AddToCoaches& default_instance();
  
  void Swap(CMsgTFCoaching_AddToCoaches* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_AddToCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AddToCoaches& from);
  void MergeFrom(const CMsgTFCoaching_AddToCoaches& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AddToCoaches)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_AddToCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveFromCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveFromCoaches();
  virtual ~CMsgTFCoaching_RemoveFromCoaches();
  
  CMsgTFCoaching_RemoveFromCoaches(const CMsgTFCoaching_RemoveFromCoaches& from);
  
  inline CMsgTFCoaching_RemoveFromCoaches& operator=(const CMsgTFCoaching_RemoveFromCoaches& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveFromCoaches& default_instance();
  
  void Swap(CMsgTFCoaching_RemoveFromCoaches* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_RemoveFromCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void MergeFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveFromCoaches)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveFromCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoach();
  virtual ~CMsgTFCoaching_FindCoach();
  
  CMsgTFCoaching_FindCoach(const CMsgTFCoaching_FindCoach& from);
  
  inline CMsgTFCoaching_FindCoach& operator=(const CMsgTFCoaching_FindCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoach& default_instance();
  
  void Swap(CMsgTFCoaching_FindCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_FindCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoach& from);
  void MergeFrom(const CMsgTFCoaching_FindCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_friend_as_coach = 1;
  inline bool has_account_id_friend_as_coach() const;
  inline void clear_account_id_friend_as_coach();
  static const int kAccountIdFriendAsCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend_as_coach() const;
  inline void set_account_id_friend_as_coach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoach)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_friend_as_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoachResponse();
  virtual ~CMsgTFCoaching_FindCoachResponse();
  
  CMsgTFCoaching_FindCoachResponse(const CMsgTFCoaching_FindCoachResponse& from);
  
  inline CMsgTFCoaching_FindCoachResponse& operator=(const CMsgTFCoaching_FindCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoachResponse& default_instance();
  
  void Swap(CMsgTFCoaching_FindCoachResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_FindCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool found_coach = 1;
  inline bool has_found_coach() const;
  inline void clear_found_coach();
  static const int kFoundCoachFieldNumber = 1;
  inline bool found_coach() const;
  inline void set_found_coach(bool value);
  
  // optional uint32 num_likes = 2;
  inline bool has_num_likes() const;
  inline void clear_num_likes();
  static const int kNumLikesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_likes() const;
  inline void set_num_likes(::google::protobuf::uint32 value);
  
  // optional string coach_name = 3;
  inline bool has_coach_name() const;
  inline void clear_coach_name();
  static const int kCoachNameFieldNumber = 3;
  inline const ::std::string& coach_name() const;
  inline void set_coach_name(const ::std::string& value);
  inline void set_coach_name(const char* value);
  inline void set_coach_name(const char* value, size_t size);
  inline ::std::string* mutable_coach_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoachResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool found_coach_;
  ::google::protobuf::uint32 num_likes_;
  ::std::string* coach_name_;
  static const ::std::string _default_coach_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoach();
  virtual ~CMsgTFCoaching_AskCoach();
  
  CMsgTFCoaching_AskCoach(const CMsgTFCoaching_AskCoach& from);
  
  inline CMsgTFCoaching_AskCoach& operator=(const CMsgTFCoaching_AskCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoach& default_instance();
  
  void Swap(CMsgTFCoaching_AskCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_AskCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoach& from);
  void MergeFrom(const CMsgTFCoaching_AskCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_student = 1;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);
  
  // optional bool student_is_friend = 2;
  inline bool has_student_is_friend() const;
  inline void clear_student_is_friend();
  static const int kStudentIsFriendFieldNumber = 2;
  inline bool student_is_friend() const;
  inline void set_student_is_friend(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoach)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_student_;
  bool student_is_friend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoachResponse();
  virtual ~CMsgTFCoaching_AskCoachResponse();
  
  CMsgTFCoaching_AskCoachResponse(const CMsgTFCoaching_AskCoachResponse& from);
  
  inline CMsgTFCoaching_AskCoachResponse& operator=(const CMsgTFCoaching_AskCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoachResponse& default_instance();
  
  void Swap(CMsgTFCoaching_AskCoachResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_AskCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool accept_coaching_assignment = 1;
  inline bool has_accept_coaching_assignment() const;
  inline void clear_accept_coaching_assignment();
  static const int kAcceptCoachingAssignmentFieldNumber = 1;
  inline bool accept_coaching_assignment() const;
  inline void set_accept_coaching_assignment(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoachResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool accept_coaching_assignment_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoinGame : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoinGame();
  virtual ~CMsgTFCoaching_CoachJoinGame();
  
  CMsgTFCoaching_CoachJoinGame(const CMsgTFCoaching_CoachJoinGame& from);
  
  inline CMsgTFCoaching_CoachJoinGame& operator=(const CMsgTFCoaching_CoachJoinGame& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoinGame& default_instance();
  
  void Swap(CMsgTFCoaching_CoachJoinGame* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_CoachJoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool join_game = 1;
  inline bool has_join_game() const;
  inline void clear_join_game();
  static const int kJoinGameFieldNumber = 1;
  inline bool join_game() const;
  inline void set_join_game(bool value);
  
  // optional uint32 server_address = 2;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 2;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 3;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional uint32 account_id_student = 4;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoinGame)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool join_game_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 account_id_student_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoinGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoining : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoining();
  virtual ~CMsgTFCoaching_CoachJoining();
  
  CMsgTFCoaching_CoachJoining(const CMsgTFCoaching_CoachJoining& from);
  
  inline CMsgTFCoaching_CoachJoining& operator=(const CMsgTFCoaching_CoachJoining& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoining& default_instance();
  
  void Swap(CMsgTFCoaching_CoachJoining* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_CoachJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoining& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoining& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);
  
  // optional uint32 account_id_student = 2;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoining)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_coach_;
  ::google::protobuf::uint32 account_id_student_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoined : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoined();
  virtual ~CMsgTFCoaching_CoachJoined();
  
  CMsgTFCoaching_CoachJoined(const CMsgTFCoaching_CoachJoined& from);
  
  inline CMsgTFCoaching_CoachJoined& operator=(const CMsgTFCoaching_CoachJoined& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoined& default_instance();
  
  void Swap(CMsgTFCoaching_CoachJoined* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_CoachJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoined& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoined& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoined)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoined* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_LikeCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_LikeCurrentCoach();
  virtual ~CMsgTFCoaching_LikeCurrentCoach();
  
  CMsgTFCoaching_LikeCurrentCoach(const CMsgTFCoaching_LikeCurrentCoach& from);
  
  inline CMsgTFCoaching_LikeCurrentCoach& operator=(const CMsgTFCoaching_LikeCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_LikeCurrentCoach& default_instance();
  
  void Swap(CMsgTFCoaching_LikeCurrentCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_LikeCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool like_coach = 1;
  inline bool has_like_coach() const;
  inline void clear_like_coach();
  static const int kLikeCoachFieldNumber = 1;
  inline bool like_coach() const;
  inline void set_like_coach(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_LikeCurrentCoach)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool like_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_LikeCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveCurrentCoach();
  virtual ~CMsgTFCoaching_RemoveCurrentCoach();
  
  CMsgTFCoaching_RemoveCurrentCoach(const CMsgTFCoaching_RemoveCurrentCoach& from);
  
  inline CMsgTFCoaching_RemoveCurrentCoach& operator=(const CMsgTFCoaching_RemoveCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveCurrentCoach& default_instance();
  
  void Swap(CMsgTFCoaching_RemoveCurrentCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_RemoveCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveCurrentCoach)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServers_ServerInfo();
  
  CMsgTFQuickplay_ScoreServers_ServerInfo(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  
  inline CMsgTFQuickplay_ScoreServers_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServers_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers_ServerInfo& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServers_ServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServers_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional uint32 num_users = 3;
  inline bool has_num_users() const;
  inline void clear_num_users();
  static const int kNumUsersFieldNumber = 3;
  inline ::google::protobuf::uint32 num_users() const;
  inline void set_num_users(::google::protobuf::uint32 value);
  
  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional uint32 max_users = 5;
  inline bool has_max_users() const;
  inline void clear_max_users();
  static const int kMaxUsersFieldNumber = 5;
  inline ::google::protobuf::uint32 max_users() const;
  inline void set_max_users(::google::protobuf::uint32 value);
  
  // optional float user_score = 6;
  inline bool has_user_score() const;
  inline void clear_user_score();
  static const int kUserScoreFieldNumber = 6;
  inline float user_score() const;
  inline void set_user_score(float value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers.ServerInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 num_users_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 max_users_;
  float user_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers();
  virtual ~CMsgTFQuickplay_ScoreServers();
  
  CMsgTFQuickplay_ScoreServers(const CMsgTFQuickplay_ScoreServers& from);
  
  inline CMsgTFQuickplay_ScoreServers& operator=(const CMsgTFQuickplay_ScoreServers& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServers* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServers* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgTFQuickplay_ScoreServers_ServerInfo ServerInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
      mutable_servers();
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo > servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  
  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional float total_score = 3;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 3;
  inline float total_score() const;
  inline void set_total_score(float value);
  
  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional uint32 options_score = 5;
  inline bool has_options_score() const;
  inline void clear_options_score();
  static const int kOptionsScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 options_score() const;
  inline void set_options_score(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse.ServerInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  float total_score_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 options_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse();
  virtual ~CMsgTFQuickplay_ScoreServersResponse();
  
  CMsgTFQuickplay_ScoreServersResponse(const CMsgTFQuickplay_ScoreServersResponse& from);
  
  inline CMsgTFQuickplay_ScoreServersResponse& operator=(const CMsgTFQuickplay_ScoreServersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServersResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgTFQuickplay_ScoreServersResponse_ServerInfo ServerInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
      mutable_servers();
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo > servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_PlayerJoining : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_PlayerJoining();
  virtual ~CMsgTFQuickplay_PlayerJoining();
  
  CMsgTFQuickplay_PlayerJoining(const CMsgTFQuickplay_PlayerJoining& from);
  
  inline CMsgTFQuickplay_PlayerJoining& operator=(const CMsgTFQuickplay_PlayerJoining& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_PlayerJoining& default_instance();
  
  void Swap(CMsgTFQuickplay_PlayerJoining* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_PlayerJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void MergeFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_PlayerJoining)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_PlayerJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_LevelInfo : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_LevelInfo();
  virtual ~CMsgGC_GameServer_LevelInfo();
  
  CMsgGC_GameServer_LevelInfo(const CMsgGC_GameServer_LevelInfo& from);
  
  inline CMsgGC_GameServer_LevelInfo& operator=(const CMsgGC_GameServer_LevelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_LevelInfo& default_instance();
  
  void Swap(CMsgGC_GameServer_LevelInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_LevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_LevelInfo& from);
  void MergeFrom(const CMsgGC_GameServer_LevelInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool level_loaded = 1;
  inline bool has_level_loaded() const;
  inline void clear_level_loaded();
  static const int kLevelLoadedFieldNumber = 1;
  inline bool level_loaded() const;
  inline void set_level_loaded(bool value);
  
  // optional string level_name = 2;
  inline bool has_level_name() const;
  inline void clear_level_name();
  static const int kLevelNameFieldNumber = 2;
  inline const ::std::string& level_name() const;
  inline void set_level_name(const ::std::string& value);
  inline void set_level_name(const char* value);
  inline void set_level_name(const char* value, size_t size);
  inline ::std::string* mutable_level_name();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_LevelInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool level_loaded_;
  ::std::string* level_name_;
  static const ::std::string _default_level_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_LevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallenge : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallenge();
  virtual ~CMsgGC_GameServer_AuthChallenge();
  
  CMsgGC_GameServer_AuthChallenge(const CMsgGC_GameServer_AuthChallenge& from);
  
  inline CMsgGC_GameServer_AuthChallenge& operator=(const CMsgGC_GameServer_AuthChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallenge& default_instance();
  
  void Swap(CMsgGC_GameServer_AuthChallenge* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AuthChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string challenge_string = 1;
  inline bool has_challenge_string() const;
  inline void clear_challenge_string();
  static const int kChallengeStringFieldNumber = 1;
  inline const ::std::string& challenge_string() const;
  inline void set_challenge_string(const ::std::string& value);
  inline void set_challenge_string(const char* value);
  inline void set_challenge_string(const char* value, size_t size);
  inline ::std::string* mutable_challenge_string();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallenge)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* challenge_string_;
  static const ::std::string _default_challenge_string_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthResult : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthResult();
  virtual ~CMsgGC_GameServer_AuthResult();
  
  CMsgGC_GameServer_AuthResult(const CMsgGC_GameServer_AuthResult& from);
  
  inline CMsgGC_GameServer_AuthResult& operator=(const CMsgGC_GameServer_AuthResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthResult& default_instance();
  
  void Swap(CMsgGC_GameServer_AuthResult* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AuthResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthResult& from);
  void MergeFrom(const CMsgGC_GameServer_AuthResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool authenticated = 1;
  inline bool has_authenticated() const;
  inline void clear_authenticated();
  static const int kAuthenticatedFieldNumber = 1;
  inline bool authenticated() const;
  inline void set_authenticated(bool value);
  
  // optional int32 game_server_standing = 2;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 2;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);
  
  // optional int32 game_server_standing_trend = 3;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);
  
  // optional bool is_valve_server = 4;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 4;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);
  
  // optional string message = 5;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 5;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthResult)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool authenticated_;
  ::google::protobuf::int32 game_server_standing_;
  ::google::protobuf::int32 game_server_standing_trend_;
  bool is_valve_server_;
  ::std::string* message_;
  static const ::std::string _default_message_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallengeResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallengeResponse();
  virtual ~CMsgGC_GameServer_AuthChallengeResponse();
  
  CMsgGC_GameServer_AuthChallengeResponse(const CMsgGC_GameServer_AuthChallengeResponse& from);
  
  inline CMsgGC_GameServer_AuthChallengeResponse& operator=(const CMsgGC_GameServer_AuthChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallengeResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_AuthChallengeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AuthChallengeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional bytes hashed_challenge_string = 2;
  inline bool has_hashed_challenge_string() const;
  inline void clear_hashed_challenge_string();
  static const int kHashedChallengeStringFieldNumber = 2;
  inline const ::std::string& hashed_challenge_string() const;
  inline void set_hashed_challenge_string(const ::std::string& value);
  inline void set_hashed_challenge_string(const char* value);
  inline void set_hashed_challenge_string(const void* value, size_t size);
  inline ::std::string* mutable_hashed_challenge_string();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallengeResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* hashed_challenge_string_;
  static const ::std::string _default_hashed_challenge_string_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallengeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentity();
  virtual ~CMsgGC_GameServer_CreateIdentity();
  
  CMsgGC_GameServer_CreateIdentity(const CMsgGC_GameServer_CreateIdentity& from);
  
  inline CMsgGC_GameServer_CreateIdentity& operator=(const CMsgGC_GameServer_CreateIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentity& default_instance();
  
  void Swap(CMsgGC_GameServer_CreateIdentity* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_CreateIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentity)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentityResponse();
  virtual ~CMsgGC_GameServer_CreateIdentityResponse();
  
  CMsgGC_GameServer_CreateIdentityResponse(const CMsgGC_GameServer_CreateIdentityResponse& from);
  
  inline CMsgGC_GameServer_CreateIdentityResponse& operator=(const CMsgGC_GameServer_CreateIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentityResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_CreateIdentityResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_CreateIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_GameServer_CreateIdentityResponse_EStatus EStatus;
  static const EStatus kStatus_GenericFailure = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure;
  static const EStatus kStatus_TooMany = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany;
  static const EStatus kStatus_NoPrivs = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
  static const EStatus kStatus_Created = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
  static inline bool EStatus_IsValid(int value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value);
  }
  static const EStatus EStatus_MIN =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX;
  static const int EStatus_ARRAYSIZE =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional bool account_created = 1;
  inline bool has_account_created() const;
  inline void clear_account_created();
  static const int kAccountCreatedFieldNumber = 1;
  inline bool account_created() const;
  inline void set_account_created(bool value);
  
  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  
  // optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus status() const;
  inline void set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentityResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool account_created_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  static const ::std::string _default_game_server_identity_token_;
  int status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_List : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_List();
  virtual ~CMsgGC_GameServer_List();
  
  CMsgGC_GameServer_List(const CMsgGC_GameServer_List& from);
  
  inline CMsgGC_GameServer_List& operator=(const CMsgGC_GameServer_List& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_List& default_instance();
  
  void Swap(CMsgGC_GameServer_List* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_List& from);
  void MergeFrom(const CMsgGC_GameServer_List& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_List)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_List* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse_GameServerIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse_GameServerIdentity();
  virtual ~CMsgGC_GameServer_ListResponse_GameServerIdentity();
  
  CMsgGC_GameServer_ListResponse_GameServerIdentity(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  
  inline CMsgGC_GameServer_ListResponse_GameServerIdentity& operator=(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse_GameServerIdentity& default_instance();
  
  void Swap(CMsgGC_GameServer_ListResponse_GameServerIdentity* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ListResponse_GameServerIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional string game_server_identity_token = 2;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 2;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  
  // optional int32 game_server_standing = 3;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);
  
  // optional int32 game_server_standing_trend = 4;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 4;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse.GameServerIdentity)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  static const ::std::string _default_game_server_identity_token_;
  ::google::protobuf::int32 game_server_standing_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse_GameServerIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse();
  virtual ~CMsgGC_GameServer_ListResponse();
  
  CMsgGC_GameServer_ListResponse(const CMsgGC_GameServer_ListResponse& from);
  
  inline CMsgGC_GameServer_ListResponse& operator=(const CMsgGC_GameServer_ListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_ListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_GameServer_ListResponse_GameServerIdentity GameServerIdentity;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
  inline int owned_game_servers_size() const;
  inline void clear_owned_game_servers();
  static const int kOwnedGameServersFieldNumber = 1;
  inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& owned_game_servers(int index) const;
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* mutable_owned_game_servers(int index);
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* add_owned_game_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
      owned_game_servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
      mutable_owned_game_servers();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity > owned_game_servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentity();
  virtual ~CMsgGC_GameServer_ResetIdentity();
  
  CMsgGC_GameServer_ResetIdentity(const CMsgGC_GameServer_ResetIdentity& from);
  
  inline CMsgGC_GameServer_ResetIdentity& operator=(const CMsgGC_GameServer_ResetIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentity& default_instance();
  
  void Swap(CMsgGC_GameServer_ResetIdentity* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ResetIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentity)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 game_server_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentityResponse();
  virtual ~CMsgGC_GameServer_ResetIdentityResponse();
  
  CMsgGC_GameServer_ResetIdentityResponse(const CMsgGC_GameServer_ResetIdentityResponse& from);
  
  inline CMsgGC_GameServer_ResetIdentityResponse& operator=(const CMsgGC_GameServer_ResetIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentityResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_ResetIdentityResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ResetIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool game_server_identity_token_reset = 1;
  inline bool has_game_server_identity_token_reset() const;
  inline void clear_game_server_identity_token_reset();
  static const int kGameServerIdentityTokenResetFieldNumber = 1;
  inline bool game_server_identity_token_reset() const;
  inline void set_game_server_identity_token_reset(bool value);
  
  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentityResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool game_server_identity_token_reset_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  static const ::std::string _default_game_server_identity_token_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicy : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AckPolicy();
  virtual ~CMsgGC_GameServer_AckPolicy();
  
  CMsgGC_GameServer_AckPolicy(const CMsgGC_GameServer_AckPolicy& from);
  
  inline CMsgGC_GameServer_AckPolicy& operator=(const CMsgGC_GameServer_AckPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicy& default_instance();
  
  void Swap(CMsgGC_GameServer_AckPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AckPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AckPolicy& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicy)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AckPolicy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicyResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AckPolicyResponse();
  virtual ~CMsgGC_GameServer_AckPolicyResponse();
  
  CMsgGC_GameServer_AckPolicyResponse(const CMsgGC_GameServer_AckPolicyResponse& from);
  
  inline CMsgGC_GameServer_AckPolicyResponse& operator=(const CMsgGC_GameServer_AckPolicyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicyResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_AckPolicyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AckPolicyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicyResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::std::string* message_;
  static const ::std::string _default_message_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AckPolicyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Client_UseServerModificationItem();
  virtual ~CMsgGC_Client_UseServerModificationItem();
  
  CMsgGC_Client_UseServerModificationItem(const CMsgGC_Client_UseServerModificationItem& from);
  
  inline CMsgGC_Client_UseServerModificationItem& operator=(const CMsgGC_Client_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem& default_instance();
  
  void Swap(CMsgGC_Client_UseServerModificationItem* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Client_UseServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 item_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Client_UseServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_Client_UseServerModificationItem_Response();
  virtual ~CMsgGC_Client_UseServerModificationItem_Response();
  
  CMsgGC_Client_UseServerModificationItem_Response(const CMsgGC_Client_UseServerModificationItem_Response& from);
  
  inline CMsgGC_Client_UseServerModificationItem_Response& operator=(const CMsgGC_Client_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem_Response& default_instance();
  
  void Swap(CMsgGC_Client_UseServerModificationItem_Response* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Client_UseServerModificationItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse EServerModificationItemResponse;
  static const EServerModificationItemResponse kServerModificationItemResponse_AlreadyInUse = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
  static const EServerModificationItemResponse kServerModificationItemResponse_NotOnAuthenticatedServer = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer;
  static const EServerModificationItemResponse kServerModificationItemResponse_ServerReject = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject;
  static const EServerModificationItemResponse kServerModificationItemResponse_InternalError = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError;
  static const EServerModificationItemResponse kServerModificationItemResponse_EventAlreadyActive = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
  static inline bool EServerModificationItemResponse_IsValid(int value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value);
  }
  static const EServerModificationItemResponse EServerModificationItemResponse_MIN =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN;
  static const EServerModificationItemResponse EServerModificationItemResponse_MAX =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX;
  static const int EServerModificationItemResponse_ARRAYSIZE =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemResponse_descriptor() {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemResponse_Name(EServerModificationItemResponse value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(value);
  }
  static inline bool EServerModificationItemResponse_Parse(const ::std::string& name,
      EServerModificationItemResponse* value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1 [default = kServerModificationItemResponse_AlreadyInUse];
  inline bool has_response_code() const;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse response_code() const;
  inline void set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem_Response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int response_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Client_UseServerModificationItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_UseServerModificationItem();
  virtual ~CMsgGC_GameServer_UseServerModificationItem();
  
  CMsgGC_GameServer_UseServerModificationItem(const CMsgGC_GameServer_UseServerModificationItem& from);
  
  inline CMsgGC_GameServer_UseServerModificationItem& operator=(const CMsgGC_GameServer_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem& default_instance();
  
  void Swap(CMsgGC_GameServer_UseServerModificationItem* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_UseServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline EServerModificationItemType modification_type() const;
  inline void set_modification_type(EServerModificationItemType value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int modification_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_UseServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_UseServerModificationItem_Response();
  virtual ~CMsgGC_GameServer_UseServerModificationItem_Response();
  
  CMsgGC_GameServer_UseServerModificationItem_Response(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  
  inline CMsgGC_GameServer_UseServerModificationItem_Response& operator=(const CMsgGC_GameServer_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem_Response& default_instance();
  
  void Swap(CMsgGC_GameServer_UseServerModificationItem_Response* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_UseServerModificationItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse EServerModificationItemServerResponse;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_Accepted = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_NoVoteCalled = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_VoteFailed = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
  static inline bool EServerModificationItemServerResponse_IsValid(int value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value);
  }
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MIN =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN;
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MAX =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX;
  static const int EServerModificationItemServerResponse_ARRAYSIZE =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemServerResponse_descriptor() {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemServerResponse_Name(EServerModificationItemServerResponse value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(value);
  }
  static inline bool EServerModificationItemServerResponse_Parse(const ::std::string& name,
      EServerModificationItemServerResponse* value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline EServerModificationItemType modification_type() const;
  inline void set_modification_type(EServerModificationItemType value);
  
  // optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2 [default = kServerModificationItemServerResponse_Accepted];
  inline bool has_server_response_code() const;
  inline void clear_server_response_code();
  static const int kServerResponseCodeFieldNumber = 2;
  inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse server_response_code() const;
  inline void set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem_Response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int modification_type_;
  int server_response_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_UseServerModificationItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItemExpired : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ServerModificationItemExpired();
  virtual ~CMsgGC_GameServer_ServerModificationItemExpired();
  
  CMsgGC_GameServer_ServerModificationItemExpired(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  
  inline CMsgGC_GameServer_ServerModificationItemExpired& operator=(const CMsgGC_GameServer_ServerModificationItemExpired& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItemExpired& default_instance();
  
  void Swap(CMsgGC_GameServer_ServerModificationItemExpired* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ServerModificationItemExpired* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline EServerModificationItemType modification_type() const;
  inline void set_modification_type(EServerModificationItemType value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItemExpired)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int modification_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ServerModificationItemExpired* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ServerModificationItem();
  virtual ~CMsgGC_GameServer_ServerModificationItem();
  
  CMsgGC_GameServer_ServerModificationItem(const CMsgGC_GameServer_ServerModificationItem& from);
  
  inline CMsgGC_GameServer_ServerModificationItem& operator=(const CMsgGC_GameServer_ServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItem& default_instance();
  
  void Swap(CMsgGC_GameServer_ServerModificationItem* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline EServerModificationItemType modification_type() const;
  inline void set_modification_type(EServerModificationItemType value);
  
  // optional bool active = 2;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 2;
  inline bool active() const;
  inline void set_active(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int modification_type_;
  bool active_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ReservedItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_ReservedItem();
  virtual ~CMsgGC_Halloween_ReservedItem();
  
  CMsgGC_Halloween_ReservedItem(const CMsgGC_Halloween_ReservedItem& from);
  
  inline CMsgGC_Halloween_ReservedItem& operator=(const CMsgGC_Halloween_ReservedItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ReservedItem& default_instance();
  
  void Swap(CMsgGC_Halloween_ReservedItem* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Halloween_ReservedItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_ReservedItem& from);
  void MergeFrom(const CMsgGC_Halloween_ReservedItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated float x = 1;
  inline int x_size() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x(int index) const;
  inline void set_x(int index, float value);
  inline void add_x(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      x() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_x();
  
  // repeated float y = 2;
  inline int y_size() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y(int index) const;
  inline void set_y(int index, float value);
  inline void add_y(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      y() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_y();
  
  // repeated float z = 3;
  inline int z_size() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z(int index) const;
  inline void set_z(int index, float value);
  inline void add_z(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      z() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_z();
  
  // optional uint32 spawn_meta_info = 7;
  inline bool has_spawn_meta_info() const;
  inline void clear_spawn_meta_info();
  static const int kSpawnMetaInfoFieldNumber = 7;
  inline ::google::protobuf::uint32 spawn_meta_info() const;
  inline void set_spawn_meta_info(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ReservedItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< float > x_;
  ::google::protobuf::RepeatedField< float > y_;
  ::google::protobuf::RepeatedField< float > z_;
  ::google::protobuf::uint32 spawn_meta_info_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Halloween_ReservedItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_GrantItem();
  virtual ~CMsgGC_Halloween_GrantItem();
  
  CMsgGC_Halloween_GrantItem(const CMsgGC_Halloween_GrantItem& from);
  
  inline CMsgGC_Halloween_GrantItem& operator=(const CMsgGC_Halloween_GrantItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItem& default_instance();
  
  void Swap(CMsgGC_Halloween_GrantItem* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Halloween_GrantItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_GrantItem& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 level_id = 2;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 2;
  inline ::google::protobuf::uint32 level_id() const;
  inline void set_level_id(::google::protobuf::uint32 value);
  
  // optional bool flagged = 3;
  inline bool has_flagged() const;
  inline void clear_flagged();
  static const int kFlaggedFieldNumber = 3;
  inline bool flagged() const;
  inline void set_flagged(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 level_id_;
  bool flagged_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Halloween_GrantItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItemResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_GrantItemResponse();
  virtual ~CMsgGC_Halloween_GrantItemResponse();
  
  CMsgGC_Halloween_GrantItemResponse(const CMsgGC_Halloween_GrantItemResponse& from);
  
  inline CMsgGC_Halloween_GrantItemResponse& operator=(const CMsgGC_Halloween_GrantItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItemResponse& default_instance();
  
  void Swap(CMsgGC_Halloween_GrantItemResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Halloween_GrantItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItemResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 recipient_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Halloween_GrantItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ItemClaimed : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_ItemClaimed();
  virtual ~CMsgGC_Halloween_ItemClaimed();
  
  CMsgGC_Halloween_ItemClaimed(const CMsgGC_Halloween_ItemClaimed& from);
  
  inline CMsgGC_Halloween_ItemClaimed& operator=(const CMsgGC_Halloween_ItemClaimed& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ItemClaimed& default_instance();
  
  void Swap(CMsgGC_Halloween_ItemClaimed* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Halloween_ItemClaimed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void MergeFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ItemClaimed)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Halloween_ItemClaimed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_Query : public ::google::protobuf::Message {
 public:
  CMsgGC_PickupItemEligibility_Query();
  virtual ~CMsgGC_PickupItemEligibility_Query();
  
  CMsgGC_PickupItemEligibility_Query(const CMsgGC_PickupItemEligibility_Query& from);
  
  inline CMsgGC_PickupItemEligibility_Query& operator=(const CMsgGC_PickupItemEligibility_Query& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_Query& default_instance();
  
  void Swap(CMsgGC_PickupItemEligibility_Query* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_PickupItemEligibility_Query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 seconds_ago = 2;
  inline bool has_seconds_ago() const;
  inline void clear_seconds_ago();
  static const int kSecondsAgoFieldNumber = 2;
  inline ::google::protobuf::uint32 seconds_ago() const;
  inline void set_seconds_ago(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_Query)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seconds_ago_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_PickupItemEligibility_Query* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_QueryResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_PickupItemEligibility_QueryResponse();
  virtual ~CMsgGC_PickupItemEligibility_QueryResponse();
  
  CMsgGC_PickupItemEligibility_QueryResponse(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  
  inline CMsgGC_PickupItemEligibility_QueryResponse& operator=(const CMsgGC_PickupItemEligibility_QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_QueryResponse& default_instance();
  
  void Swap(CMsgGC_PickupItemEligibility_QueryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_PickupItemEligibility_QueryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional bool was_eligible = 2;
  inline bool has_was_eligible() const;
  inline void clear_was_eligible();
  static const int kWasEligibleFieldNumber = 2;
  inline bool was_eligible() const;
  inline void set_was_eligible(bool value);
  
  // optional uint32 level_id = 3;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 level_id() const;
  inline void set_level_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_QueryResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  bool was_eligible_;
  ::google::protobuf::uint32 level_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_PickupItemEligibility_QueryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyMember : public ::google::protobuf::Message {
 public:
  CSOTFPartyMember();
  virtual ~CSOTFPartyMember();
  
  CSOTFPartyMember(const CSOTFPartyMember& from);
  
  inline CSOTFPartyMember& operator=(const CSOTFPartyMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyMember& default_instance();
  
  void Swap(CSOTFPartyMember* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFPartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyMember& from);
  void MergeFrom(const CSOTFPartyMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool owns_ticket = 2;
  inline bool has_owns_ticket() const;
  inline void clear_owns_ticket();
  static const int kOwnsTicketFieldNumber = 2;
  inline bool owns_ticket() const;
  inline void set_owns_ticket(bool value);
  
  // optional uint32 completed_missions = 3;
  inline bool has_completed_missions() const;
  inline void clear_completed_missions();
  static const int kCompletedMissionsFieldNumber = 3;
  inline ::google::protobuf::uint32 completed_missions() const;
  inline void set_completed_missions(::google::protobuf::uint32 value);
  
  // optional uint32 badge_level = 4;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);
  
  // optional bool squad_surplus = 5;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 5;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);
  
  // optional bool is_banned = 8 [default = false];
  inline bool has_is_banned() const;
  inline void clear_is_banned();
  static const int kIsBannedFieldNumber = 8;
  inline bool is_banned() const;
  inline void set_is_banned(bool value);
  
  // optional bool competitive_access = 9;
  inline bool has_competitive_access() const;
  inline void clear_competitive_access();
  static const int kCompetitiveAccessFieldNumber = 9;
  inline bool competitive_access() const;
  inline void set_competitive_access(bool value);
  
  // optional uint32 ladder_rank = 12;
  inline bool has_ladder_rank() const;
  inline void clear_ladder_rank();
  static const int kLadderRankFieldNumber = 12;
  inline ::google::protobuf::uint32 ladder_rank() const;
  inline void set_ladder_rank(::google::protobuf::uint32 value);
  
  // optional bool is_low_priority = 13 [default = false];
  inline bool has_is_low_priority() const;
  inline void clear_is_low_priority();
  static const int kIsLowPriorityFieldNumber = 13;
  inline bool is_low_priority() const;
  inline void set_is_low_priority(bool value);
  
  // optional uint32 experience = 14;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 14;
  inline ::google::protobuf::uint32 experience() const;
  inline void set_experience(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFPartyMember)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool owns_ticket_;
  ::google::protobuf::uint32 completed_missions_;
  ::google::protobuf::uint32 badge_level_;
  bool squad_surplus_;
  bool is_banned_;
  bool competitive_access_;
  ::google::protobuf::uint32 ladder_rank_;
  bool is_low_priority_;
  ::google::protobuf::uint32 experience_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFPartyMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchSearchCriteria : public ::google::protobuf::Message {
 public:
  CMsgMatchSearchCriteria();
  virtual ~CMsgMatchSearchCriteria();
  
  CMsgMatchSearchCriteria(const CMsgMatchSearchCriteria& from);
  
  inline CMsgMatchSearchCriteria& operator=(const CMsgMatchSearchCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchSearchCriteria& default_instance();
  
  void Swap(CMsgMatchSearchCriteria* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMatchSearchCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchSearchCriteria& from);
  void MergeFrom(const CMsgMatchSearchCriteria& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .TF_MatchmakingMode matchmaking_mode = 7 [default = TF_Matchmaking_INVALID];
  inline bool has_matchmaking_mode() const;
  inline void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 7;
  inline TF_MatchmakingMode matchmaking_mode() const;
  inline void set_matchmaking_mode(TF_MatchmakingMode value);
  
  // optional bool late_join_ok = 5;
  inline bool has_late_join_ok() const;
  inline void clear_late_join_ok();
  static const int kLateJoinOkFieldNumber = 5;
  inline bool late_join_ok() const;
  inline void set_late_join_ok(bool value);
  
  // optional string mvm_mannup_tour = 10;
  inline bool has_mvm_mannup_tour() const;
  inline void clear_mvm_mannup_tour();
  static const int kMvmMannupTourFieldNumber = 10;
  inline const ::std::string& mvm_mannup_tour() const;
  inline void set_mvm_mannup_tour(const ::std::string& value);
  inline void set_mvm_mannup_tour(const char* value);
  inline void set_mvm_mannup_tour(const char* value, size_t size);
  inline ::std::string* mutable_mvm_mannup_tour();
  
  // repeated string mvm_missions = 9;
  inline int mvm_missions_size() const;
  inline void clear_mvm_missions();
  static const int kMvmMissionsFieldNumber = 9;
  inline const ::std::string& mvm_missions(int index) const;
  inline ::std::string* mutable_mvm_missions(int index);
  inline void set_mvm_missions(int index, const ::std::string& value);
  inline void set_mvm_missions(int index, const char* value);
  inline void set_mvm_missions(int index, const char* value, size_t size);
  inline ::std::string* add_mvm_missions();
  inline void add_mvm_missions(const ::std::string& value);
  inline void add_mvm_missions(const char* value);
  inline void add_mvm_missions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& mvm_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mvm_missions();
  
  // optional bool play_for_bragging_rights = 6;
  inline bool has_play_for_bragging_rights() const;
  inline void clear_play_for_bragging_rights();
  static const int kPlayForBraggingRightsFieldNumber = 6;
  inline bool play_for_bragging_rights() const;
  inline void set_play_for_bragging_rights(bool value);
  
  // optional uint32 quickplay_game_type = 8;
  inline bool has_quickplay_game_type() const;
  inline void clear_quickplay_game_type();
  static const int kQuickplayGameTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 quickplay_game_type() const;
  inline void set_quickplay_game_type(::google::protobuf::uint32 value);
  
  // optional uint32 ladder_game_type = 11;
  inline bool has_ladder_game_type() const;
  inline void clear_ladder_game_type();
  static const int kLadderGameTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 ladder_game_type() const;
  inline void set_ladder_game_type(::google::protobuf::uint32 value);
  
  // optional .CMsgCasualMatchmakingSearchCriteria casual_criteria = 12;
  inline bool has_casual_criteria() const;
  inline void clear_casual_criteria();
  static const int kCasualCriteriaFieldNumber = 12;
  inline const ::CMsgCasualMatchmakingSearchCriteria& casual_criteria() const;
  inline ::CMsgCasualMatchmakingSearchCriteria* mutable_casual_criteria();
  
  // @@protoc_insertion_point(class_scope:CMsgMatchSearchCriteria)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int matchmaking_mode_;
  bool late_join_ok_;
  ::std::string* mvm_mannup_tour_;
  static const ::std::string _default_mvm_mannup_tour_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mvm_missions_;
  bool play_for_bragging_rights_;
  ::google::protobuf::uint32 quickplay_game_type_;
  ::google::protobuf::uint32 ladder_game_type_;
  ::CMsgCasualMatchmakingSearchCriteria* casual_criteria_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMatchSearchCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCasualMatchmakingSearchCriteria : public ::google::protobuf::Message {
 public:
  CMsgCasualMatchmakingSearchCriteria();
  virtual ~CMsgCasualMatchmakingSearchCriteria();
  
  CMsgCasualMatchmakingSearchCriteria(const CMsgCasualMatchmakingSearchCriteria& from);
  
  inline CMsgCasualMatchmakingSearchCriteria& operator=(const CMsgCasualMatchmakingSearchCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCasualMatchmakingSearchCriteria& default_instance();
  
  void Swap(CMsgCasualMatchmakingSearchCriteria* other);
  
  // implements Message ----------------------------------------------
  
  CMsgCasualMatchmakingSearchCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCasualMatchmakingSearchCriteria& from);
  void MergeFrom(const CMsgCasualMatchmakingSearchCriteria& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated fixed32 selected_maps_bits = 3;
  inline int selected_maps_bits_size() const;
  inline void clear_selected_maps_bits();
  static const int kSelectedMapsBitsFieldNumber = 3;
  inline ::google::protobuf::uint32 selected_maps_bits(int index) const;
  inline void set_selected_maps_bits(int index, ::google::protobuf::uint32 value);
  inline void add_selected_maps_bits(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      selected_maps_bits() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_selected_maps_bits();
  
  // @@protoc_insertion_point(class_scope:CMsgCasualMatchmakingSearchCriteria)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > selected_maps_bits_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgCasualMatchmakingSearchCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCreateOrUpdateParty : public ::google::protobuf::Message {
 public:
  CMsgCreateOrUpdateParty();
  virtual ~CMsgCreateOrUpdateParty();
  
  CMsgCreateOrUpdateParty(const CMsgCreateOrUpdateParty& from);
  
  inline CMsgCreateOrUpdateParty& operator=(const CMsgCreateOrUpdateParty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCreateOrUpdateParty& default_instance();
  
  void Swap(CMsgCreateOrUpdateParty* other);
  
  // implements Message ----------------------------------------------
  
  CMsgCreateOrUpdateParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCreateOrUpdateParty& from);
  void MergeFrom(const CMsgCreateOrUpdateParty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMsgMatchSearchCriteria search_criteria = 1;
  inline bool has_search_criteria() const;
  inline void clear_search_criteria();
  static const int kSearchCriteriaFieldNumber = 1;
  inline const ::CMsgMatchSearchCriteria& search_criteria() const;
  inline ::CMsgMatchSearchCriteria* mutable_search_criteria();
  
  // optional fixed64 steam_lobby_id = 3;
  inline bool has_steam_lobby_id() const;
  inline void clear_steam_lobby_id();
  static const int kSteamLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_lobby_id() const;
  inline void set_steam_lobby_id(::google::protobuf::uint64 value);
  
  // optional bool squad_surplus = 4;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 4;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);
  
  // optional .TF_Matchmaking_WizardStep wizard_step = 5 [default = TF_Matchmaking_WizardStep_INVALID];
  inline bool has_wizard_step() const;
  inline void clear_wizard_step();
  static const int kWizardStepFieldNumber = 5;
  inline TF_Matchmaking_WizardStep wizard_step() const;
  inline void set_wizard_step(TF_Matchmaking_WizardStep value);
  
  // optional uint32 client_version = 6 [default = 1225];
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgCreateOrUpdateParty)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMsgMatchSearchCriteria* search_criteria_;
  ::google::protobuf::uint64 steam_lobby_id_;
  bool squad_surplus_;
  int wizard_step_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgCreateOrUpdateParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCreateOrUpdatePartyReply : public ::google::protobuf::Message {
 public:
  CMsgCreateOrUpdatePartyReply();
  virtual ~CMsgCreateOrUpdatePartyReply();
  
  CMsgCreateOrUpdatePartyReply(const CMsgCreateOrUpdatePartyReply& from);
  
  inline CMsgCreateOrUpdatePartyReply& operator=(const CMsgCreateOrUpdatePartyReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCreateOrUpdatePartyReply& default_instance();
  
  void Swap(CMsgCreateOrUpdatePartyReply* other);
  
  // implements Message ----------------------------------------------
  
  CMsgCreateOrUpdatePartyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCreateOrUpdatePartyReply& from);
  void MergeFrom(const CMsgCreateOrUpdatePartyReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  
  // optional .TF_Matchmaking_WizardStep wizard_step = 3 [default = TF_Matchmaking_WizardStep_INVALID];
  inline bool has_wizard_step() const;
  inline void clear_wizard_step();
  static const int kWizardStepFieldNumber = 3;
  inline TF_Matchmaking_WizardStep wizard_step() const;
  inline void set_wizard_step(TF_Matchmaking_WizardStep value);
  
  // @@protoc_insertion_point(class_scope:CMsgCreateOrUpdatePartyReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::std::string* message_;
  static const ::std::string _default_message_;
  int wizard_step_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgCreateOrUpdatePartyReply* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFParty : public ::google::protobuf::Message {
 public:
  CSOTFParty();
  virtual ~CSOTFParty();
  
  CSOTFParty(const CSOTFParty& from);
  
  inline CSOTFParty& operator=(const CSOTFParty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFParty& default_instance();
  
  void Swap(CSOTFParty* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFParty& from);
  void MergeFrom(const CSOTFParty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSOTFParty_State State;
  static const State UI = CSOTFParty_State_UI;
  static const State FINDING_MATCH = CSOTFParty_State_FINDING_MATCH;
  static const State IN_MATCH = CSOTFParty_State_IN_MATCH;
  static const State AWAITING_RESERVATION_CONFIRMATION = CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION;
  static inline bool State_IsValid(int value) {
    return CSOTFParty_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFParty_State_State_MIN;
  static const State State_MAX =
    CSOTFParty_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFParty_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFParty_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFParty_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFParty_State_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);
  
  // optional fixed64 leader_id = 2;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 leader_id() const;
  inline void set_leader_id(::google::protobuf::uint64 value);
  
  // repeated fixed64 member_ids = 3;
  inline int member_ids_size() const;
  inline void clear_member_ids();
  static const int kMemberIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 member_ids(int index) const;
  inline void set_member_ids(int index, ::google::protobuf::uint64 value);
  inline void add_member_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      member_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_member_ids();
  
  // repeated .CSOTFPartyMember members = 13;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 13;
  inline const ::CSOTFPartyMember& members(int index) const;
  inline ::CSOTFPartyMember* mutable_members(int index);
  inline ::CSOTFPartyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
      mutable_members();
  
  // repeated fixed64 pending_invites = 5;
  inline int pending_invites_size() const;
  inline void clear_pending_invites();
  static const int kPendingInvitesFieldNumber = 5;
  inline ::google::protobuf::uint64 pending_invites(int index) const;
  inline void set_pending_invites(int index, ::google::protobuf::uint64 value);
  inline void add_pending_invites(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pending_invites() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pending_invites();
  
  // optional .CSOTFParty.State state = 6 [default = UI];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::CSOTFParty_State state() const;
  inline void set_state(::CSOTFParty_State value);
  
  // optional .TF_Matchmaking_WizardStep wizard_step = 29 [default = TF_Matchmaking_WizardStep_INVALID];
  inline bool has_wizard_step() const;
  inline void clear_wizard_step();
  static const int kWizardStepFieldNumber = 29;
  inline TF_Matchmaking_WizardStep wizard_step() const;
  inline void set_wizard_step(TF_Matchmaking_WizardStep value);
  
  // optional uint32 started_matchmaking_time = 7;
  inline bool has_started_matchmaking_time() const;
  inline void clear_started_matchmaking_time();
  static const int kStartedMatchmakingTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 started_matchmaking_time() const;
  inline void set_started_matchmaking_time(::google::protobuf::uint32 value);
  
  // repeated uint32 searching_players_by_group = 10;
  inline int searching_players_by_group_size() const;
  inline void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 10;
  inline ::google::protobuf::uint32 searching_players_by_group(int index) const;
  inline void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();
  
  // optional fixed64 steam_lobby_id = 27;
  inline bool has_steam_lobby_id() const;
  inline void clear_steam_lobby_id();
  static const int kSteamLobbyIdFieldNumber = 27;
  inline ::google::protobuf::uint64 steam_lobby_id() const;
  inline void set_steam_lobby_id(::google::protobuf::uint64 value);
  
  // optional .TF_MatchmakingMode matchmaking_mode = 30 [default = TF_Matchmaking_INVALID];
  inline bool has_matchmaking_mode() const;
  inline void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 30;
  inline TF_MatchmakingMode matchmaking_mode() const;
  inline void set_matchmaking_mode(TF_MatchmakingMode value);
  
  // optional bool search_late_join_ok = 23;
  inline bool has_search_late_join_ok() const;
  inline void clear_search_late_join_ok();
  static const int kSearchLateJoinOkFieldNumber = 23;
  inline bool search_late_join_ok() const;
  inline void set_search_late_join_ok(bool value);
  
  // optional string search_mvm_mannup_tour = 32;
  inline bool has_search_mvm_mannup_tour() const;
  inline void clear_search_mvm_mannup_tour();
  static const int kSearchMvmMannupTourFieldNumber = 32;
  inline const ::std::string& search_mvm_mannup_tour() const;
  inline void set_search_mvm_mannup_tour(const ::std::string& value);
  inline void set_search_mvm_mannup_tour(const char* value);
  inline void set_search_mvm_mannup_tour(const char* value, size_t size);
  inline ::std::string* mutable_search_mvm_mannup_tour();
  
  // repeated string search_mvm_missions = 31;
  inline int search_mvm_missions_size() const;
  inline void clear_search_mvm_missions();
  static const int kSearchMvmMissionsFieldNumber = 31;
  inline const ::std::string& search_mvm_missions(int index) const;
  inline ::std::string* mutable_search_mvm_missions(int index);
  inline void set_search_mvm_missions(int index, const ::std::string& value);
  inline void set_search_mvm_missions(int index, const char* value);
  inline void set_search_mvm_missions(int index, const char* value, size_t size);
  inline ::std::string* add_search_mvm_missions();
  inline void add_search_mvm_missions(const ::std::string& value);
  inline void add_search_mvm_missions(const char* value);
  inline void add_search_mvm_missions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& search_mvm_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_search_mvm_missions();
  
  // optional bool search_play_for_bragging_rights = 26;
  inline bool has_search_play_for_bragging_rights() const;
  inline void clear_search_play_for_bragging_rights();
  static const int kSearchPlayForBraggingRightsFieldNumber = 26;
  inline bool search_play_for_bragging_rights() const;
  inline void set_search_play_for_bragging_rights(bool value);
  
  // optional uint32 search_quickplay_game_type = 28;
  inline bool has_search_quickplay_game_type() const;
  inline void clear_search_quickplay_game_type();
  static const int kSearchQuickplayGameTypeFieldNumber = 28;
  inline ::google::protobuf::uint32 search_quickplay_game_type() const;
  inline void set_search_quickplay_game_type(::google::protobuf::uint32 value);
  
  // optional uint32 search_ladder_game_type = 33;
  inline bool has_search_ladder_game_type() const;
  inline void clear_search_ladder_game_type();
  static const int kSearchLadderGameTypeFieldNumber = 33;
  inline ::google::protobuf::uint32 search_ladder_game_type() const;
  inline void set_search_ladder_game_type(::google::protobuf::uint32 value);
  
  // optional .CMsgCasualMatchmakingSearchCriteria search_casual = 34;
  inline bool has_search_casual() const;
  inline void clear_search_casual();
  static const int kSearchCasualFieldNumber = 34;
  inline const ::CMsgCasualMatchmakingSearchCriteria& search_casual() const;
  inline ::CMsgCasualMatchmakingSearchCriteria* mutable_search_casual();
  
  // optional uint32 matchmaking_ban_time = 18;
  inline bool has_matchmaking_ban_time() const;
  inline void clear_matchmaking_ban_time();
  static const int kMatchmakingBanTimeFieldNumber = 18;
  inline ::google::protobuf::uint32 matchmaking_ban_time() const;
  inline void set_matchmaking_ban_time(::google::protobuf::uint32 value);
  
  // optional uint32 matchmaking_ban_account_id = 19;
  inline bool has_matchmaking_ban_account_id() const;
  inline void clear_matchmaking_ban_account_id();
  static const int kMatchmakingBanAccountIdFieldNumber = 19;
  inline ::google::protobuf::uint32 matchmaking_ban_account_id() const;
  inline void set_matchmaking_ban_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 matchmaking_low_priority_time = 20;
  inline bool has_matchmaking_low_priority_time() const;
  inline void clear_matchmaking_low_priority_time();
  static const int kMatchmakingLowPriorityTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 matchmaking_low_priority_time() const;
  inline void set_matchmaking_low_priority_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFParty)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 leader_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > member_ids_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember > members_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pending_invites_;
  int state_;
  int wizard_step_;
  ::google::protobuf::uint32 started_matchmaking_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  ::google::protobuf::uint64 steam_lobby_id_;
  int matchmaking_mode_;
  bool search_late_join_ok_;
  ::std::string* search_mvm_mannup_tour_;
  static const ::std::string _default_search_mvm_mannup_tour_;
  ::google::protobuf::RepeatedPtrField< ::std::string> search_mvm_missions_;
  bool search_play_for_bragging_rights_;
  ::google::protobuf::uint32 search_quickplay_game_type_;
  ::google::protobuf::uint32 search_ladder_game_type_;
  ::CMsgCasualMatchmakingSearchCriteria* search_casual_;
  ::google::protobuf::uint32 matchmaking_ban_time_;
  ::google::protobuf::uint32 matchmaking_ban_account_id_;
  ::google::protobuf::uint32 matchmaking_low_priority_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFParty* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyInvite_PartyMember : public ::google::protobuf::Message {
 public:
  CSOTFPartyInvite_PartyMember();
  virtual ~CSOTFPartyInvite_PartyMember();
  
  CSOTFPartyInvite_PartyMember(const CSOTFPartyInvite_PartyMember& from);
  
  inline CSOTFPartyInvite_PartyMember& operator=(const CSOTFPartyInvite_PartyMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite_PartyMember& default_instance();
  
  void Swap(CSOTFPartyInvite_PartyMember* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFPartyInvite_PartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyInvite_PartyMember& from);
  void MergeFrom(const CSOTFPartyInvite_PartyMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional fixed64 steam_id = 2;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional uint32 avatar = 3;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite.PartyMember)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 avatar_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFPartyInvite_PartyMember* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyInvite : public ::google::protobuf::Message {
 public:
  CSOTFPartyInvite();
  virtual ~CSOTFPartyInvite();
  
  CSOTFPartyInvite(const CSOTFPartyInvite& from);
  
  inline CSOTFPartyInvite& operator=(const CSOTFPartyInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite& default_instance();
  
  void Swap(CSOTFPartyInvite* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFPartyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyInvite& from);
  void MergeFrom(const CSOTFPartyInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSOTFPartyInvite_PartyMember PartyMember;
  
  // accessors -------------------------------------------------------
  
  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);
  
  // optional fixed64 sender_id = 2;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sender_id() const;
  inline void set_sender_id(::google::protobuf::uint64 value);
  
  // optional string sender_name = 3;
  inline bool has_sender_name() const;
  inline void clear_sender_name();
  static const int kSenderNameFieldNumber = 3;
  inline const ::std::string& sender_name() const;
  inline void set_sender_name(const ::std::string& value);
  inline void set_sender_name(const char* value);
  inline void set_sender_name(const char* value, size_t size);
  inline ::std::string* mutable_sender_name();
  
  // repeated .CSOTFPartyInvite.PartyMember members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::CSOTFPartyInvite_PartyMember& members(int index) const;
  inline ::CSOTFPartyInvite_PartyMember* mutable_members(int index);
  inline ::CSOTFPartyInvite_PartyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
      mutable_members();
  
  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 sender_id_;
  ::std::string* sender_name_;
  static const ::std::string _default_sender_name_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember > members_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFPartyInvite* default_instance_;
};
// -------------------------------------------------------------------

class CTFLobbyMember : public ::google::protobuf::Message {
 public:
  CTFLobbyMember();
  virtual ~CTFLobbyMember();
  
  CTFLobbyMember(const CTFLobbyMember& from);
  
  inline CTFLobbyMember& operator=(const CTFLobbyMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFLobbyMember& default_instance();
  
  void Swap(CTFLobbyMember* other);
  
  // implements Message ----------------------------------------------
  
  CTFLobbyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFLobbyMember& from);
  void MergeFrom(const CTFLobbyMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CTFLobbyMember_ConnectState ConnectState;
  static const ConnectState INVALID = CTFLobbyMember_ConnectState_INVALID;
  static const ConnectState RESERVATION_PENDING = CTFLobbyMember_ConnectState_RESERVATION_PENDING;
  static const ConnectState RESERVED = CTFLobbyMember_ConnectState_RESERVED;
  static const ConnectState CONNECTED = CTFLobbyMember_ConnectState_CONNECTED;
  static const ConnectState DISCONNECTED = CTFLobbyMember_ConnectState_DISCONNECTED;
  static inline bool ConnectState_IsValid(int value) {
    return CTFLobbyMember_ConnectState_IsValid(value);
  }
  static const ConnectState ConnectState_MIN =
    CTFLobbyMember_ConnectState_ConnectState_MIN;
  static const ConnectState ConnectState_MAX =
    CTFLobbyMember_ConnectState_ConnectState_MAX;
  static const int ConnectState_ARRAYSIZE =
    CTFLobbyMember_ConnectState_ConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectState_descriptor() {
    return CTFLobbyMember_ConnectState_descriptor();
  }
  static inline const ::std::string& ConnectState_Name(ConnectState value) {
    return CTFLobbyMember_ConnectState_Name(value);
  }
  static inline bool ConnectState_Parse(const ::std::string& name,
      ConnectState* value) {
    return CTFLobbyMember_ConnectState_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // optional .TF_GC_TEAM team = 3 [default = TF_GC_TEAM_DEFENDERS];
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline TF_GC_TEAM team() const;
  inline void set_team(TF_GC_TEAM value);
  
  // optional .CTFLobbyMember.ConnectState connect_state = 13 [default = INVALID];
  inline bool has_connect_state() const;
  inline void clear_connect_state();
  static const int kConnectStateFieldNumber = 13;
  inline ::CTFLobbyMember_ConnectState connect_state() const;
  inline void set_connect_state(::CTFLobbyMember_ConnectState value);
  
  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional float latitude = 8;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 8;
  inline float latitude() const;
  inline void set_latitude(float value);
  
  // optional float longitude = 9;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 9;
  inline float longitude() const;
  inline void set_longitude(float value);
  
  // optional .TFLobbyReadyState ready_state = 11 [default = TFLobbyReadyState_UNDECLARED];
  inline bool has_ready_state() const;
  inline void clear_ready_state();
  static const int kReadyStateFieldNumber = 11;
  inline TFLobbyReadyState ready_state() const;
  inline void set_ready_state(TFLobbyReadyState value);
  
  // optional uint64 party_id = 12;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 12;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);
  
  // optional bool squad_surplus = 14;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 14;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);
  
  // optional uint32 badge_level = 15;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);
  
  // optional uint32 last_connect_time = 17;
  inline bool has_last_connect_time() const;
  inline void clear_last_connect_time();
  static const int kLastConnectTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 last_connect_time() const;
  inline void set_last_connect_time(::google::protobuf::uint32 value);
  
  // optional bool premade_leader = 19;
  inline bool has_premade_leader() const;
  inline void clear_premade_leader();
  static const int kPremadeLeaderFieldNumber = 19;
  inline bool premade_leader() const;
  inline void set_premade_leader(bool value);
  
  // @@protoc_insertion_point(class_scope:CTFLobbyMember)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_;
  int team_;
  int connect_state_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  float latitude_;
  float longitude_;
  int ready_state_;
  ::google::protobuf::uint64 party_id_;
  bool squad_surplus_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 last_connect_time_;
  bool premade_leader_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CTFLobbyMember* default_instance_;
};
// -------------------------------------------------------------------

class CLobbyPendingPlayerReport : public ::google::protobuf::Message {
 public:
  CLobbyPendingPlayerReport();
  virtual ~CLobbyPendingPlayerReport();
  
  CLobbyPendingPlayerReport(const CLobbyPendingPlayerReport& from);
  
  inline CLobbyPendingPlayerReport& operator=(const CLobbyPendingPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CLobbyPendingPlayerReport& default_instance();
  
  void Swap(CLobbyPendingPlayerReport* other);
  
  // implements Message ----------------------------------------------
  
  CLobbyPendingPlayerReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLobbyPendingPlayerReport& from);
  void MergeFrom(const CLobbyPendingPlayerReport& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional fixed32 date = 2;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 2;
  inline ::google::protobuf::uint32 date() const;
  inline void set_date(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CLobbyPendingPlayerReport)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 date_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CLobbyPendingPlayerReport* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFLobby : public ::google::protobuf::Message {
 public:
  CSOTFLobby();
  virtual ~CSOTFLobby();
  
  CSOTFLobby(const CSOTFLobby& from);
  
  inline CSOTFLobby& operator=(const CSOTFLobby& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFLobby& default_instance();
  
  void Swap(CSOTFLobby* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFLobby& from);
  void MergeFrom(const CSOTFLobby& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSOTFLobby_State State;
  static const State SERVERSETUP = CSOTFLobby_State_SERVERSETUP;
  static const State RUN = CSOTFLobby_State_RUN;
  static const State POSTGAME = CSOTFLobby_State_POSTGAME;
  static const State NOTREADY = CSOTFLobby_State_NOTREADY;
  static const State SERVERASSIGN = CSOTFLobby_State_SERVERASSIGN;
  static inline bool State_IsValid(int value) {
    return CSOTFLobby_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFLobby_State_State_MIN;
  static const State State_MAX =
    CSOTFLobby_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFLobby_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFLobby_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFLobby_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFLobby_State_Parse(name, value);
  }
  
  typedef CSOTFLobby_LobbyType LobbyType;
  static const LobbyType INVALID = CSOTFLobby_LobbyType_INVALID;
  static const LobbyType MATCH = CSOTFLobby_LobbyType_MATCH;
  static const LobbyType PRACTICE = CSOTFLobby_LobbyType_PRACTICE;
  static const LobbyType TOURNAMENT = CSOTFLobby_LobbyType_TOURNAMENT;
  static const LobbyType TUTORIAL = CSOTFLobby_LobbyType_TUTORIAL;
  static inline bool LobbyType_IsValid(int value) {
    return CSOTFLobby_LobbyType_IsValid(value);
  }
  static const LobbyType LobbyType_MIN =
    CSOTFLobby_LobbyType_LobbyType_MIN;
  static const LobbyType LobbyType_MAX =
    CSOTFLobby_LobbyType_LobbyType_MAX;
  static const int LobbyType_ARRAYSIZE =
    CSOTFLobby_LobbyType_LobbyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LobbyType_descriptor() {
    return CSOTFLobby_LobbyType_descriptor();
  }
  static inline const ::std::string& LobbyType_Name(LobbyType value) {
    return CSOTFLobby_LobbyType_Name(value);
  }
  static inline bool LobbyType_Parse(const ::std::string& name,
      LobbyType* value) {
    return CSOTFLobby_LobbyType_Parse(name, value);
  }
  
  typedef CSOTFLobby_WarMatch WarMatch;
  static const WarMatch NOPE = CSOTFLobby_WarMatch_NOPE;
  static const WarMatch INVADERS_ARE_PYRO = CSOTFLobby_WarMatch_INVADERS_ARE_PYRO;
  static const WarMatch INVADERS_ARE_HEAVY = CSOTFLobby_WarMatch_INVADERS_ARE_HEAVY;
  static inline bool WarMatch_IsValid(int value) {
    return CSOTFLobby_WarMatch_IsValid(value);
  }
  static const WarMatch WarMatch_MIN =
    CSOTFLobby_WarMatch_WarMatch_MIN;
  static const WarMatch WarMatch_MAX =
    CSOTFLobby_WarMatch_WarMatch_MAX;
  static const int WarMatch_ARRAYSIZE =
    CSOTFLobby_WarMatch_WarMatch_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WarMatch_descriptor() {
    return CSOTFLobby_WarMatch_descriptor();
  }
  static inline const ::std::string& WarMatch_Name(WarMatch value) {
    return CSOTFLobby_WarMatch_Name(value);
  }
  static inline bool WarMatch_Parse(const ::std::string& name,
      WarMatch* value) {
    return CSOTFLobby_WarMatch_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional uint64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);
  
  // repeated .CTFLobbyMember members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::CTFLobbyMember& members(int index) const;
  inline ::CTFLobbyMember* mutable_members(int index);
  inline ::CTFLobbyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
      mutable_members();
  
  // repeated .CTFLobbyMember left_members = 7;
  inline int left_members_size() const;
  inline void clear_left_members();
  static const int kLeftMembersFieldNumber = 7;
  inline const ::CTFLobbyMember& left_members(int index) const;
  inline ::CTFLobbyMember* mutable_left_members(int index);
  inline ::CTFLobbyMember* add_left_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
      left_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
      mutable_left_members();
  
  // optional fixed64 leader_id = 11;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 11;
  inline ::google::protobuf::uint64 leader_id() const;
  inline void set_leader_id(::google::protobuf::uint64 value);
  
  // optional fixed64 server_id = 6 [default = 0];
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  inline ::google::protobuf::uint64 server_id() const;
  inline void set_server_id(::google::protobuf::uint64 value);
  
  // repeated fixed64 pending_invites = 10;
  inline int pending_invites_size() const;
  inline void clear_pending_invites();
  static const int kPendingInvitesFieldNumber = 10;
  inline ::google::protobuf::uint64 pending_invites(int index) const;
  inline void set_pending_invites(int index, ::google::protobuf::uint64 value);
  inline void add_pending_invites(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pending_invites() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pending_invites();
  
  // optional .CSOTFLobby.State state = 4 [default = SERVERSETUP];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::CSOTFLobby_State state() const;
  inline void set_state(::CSOTFLobby_State value);
  
  // optional string connect = 5;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 5;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  
  // optional .CSOTFLobby.LobbyType lobby_type = 12 [default = INVALID];
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 12;
  inline ::CSOTFLobby_LobbyType lobby_type() const;
  inline void set_lobby_type(::CSOTFLobby_LobbyType value);
  
  // optional bool allow_cheats = 13;
  inline bool has_allow_cheats() const;
  inline void clear_allow_cheats();
  static const int kAllowCheatsFieldNumber = 13;
  inline bool allow_cheats() const;
  inline void set_allow_cheats(bool value);
  
  // optional string game_name = 16;
  inline bool has_game_name() const;
  inline void clear_game_name();
  static const int kGameNameFieldNumber = 16;
  inline const ::std::string& game_name() const;
  inline void set_game_name(const ::std::string& value);
  inline void set_game_name(const char* value);
  inline void set_game_name(const char* value, size_t size);
  inline ::std::string* mutable_game_name();
  
  // optional uint32 server_region = 21 [default = 0];
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 21;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);
  
  // optional .TF_GC_GameState game_state = 22 [default = TF_GC_GAMESTATE_STATE_INIT];
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 22;
  inline TF_GC_GameState game_state() const;
  inline void set_game_state(TF_GC_GameState value);
  
  // optional uint32 num_spectators = 23;
  inline bool has_num_spectators() const;
  inline void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 23;
  inline ::google::protobuf::uint32 num_spectators() const;
  inline void set_num_spectators(::google::protobuf::uint32 value);
  
  // optional float readyup_remaining_time = 26;
  inline bool has_readyup_remaining_time() const;
  inline void clear_readyup_remaining_time();
  static const int kReadyupRemainingTimeFieldNumber = 26;
  inline float readyup_remaining_time() const;
  inline void set_readyup_remaining_time(float value);
  
  // optional bool allow_spectating = 31 [default = true];
  inline bool has_allow_spectating() const;
  inline void clear_allow_spectating();
  static const int kAllowSpectatingFieldNumber = 31;
  inline bool allow_spectating() const;
  inline void set_allow_spectating(bool value);
  
  // optional uint32 average_rank = 32;
  inline bool has_average_rank() const;
  inline void clear_average_rank();
  static const int kAverageRankFieldNumber = 32;
  inline ::google::protobuf::uint32 average_rank() const;
  inline void set_average_rank(::google::protobuf::uint32 value);
  
  // optional fixed64 load_game_lobby_id = 33;
  inline bool has_load_game_lobby_id() const;
  inline void clear_load_game_lobby_id();
  static const int kLoadGameLobbyIdFieldNumber = 33;
  inline ::google::protobuf::uint64 load_game_lobby_id() const;
  inline void set_load_game_lobby_id(::google::protobuf::uint64 value);
  
  // optional uint32 load_game_save_number = 34;
  inline bool has_load_game_save_number() const;
  inline void clear_load_game_save_number();
  static const int kLoadGameSaveNumberFieldNumber = 34;
  inline ::google::protobuf::uint32 load_game_save_number() const;
  inline void set_load_game_save_number(::google::protobuf::uint32 value);
  
  // optional string mannup_tour_name = 42;
  inline bool has_mannup_tour_name() const;
  inline void clear_mannup_tour_name();
  static const int kMannupTourNameFieldNumber = 42;
  inline const ::std::string& mannup_tour_name() const;
  inline void set_mannup_tour_name(const ::std::string& value);
  inline void set_mannup_tour_name(const char* value);
  inline void set_mannup_tour_name(const char* value, size_t size);
  inline ::std::string* mutable_mannup_tour_name();
  
  // optional string map_name = 38;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 38;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  
  // optional string mission_name = 39;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 39;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  
  // optional uint32 match_group = 41;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 41;
  inline ::google::protobuf::uint32 match_group() const;
  inline void set_match_group(::google::protobuf::uint32 value);
  
  // optional uint64 match_id = 30 [default = 0];
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 30;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);
  
  // optional fixed32 replay_salt = 35;
  inline bool has_replay_salt() const;
  inline void clear_replay_salt();
  static const int kReplaySaltFieldNumber = 35;
  inline ::google::protobuf::uint32 replay_salt() const;
  inline void set_replay_salt(::google::protobuf::uint32 value);
  
  // optional uint32 formed_time = 36;
  inline bool has_formed_time() const;
  inline void clear_formed_time();
  static const int kFormedTimeFieldNumber = 36;
  inline ::google::protobuf::uint32 formed_time() const;
  inline void set_formed_time(::google::protobuf::uint32 value);
  
  // optional uint32 flags = 43;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 43;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);
  
  // optional bool late_join_eligible = 44;
  inline bool has_late_join_eligible() const;
  inline void clear_late_join_eligible();
  static const int kLateJoinEligibleFieldNumber = 44;
  inline bool late_join_eligible() const;
  inline void set_late_join_eligible(bool value);
  
  // optional uint32 fixed_match_size = 45;
  inline bool has_fixed_match_size() const;
  inline void clear_fixed_match_size();
  static const int kFixedMatchSizeFieldNumber = 45;
  inline ::google::protobuf::uint32 fixed_match_size() const;
  inline void set_fixed_match_size(::google::protobuf::uint32 value);
  
  // optional .CSOTFLobby.WarMatch is_war_match = 46 [default = NOPE];
  inline bool has_is_war_match() const;
  inline void clear_is_war_match();
  static const int kIsWarMatchFieldNumber = 46;
  inline ::CSOTFLobby_WarMatch is_war_match() const;
  inline void set_is_war_match(::CSOTFLobby_WarMatch value);
  
  // @@protoc_insertion_point(class_scope:CSOTFLobby)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember > members_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember > left_members_;
  ::google::protobuf::uint64 leader_id_;
  ::google::protobuf::uint64 server_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pending_invites_;
  int state_;
  ::std::string* connect_;
  static const ::std::string _default_connect_;
  int lobby_type_;
  bool allow_cheats_;
  ::std::string* game_name_;
  static const ::std::string _default_game_name_;
  ::google::protobuf::uint32 server_region_;
  int game_state_;
  ::google::protobuf::uint32 num_spectators_;
  float readyup_remaining_time_;
  bool allow_spectating_;
  ::google::protobuf::uint32 average_rank_;
  ::google::protobuf::uint64 load_game_lobby_id_;
  ::google::protobuf::uint32 load_game_save_number_;
  ::std::string* mannup_tour_name_;
  static const ::std::string _default_mannup_tour_name_;
  ::std::string* map_name_;
  static const ::std::string _default_map_name_;
  ::std::string* mission_name_;
  static const ::std::string _default_mission_name_;
  ::google::protobuf::uint32 match_group_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 replay_salt_;
  ::google::protobuf::uint32 formed_time_;
  ::google::protobuf::uint32 flags_;
  bool late_join_eligible_;
  ::google::protobuf::uint32 fixed_match_size_;
  int is_war_match_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgExitMatchmaking : public ::google::protobuf::Message {
 public:
  CMsgExitMatchmaking();
  virtual ~CMsgExitMatchmaking();
  
  CMsgExitMatchmaking(const CMsgExitMatchmaking& from);
  
  inline CMsgExitMatchmaking& operator=(const CMsgExitMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExitMatchmaking& default_instance();
  
  void Swap(CMsgExitMatchmaking* other);
  
  // implements Message ----------------------------------------------
  
  CMsgExitMatchmaking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExitMatchmaking& from);
  void MergeFrom(const CMsgExitMatchmaking& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool explicit_abandon = 1;
  inline bool has_explicit_abandon() const;
  inline void clear_explicit_abandon();
  static const int kExplicitAbandonFieldNumber = 1;
  inline bool explicit_abandon() const;
  inline void set_explicit_abandon(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgExitMatchmaking)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool explicit_abandon_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgExitMatchmaking* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcceptInvite : public ::google::protobuf::Message {
 public:
  CMsgAcceptInvite();
  virtual ~CMsgAcceptInvite();
  
  CMsgAcceptInvite(const CMsgAcceptInvite& from);
  
  inline CMsgAcceptInvite& operator=(const CMsgAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptInvite& default_instance();
  
  void Swap(CMsgAcceptInvite* other);
  
  // implements Message ----------------------------------------------
  
  CMsgAcceptInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcceptInvite& from);
  void MergeFrom(const CMsgAcceptInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);
  
  // optional fixed64 steamid_lobby = 2;
  inline bool has_steamid_lobby() const;
  inline void clear_steamid_lobby();
  static const int kSteamidLobbyFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid_lobby() const;
  inline void set_steamid_lobby(::google::protobuf::uint64 value);
  
  // optional uint32 client_version = 3 [default = 1225];
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgAcceptInvite)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 steamid_lobby_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgAcceptInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcceptInviteResponse : public ::google::protobuf::Message {
 public:
  CMsgAcceptInviteResponse();
  virtual ~CMsgAcceptInviteResponse();
  
  CMsgAcceptInviteResponse(const CMsgAcceptInviteResponse& from);
  
  inline CMsgAcceptInviteResponse& operator=(const CMsgAcceptInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptInviteResponse& default_instance();
  
  void Swap(CMsgAcceptInviteResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgAcceptInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcceptInviteResponse& from);
  void MergeFrom(const CMsgAcceptInviteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 result_code = 1;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  inline ::google::protobuf::int32 result_code() const;
  inline void set_result_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgAcceptInviteResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 result_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgAcceptInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReadyUp : public ::google::protobuf::Message {
 public:
  CMsgReadyUp();
  virtual ~CMsgReadyUp();
  
  CMsgReadyUp(const CMsgReadyUp& from);
  
  inline CMsgReadyUp& operator=(const CMsgReadyUp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReadyUp& default_instance();
  
  void Swap(CMsgReadyUp* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReadyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReadyUp& from);
  void MergeFrom(const CMsgReadyUp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .TFLobbyReadyState state = 1 [default = TFLobbyReadyState_UNDECLARED];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline TFLobbyReadyState state() const;
  inline void set_state(TFLobbyReadyState value);
  
  // @@protoc_insertion_point(class_scope:CMsgReadyUp)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int state_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgReadyUp* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountRequest : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingSearchCountRequest();
  virtual ~CMsgMatchmakingSearchCountRequest();
  
  CMsgMatchmakingSearchCountRequest(const CMsgMatchmakingSearchCountRequest& from);
  
  inline CMsgMatchmakingSearchCountRequest& operator=(const CMsgMatchmakingSearchCountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountRequest& default_instance();
  
  void Swap(CMsgMatchmakingSearchCountRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMatchmakingSearchCountRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingSearchCountRequest& from);
  void MergeFrom(const CMsgMatchmakingSearchCountRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMatchmakingSearchCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountResponse : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingSearchCountResponse();
  virtual ~CMsgMatchmakingSearchCountResponse();
  
  CMsgMatchmakingSearchCountResponse(const CMsgMatchmakingSearchCountResponse& from);
  
  inline CMsgMatchmakingSearchCountResponse& operator=(const CMsgMatchmakingSearchCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountResponse& default_instance();
  
  void Swap(CMsgMatchmakingSearchCountResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMatchmakingSearchCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingSearchCountResponse& from);
  void MergeFrom(const CMsgMatchmakingSearchCountResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 searching_players_by_group = 1;
  inline int searching_players_by_group_size() const;
  inline void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 searching_players_by_group(int index) const;
  inline void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();
  
  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMatchmakingSearchCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgKickedFromMatchmakingQueue : public ::google::protobuf::Message {
 public:
  CMsgKickedFromMatchmakingQueue();
  virtual ~CMsgKickedFromMatchmakingQueue();
  
  CMsgKickedFromMatchmakingQueue(const CMsgKickedFromMatchmakingQueue& from);
  
  inline CMsgKickedFromMatchmakingQueue& operator=(const CMsgKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKickedFromMatchmakingQueue& default_instance();
  
  void Swap(CMsgKickedFromMatchmakingQueue* other);
  
  // implements Message ----------------------------------------------
  
  CMsgKickedFromMatchmakingQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgKickedFromMatchmakingQueue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgKickedFromMatchmakingQueue)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgKickedFromMatchmakingQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFJoinChatChannel();
  virtual ~CMsgTFJoinChatChannel();
  
  CMsgTFJoinChatChannel(const CMsgTFJoinChatChannel& from);
  
  inline CMsgTFJoinChatChannel& operator=(const CMsgTFJoinChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannel& default_instance();
  
  void Swap(CMsgTFJoinChatChannel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFJoinChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFJoinChatChannel& from);
  void MergeFrom(const CMsgTFJoinChatChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string persona_name = 1;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 1;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  
  // optional string channel_name = 2;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  
  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional .ChatChannelType_t channel_type = 4 [default = ChatChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 4;
  inline ChatChannelType_t channel_type() const;
  inline void set_channel_type(ChatChannelType_t value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* persona_name_;
  static const ::std::string _default_persona_name_;
  ::std::string* channel_name_;
  static const ::std::string _default_channel_name_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  int channel_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFJoinChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFLeaveChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFLeaveChatChannel();
  virtual ~CMsgTFLeaveChatChannel();
  
  CMsgTFLeaveChatChannel(const CMsgTFLeaveChatChannel& from);
  
  inline CMsgTFLeaveChatChannel& operator=(const CMsgTFLeaveChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFLeaveChatChannel& default_instance();
  
  void Swap(CMsgTFLeaveChatChannel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFLeaveChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFLeaveChatChannel& from);
  void MergeFrom(const CMsgTFLeaveChatChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFLeaveChatChannel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* channel_name_;
  static const ::std::string _default_channel_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFLeaveChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannelResponse_ChatMember : public ::google::protobuf::Message {
 public:
  CMsgTFJoinChatChannelResponse_ChatMember();
  virtual ~CMsgTFJoinChatChannelResponse_ChatMember();
  
  CMsgTFJoinChatChannelResponse_ChatMember(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  
  inline CMsgTFJoinChatChannelResponse_ChatMember& operator=(const CMsgTFJoinChatChannelResponse_ChatMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannelResponse_ChatMember& default_instance();
  
  void Swap(CMsgTFJoinChatChannelResponse_ChatMember* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFJoinChatChannelResponse_ChatMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  void MergeFrom(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannelResponse.ChatMember)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  ::std::string* persona_name_;
  static const ::std::string _default_persona_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFJoinChatChannelResponse_ChatMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannelResponse : public ::google::protobuf::Message {
 public:
  CMsgTFJoinChatChannelResponse();
  virtual ~CMsgTFJoinChatChannelResponse();
  
  CMsgTFJoinChatChannelResponse(const CMsgTFJoinChatChannelResponse& from);
  
  inline CMsgTFJoinChatChannelResponse& operator=(const CMsgTFJoinChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannelResponse& default_instance();
  
  void Swap(CMsgTFJoinChatChannelResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFJoinChatChannelResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFJoinChatChannelResponse& from);
  void MergeFrom(const CMsgTFJoinChatChannelResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgTFJoinChatChannelResponse_ChatMember ChatMember;
  
  // accessors -------------------------------------------------------
  
  // optional uint32 response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::google::protobuf::uint32 response() const;
  inline void set_response(::google::protobuf::uint32 value);
  
  // optional string channel_name = 2;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  
  // optional fixed64 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);
  
  // optional uint32 max_members = 4;
  inline bool has_max_members() const;
  inline void clear_max_members();
  static const int kMaxMembersFieldNumber = 4;
  inline ::google::protobuf::uint32 max_members() const;
  inline void set_max_members(::google::protobuf::uint32 value);
  
  // repeated .CMsgTFJoinChatChannelResponse.ChatMember members = 5;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 5;
  inline const ::CMsgTFJoinChatChannelResponse_ChatMember& members(int index) const;
  inline ::CMsgTFJoinChatChannelResponse_ChatMember* mutable_members(int index);
  inline ::CMsgTFJoinChatChannelResponse_ChatMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >*
      mutable_members();
  
  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannelResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 response_;
  ::std::string* channel_name_;
  static const ::std::string _default_channel_name_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 max_members_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember > members_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFJoinChatChannelResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFOtherJoinedChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFOtherJoinedChatChannel();
  virtual ~CMsgTFOtherJoinedChatChannel();
  
  CMsgTFOtherJoinedChatChannel(const CMsgTFOtherJoinedChatChannel& from);
  
  inline CMsgTFOtherJoinedChatChannel& operator=(const CMsgTFOtherJoinedChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFOtherJoinedChatChannel& default_instance();
  
  void Swap(CMsgTFOtherJoinedChatChannel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFOtherJoinedChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFOtherJoinedChatChannel& from);
  void MergeFrom(const CMsgTFOtherJoinedChatChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);
  
  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  
  // optional fixed64 steam_id = 3;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFOtherJoinedChatChannel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 channel_id_;
  ::std::string* persona_name_;
  static const ::std::string _default_persona_name_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFOtherJoinedChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFOtherLeftChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFOtherLeftChatChannel();
  virtual ~CMsgTFOtherLeftChatChannel();
  
  CMsgTFOtherLeftChatChannel(const CMsgTFOtherLeftChatChannel& from);
  
  inline CMsgTFOtherLeftChatChannel& operator=(const CMsgTFOtherLeftChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFOtherLeftChatChannel& default_instance();
  
  void Swap(CMsgTFOtherLeftChatChannel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFOtherLeftChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFOtherLeftChatChannel& from);
  void MergeFrom(const CMsgTFOtherLeftChatChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);
  
  // optional fixed64 steam_id = 2;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFOtherLeftChatChannel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFOtherLeftChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestDefaultChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFRequestDefaultChatChannel();
  virtual ~CMsgTFRequestDefaultChatChannel();
  
  CMsgTFRequestDefaultChatChannel(const CMsgTFRequestDefaultChatChannel& from);
  
  inline CMsgTFRequestDefaultChatChannel& operator=(const CMsgTFRequestDefaultChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestDefaultChatChannel& default_instance();
  
  void Swap(CMsgTFRequestDefaultChatChannel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestDefaultChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestDefaultChatChannel& from);
  void MergeFrom(const CMsgTFRequestDefaultChatChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestDefaultChatChannel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestDefaultChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestDefaultChatChannelResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestDefaultChatChannelResponse();
  virtual ~CMsgTFRequestDefaultChatChannelResponse();
  
  CMsgTFRequestDefaultChatChannelResponse(const CMsgTFRequestDefaultChatChannelResponse& from);
  
  inline CMsgTFRequestDefaultChatChannelResponse& operator=(const CMsgTFRequestDefaultChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestDefaultChatChannelResponse& default_instance();
  
  void Swap(CMsgTFRequestDefaultChatChannelResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestDefaultChatChannelResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestDefaultChatChannelResponse& from);
  void MergeFrom(const CMsgTFRequestDefaultChatChannelResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  
  // optional fixed64 channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestDefaultChatChannelResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* channel_name_;
  static const ::std::string _default_channel_name_;
  ::google::protobuf::uint64 channel_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestDefaultChatChannelResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelList : public ::google::protobuf::Message {
 public:
  CMsgTFRequestChatChannelList();
  virtual ~CMsgTFRequestChatChannelList();
  
  CMsgTFRequestChatChannelList(const CMsgTFRequestChatChannelList& from);
  
  inline CMsgTFRequestChatChannelList& operator=(const CMsgTFRequestChatChannelList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelList& default_instance();
  
  void Swap(CMsgTFRequestChatChannelList* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestChatChannelList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestChatChannelList& from);
  void MergeFrom(const CMsgTFRequestChatChannelList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelList)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestChatChannelList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelListResponse_ChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFRequestChatChannelListResponse_ChatChannel();
  virtual ~CMsgTFRequestChatChannelListResponse_ChatChannel();
  
  CMsgTFRequestChatChannelListResponse_ChatChannel(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  
  inline CMsgTFRequestChatChannelListResponse_ChatChannel& operator=(const CMsgTFRequestChatChannelListResponse_ChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelListResponse_ChatChannel& default_instance();
  
  void Swap(CMsgTFRequestChatChannelListResponse_ChatChannel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestChatChannelListResponse_ChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  void MergeFrom(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  
  // optional uint32 num_members = 2;
  inline bool has_num_members() const;
  inline void clear_num_members();
  static const int kNumMembersFieldNumber = 2;
  inline ::google::protobuf::uint32 num_members() const;
  inline void set_num_members(::google::protobuf::uint32 value);
  
  // optional .ChatChannelType_t channel_type = 3 [default = ChatChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 3;
  inline ChatChannelType_t channel_type() const;
  inline void set_channel_type(ChatChannelType_t value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelListResponse.ChatChannel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* channel_name_;
  static const ::std::string _default_channel_name_;
  ::google::protobuf::uint32 num_members_;
  int channel_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestChatChannelListResponse_ChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelListResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestChatChannelListResponse();
  virtual ~CMsgTFRequestChatChannelListResponse();
  
  CMsgTFRequestChatChannelListResponse(const CMsgTFRequestChatChannelListResponse& from);
  
  inline CMsgTFRequestChatChannelListResponse& operator=(const CMsgTFRequestChatChannelListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelListResponse& default_instance();
  
  void Swap(CMsgTFRequestChatChannelListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestChatChannelListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestChatChannelListResponse& from);
  void MergeFrom(const CMsgTFRequestChatChannelListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgTFRequestChatChannelListResponse_ChatChannel ChatChannel;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgTFRequestChatChannelListResponse.ChatChannel channels = 1;
  inline int channels_size() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 1;
  inline const ::CMsgTFRequestChatChannelListResponse_ChatChannel& channels(int index) const;
  inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* mutable_channels(int index);
  inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* add_channels();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >&
      channels() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >*
      mutable_channels();
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelListResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel > channels_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgTFRequestChatChannelListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus_Player : public ::google::protobuf::Message {
 public:
  CMsgGameServerMatchmakingStatus_Player();
  virtual ~CMsgGameServerMatchmakingStatus_Player();
  
  CMsgGameServerMatchmakingStatus_Player(const CMsgGameServerMatchmakingStatus_Player& from);
  
  inline CMsgGameServerMatchmakingStatus_Player& operator=(const CMsgGameServerMatchmakingStatus_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus_Player& default_instance();
  
  void Swap(CMsgGameServerMatchmakingStatus_Player* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGameServerMatchmakingStatus_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2 [default = INVALID];
  inline bool has_connect_state() const;
  inline void clear_connect_state();
  static const int kConnectStateFieldNumber = 2;
  inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state() const;
  inline void set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value);
  
  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus.Player)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  int connect_state_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGameServerMatchmakingStatus_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus : public ::google::protobuf::Message {
 public:
  CMsgGameServerMatchmakingStatus();
  virtual ~CMsgGameServerMatchmakingStatus();
  
  CMsgGameServerMatchmakingStatus(const CMsgGameServerMatchmakingStatus& from);
  
  inline CMsgGameServerMatchmakingStatus& operator=(const CMsgGameServerMatchmakingStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus& default_instance();
  
  void Swap(CMsgGameServerMatchmakingStatus* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGameServerMatchmakingStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerMatchmakingStatus& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGameServerMatchmakingStatus_Player Player;
  
  typedef CMsgGameServerMatchmakingStatus_PlayerConnectState PlayerConnectState;
  static const PlayerConnectState INVALID = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
  static const PlayerConnectState CONNECTED = CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED;
  static const PlayerConnectState RESERVED = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
  static inline bool PlayerConnectState_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value);
  }
  static const PlayerConnectState PlayerConnectState_MIN =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN;
  static const PlayerConnectState PlayerConnectState_MAX =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX;
  static const int PlayerConnectState_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlayerConnectState_descriptor() {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
  }
  static inline const ::std::string& PlayerConnectState_Name(PlayerConnectState value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(value);
  }
  static inline bool PlayerConnectState_Parse(const ::std::string& name,
      PlayerConnectState* value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(name, value);
  }
  
  typedef CMsgGameServerMatchmakingStatus_Event Event;
  static const Event None = CMsgGameServerMatchmakingStatus_Event_None;
  static const Event MvMVictory = CMsgGameServerMatchmakingStatus_Event_MvMVictory;
  static const Event MvMDefeat = CMsgGameServerMatchmakingStatus_Event_MvMDefeat;
  static const Event AcknowledgePlayers = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
  static inline bool Event_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_Event_IsValid(value);
  }
  static const Event Event_MIN =
    CMsgGameServerMatchmakingStatus_Event_Event_MIN;
  static const Event Event_MAX =
    CMsgGameServerMatchmakingStatus_Event_Event_MAX;
  static const int Event_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Event_descriptor() {
    return CMsgGameServerMatchmakingStatus_Event_descriptor();
  }
  static inline const ::std::string& Event_Name(Event value) {
    return CMsgGameServerMatchmakingStatus_Event_Name(value);
  }
  static inline bool Event_Parse(const ::std::string& name,
      Event* value) {
    return CMsgGameServerMatchmakingStatus_Event_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional uint32 server_version = 16 [default = 1225];
  inline bool has_server_version() const;
  inline void clear_server_version();
  static const int kServerVersionFieldNumber = 16;
  inline ::google::protobuf::uint32 server_version() const;
  inline void set_server_version(::google::protobuf::uint32 value);
  
  // optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
  inline bool has_matchmaking_state() const;
  inline void clear_matchmaking_state();
  static const int kMatchmakingStateFieldNumber = 1;
  inline ServerMatchmakingState matchmaking_state() const;
  inline void set_matchmaking_state(ServerMatchmakingState value);
  
  // optional .TF_MatchmakingMode matchmaking_mode = 2 [default = TF_Matchmaking_INVALID];
  inline bool has_matchmaking_mode() const;
  inline void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 2;
  inline TF_MatchmakingMode matchmaking_mode() const;
  inline void set_matchmaking_mode(TF_MatchmakingMode value);
  
  // optional string map = 3;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 3;
  inline const ::std::string& map() const;
  inline void set_map(const ::std::string& value);
  inline void set_map(const char* value);
  inline void set_map(const char* value, size_t size);
  inline ::std::string* mutable_map();
  
  // optional string tags = 4;
  inline bool has_tags() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 4;
  inline const ::std::string& tags() const;
  inline void set_tags(const ::std::string& value);
  inline void set_tags(const char* value);
  inline void set_tags(const char* value, size_t size);
  inline ::std::string* mutable_tags();
  
  // optional uint32 bot_count = 5;
  inline bool has_bot_count() const;
  inline void clear_bot_count();
  static const int kBotCountFieldNumber = 5;
  inline ::google::protobuf::uint32 bot_count() const;
  inline void set_bot_count(::google::protobuf::uint32 value);
  
  // optional uint32 num_spectators = 6;
  inline bool has_num_spectators() const;
  inline void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 6;
  inline ::google::protobuf::uint32 num_spectators() const;
  inline void set_num_spectators(::google::protobuf::uint32 value);
  
  // optional uint32 max_players = 7;
  inline bool has_max_players() const;
  inline void clear_max_players();
  static const int kMaxPlayersFieldNumber = 7;
  inline ::google::protobuf::uint32 max_players() const;
  inline void set_max_players(::google::protobuf::uint32 value);
  
  // optional uint32 slots_free = 8;
  inline bool has_slots_free() const;
  inline void clear_slots_free();
  static const int kSlotsFreeFieldNumber = 8;
  inline ::google::protobuf::uint32 slots_free() const;
  inline void set_slots_free(::google::protobuf::uint32 value);
  
  // optional uint32 server_region = 9;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 9;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);
  
  // optional float server_loadavg = 10;
  inline bool has_server_loadavg() const;
  inline void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 10;
  inline float server_loadavg() const;
  inline void set_server_loadavg(float value);
  
  // optional bool server_trusted = 11;
  inline bool has_server_trusted() const;
  inline void clear_server_trusted();
  static const int kServerTrustedFieldNumber = 11;
  inline bool server_trusted() const;
  inline void set_server_trusted(bool value);
  
  // optional bool server_dedicated = 12;
  inline bool has_server_dedicated() const;
  inline void clear_server_dedicated();
  static const int kServerDedicatedFieldNumber = 12;
  inline bool server_dedicated() const;
  inline void set_server_dedicated(bool value);
  
  // optional uint32 strict = 17;
  inline bool has_strict() const;
  inline void clear_strict();
  static const int kStrictFieldNumber = 17;
  inline ::google::protobuf::uint32 strict() const;
  inline void set_strict(::google::protobuf::uint32 value);
  
  // repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 13;
  inline const ::CMsgGameServerMatchmakingStatus_Player& players(int index) const;
  inline ::CMsgGameServerMatchmakingStatus_Player* mutable_players(int index);
  inline ::CMsgGameServerMatchmakingStatus_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
      mutable_players();
  
  // optional .TF_GC_GameState game_state = 14 [default = TF_GC_GAMESTATE_STATE_INIT];
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 14;
  inline TF_GC_GameState game_state() const;
  inline void set_game_state(TF_GC_GameState value);
  
  // optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 15;
  inline ::CMsgGameServerMatchmakingStatus_Event event() const;
  inline void set_event(::CMsgGameServerMatchmakingStatus_Event value);
  
  // optional uint32 mvm_wave = 18;
  inline bool has_mvm_wave() const;
  inline void clear_mvm_wave();
  static const int kMvmWaveFieldNumber = 18;
  inline ::google::protobuf::uint32 mvm_wave() const;
  inline void set_mvm_wave(::google::protobuf::uint32 value);
  
  // optional uint32 mvm_credits_acquired = 19;
  inline bool has_mvm_credits_acquired() const;
  inline void clear_mvm_credits_acquired();
  static const int kMvmCreditsAcquiredFieldNumber = 19;
  inline ::google::protobuf::uint32 mvm_credits_acquired() const;
  inline void set_mvm_credits_acquired(::google::protobuf::uint32 value);
  
  // optional uint32 mvm_credits_dropped = 20;
  inline bool has_mvm_credits_dropped() const;
  inline void clear_mvm_credits_dropped();
  static const int kMvmCreditsDroppedFieldNumber = 20;
  inline ::google::protobuf::uint32 mvm_credits_dropped() const;
  inline void set_mvm_credits_dropped(::google::protobuf::uint32 value);
  
  // optional sint32 match_group = 23 [default = -1];
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 23;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 server_version_;
  int matchmaking_state_;
  int matchmaking_mode_;
  ::std::string* map_;
  static const ::std::string _default_map_;
  ::std::string* tags_;
  static const ::std::string _default_tags_;
  ::google::protobuf::uint32 bot_count_;
  ::google::protobuf::uint32 num_spectators_;
  ::google::protobuf::uint32 max_players_;
  ::google::protobuf::uint32 slots_free_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  bool server_trusted_;
  bool server_dedicated_;
  ::google::protobuf::uint32 strict_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player > players_;
  int game_state_;
  int event_;
  ::google::protobuf::uint32 mvm_wave_;
  ::google::protobuf::uint32 mvm_credits_acquired_;
  ::google::protobuf::uint32 mvm_credits_dropped_;
  ::google::protobuf::int32 match_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGameServerMatchmakingStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingProgress : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingProgress();
  virtual ~CMsgMatchmakingProgress();
  
  CMsgMatchmakingProgress(const CMsgMatchmakingProgress& from);
  
  inline CMsgMatchmakingProgress& operator=(const CMsgMatchmakingProgress& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingProgress& default_instance();
  
  void Swap(CMsgMatchmakingProgress* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMatchmakingProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingProgress& from);
  void MergeFrom(const CMsgMatchmakingProgress& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 avg_wait_time_new = 4;
  inline bool has_avg_wait_time_new() const;
  inline void clear_avg_wait_time_new();
  static const int kAvgWaitTimeNewFieldNumber = 4;
  inline ::google::protobuf::uint32 avg_wait_time_new() const;
  inline void set_avg_wait_time_new(::google::protobuf::uint32 value);
  
  // optional uint32 avg_wait_time_join_late = 5;
  inline bool has_avg_wait_time_join_late() const;
  inline void clear_avg_wait_time_join_late();
  static const int kAvgWaitTimeJoinLateFieldNumber = 5;
  inline ::google::protobuf::uint32 avg_wait_time_join_late() const;
  inline void set_avg_wait_time_join_late(::google::protobuf::uint32 value);
  
  // optional uint32 your_wait_time = 6;
  inline bool has_your_wait_time() const;
  inline void clear_your_wait_time();
  static const int kYourWaitTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 your_wait_time() const;
  inline void set_your_wait_time(::google::protobuf::uint32 value);
  
  // optional uint32 matching_worldwide_searching_players = 8;
  inline bool has_matching_worldwide_searching_players() const;
  inline void clear_matching_worldwide_searching_players();
  static const int kMatchingWorldwideSearchingPlayersFieldNumber = 8;
  inline ::google::protobuf::uint32 matching_worldwide_searching_players() const;
  inline void set_matching_worldwide_searching_players(::google::protobuf::uint32 value);
  
  // optional uint32 matching_near_you_searching_players = 9;
  inline bool has_matching_near_you_searching_players() const;
  inline void clear_matching_near_you_searching_players();
  static const int kMatchingNearYouSearchingPlayersFieldNumber = 9;
  inline ::google::protobuf::uint32 matching_near_you_searching_players() const;
  inline void set_matching_near_you_searching_players(::google::protobuf::uint32 value);
  
  // optional uint32 total_worldwide_searching_players = 13;
  inline bool has_total_worldwide_searching_players() const;
  inline void clear_total_worldwide_searching_players();
  static const int kTotalWorldwideSearchingPlayersFieldNumber = 13;
  inline ::google::protobuf::uint32 total_worldwide_searching_players() const;
  inline void set_total_worldwide_searching_players(::google::protobuf::uint32 value);
  
  // optional uint32 total_near_you_searching_players = 14;
  inline bool has_total_near_you_searching_players() const;
  inline void clear_total_near_you_searching_players();
  static const int kTotalNearYouSearchingPlayersFieldNumber = 14;
  inline ::google::protobuf::uint32 total_near_you_searching_players() const;
  inline void set_total_near_you_searching_players(::google::protobuf::uint32 value);
  
  // optional uint32 matching_worldwide_active_players = 15;
  inline bool has_matching_worldwide_active_players() const;
  inline void clear_matching_worldwide_active_players();
  static const int kMatchingWorldwideActivePlayersFieldNumber = 15;
  inline ::google::protobuf::uint32 matching_worldwide_active_players() const;
  inline void set_matching_worldwide_active_players(::google::protobuf::uint32 value);
  
  // optional uint32 matching_near_you_active_players = 16;
  inline bool has_matching_near_you_active_players() const;
  inline void clear_matching_near_you_active_players();
  static const int kMatchingNearYouActivePlayersFieldNumber = 16;
  inline ::google::protobuf::uint32 matching_near_you_active_players() const;
  inline void set_matching_near_you_active_players(::google::protobuf::uint32 value);
  
  // optional uint32 total_worldwide_active_players = 17;
  inline bool has_total_worldwide_active_players() const;
  inline void clear_total_worldwide_active_players();
  static const int kTotalWorldwideActivePlayersFieldNumber = 17;
  inline ::google::protobuf::uint32 total_worldwide_active_players() const;
  inline void set_total_worldwide_active_players(::google::protobuf::uint32 value);
  
  // optional uint32 total_near_you_active_players = 18;
  inline bool has_total_near_you_active_players() const;
  inline void clear_total_near_you_active_players();
  static const int kTotalNearYouActivePlayersFieldNumber = 18;
  inline ::google::protobuf::uint32 total_near_you_active_players() const;
  inline void set_total_near_you_active_players(::google::protobuf::uint32 value);
  
  // optional uint32 matching_worldwide_empty_gameservers = 19;
  inline bool has_matching_worldwide_empty_gameservers() const;
  inline void clear_matching_worldwide_empty_gameservers();
  static const int kMatchingWorldwideEmptyGameserversFieldNumber = 19;
  inline ::google::protobuf::uint32 matching_worldwide_empty_gameservers() const;
  inline void set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value);
  
  // optional uint32 matching_near_you_empty_gameservers = 20;
  inline bool has_matching_near_you_empty_gameservers() const;
  inline void clear_matching_near_you_empty_gameservers();
  static const int kMatchingNearYouEmptyGameserversFieldNumber = 20;
  inline ::google::protobuf::uint32 matching_near_you_empty_gameservers() const;
  inline void set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value);
  
  // optional uint32 total_worldwide_empty_gameservers = 21;
  inline bool has_total_worldwide_empty_gameservers() const;
  inline void clear_total_worldwide_empty_gameservers();
  static const int kTotalWorldwideEmptyGameserversFieldNumber = 21;
  inline ::google::protobuf::uint32 total_worldwide_empty_gameservers() const;
  inline void set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value);
  
  // optional uint32 total_near_you_empty_gameservers = 22;
  inline bool has_total_near_you_empty_gameservers() const;
  inline void clear_total_near_you_empty_gameservers();
  static const int kTotalNearYouEmptyGameserversFieldNumber = 22;
  inline ::google::protobuf::uint32 total_near_you_empty_gameservers() const;
  inline void set_total_near_you_empty_gameservers(::google::protobuf::uint32 value);
  
  // optional uint32 urgency_pct = 1;
  inline bool has_urgency_pct() const;
  inline void clear_urgency_pct();
  static const int kUrgencyPctFieldNumber = 1;
  inline ::google::protobuf::uint32 urgency_pct() const;
  inline void set_urgency_pct(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgMatchmakingProgress)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 avg_wait_time_new_;
  ::google::protobuf::uint32 avg_wait_time_join_late_;
  ::google::protobuf::uint32 your_wait_time_;
  ::google::protobuf::uint32 matching_worldwide_searching_players_;
  ::google::protobuf::uint32 matching_near_you_searching_players_;
  ::google::protobuf::uint32 total_worldwide_searching_players_;
  ::google::protobuf::uint32 total_near_you_searching_players_;
  ::google::protobuf::uint32 matching_worldwide_active_players_;
  ::google::protobuf::uint32 matching_near_you_active_players_;
  ::google::protobuf::uint32 total_worldwide_active_players_;
  ::google::protobuf::uint32 total_near_you_active_players_;
  ::google::protobuf::uint32 matching_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 matching_near_you_empty_gameservers_;
  ::google::protobuf::uint32 total_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 total_near_you_empty_gameservers_;
  ::google::protobuf::uint32 urgency_pct_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMatchmakingProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Item : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo_Item();
  virtual ~CMsgMvMVictoryInfo_Item();
  
  CMsgMvMVictoryInfo_Item(const CMsgMvMVictoryInfo_Item& from);
  
  inline CMsgMvMVictoryInfo_Item& operator=(const CMsgMvMVictoryInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Item& default_instance();
  
  void Swap(CMsgMvMVictoryInfo_Item* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMvMVictoryInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo_Item& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1 [default = INVALID];
  inline bool has_grant_reason() const;
  inline void clear_grant_reason();
  static const int kGrantReasonFieldNumber = 1;
  inline ::CMsgMvMVictoryInfo_GrantReason grant_reason() const;
  inline void set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value);
  
  // optional bytes item_data = 2;
  inline bool has_item_data() const;
  inline void clear_item_data();
  static const int kItemDataFieldNumber = 2;
  inline const ::std::string& item_data() const;
  inline void set_item_data(const ::std::string& value);
  inline void set_item_data(const char* value);
  inline void set_item_data(const void* value, size_t size);
  inline ::std::string* mutable_item_data();
  
  // optional fixed64 squad_surplus_claimer_steam_id = 3;
  inline bool has_squad_surplus_claimer_steam_id() const;
  inline void clear_squad_surplus_claimer_steam_id();
  static const int kSquadSurplusClaimerSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 squad_surplus_claimer_steam_id() const;
  inline void set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Item)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int grant_reason_;
  ::std::string* item_data_;
  static const ::std::string _default_item_data_;
  ::google::protobuf::uint64 squad_surplus_claimer_steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Player : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo_Player();
  virtual ~CMsgMvMVictoryInfo_Player();
  
  CMsgMvMVictoryInfo_Player(const CMsgMvMVictoryInfo_Player& from);
  
  inline CMsgMvMVictoryInfo_Player& operator=(const CMsgMvMVictoryInfo_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Player& default_instance();
  
  void Swap(CMsgMvMVictoryInfo_Player* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMvMVictoryInfo_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo_Player& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional bool badge_granted = 3;
  inline bool has_badge_granted() const;
  inline void clear_badge_granted();
  static const int kBadgeGrantedFieldNumber = 3;
  inline bool badge_granted() const;
  inline void set_badge_granted(bool value);
  
  // optional bool badge_progress_updated = 4;
  inline bool has_badge_progress_updated() const;
  inline void clear_badge_progress_updated();
  static const int kBadgeProgressUpdatedFieldNumber = 4;
  inline bool badge_progress_updated() const;
  inline void set_badge_progress_updated(bool value);
  
  // optional bool badge_leveled = 5;
  inline bool has_badge_leveled() const;
  inline void clear_badge_leveled();
  static const int kBadgeLeveledFieldNumber = 5;
  inline bool badge_leveled() const;
  inline void set_badge_leveled(bool value);
  
  // optional uint32 badge_level = 6;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);
  
  // optional uint32 badge_progress_bits = 7;
  inline bool has_badge_progress_bits() const;
  inline void clear_badge_progress_bits();
  static const int kBadgeProgressBitsFieldNumber = 7;
  inline ::google::protobuf::uint32 badge_progress_bits() const;
  inline void set_badge_progress_bits(::google::protobuf::uint32 value);
  
  // repeated .CMsgMvMVictoryInfo.Item items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::CMsgMvMVictoryInfo_Item& items(int index) const;
  inline ::CMsgMvMVictoryInfo_Item* mutable_items(int index);
  inline ::CMsgMvMVictoryInfo_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
      mutable_items();
  
  // optional bool voucher_missing = 9;
  inline bool has_voucher_missing() const;
  inline void clear_voucher_missing();
  static const int kVoucherMissingFieldNumber = 9;
  inline bool voucher_missing() const;
  inline void set_voucher_missing(bool value);
  
  // optional uint32 badge_points = 10;
  inline bool has_badge_points() const;
  inline void clear_badge_points();
  static const int kBadgePointsFieldNumber = 10;
  inline ::google::protobuf::uint32 badge_points() const;
  inline void set_badge_points(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Player)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  bool badge_granted_;
  bool badge_progress_updated_;
  bool badge_leveled_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 badge_progress_bits_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item > items_;
  bool voucher_missing_;
  ::google::protobuf::uint32 badge_points_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo();
  virtual ~CMsgMvMVictoryInfo();
  
  CMsgMvMVictoryInfo(const CMsgMvMVictoryInfo& from);
  
  inline CMsgMvMVictoryInfo& operator=(const CMsgMvMVictoryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo& default_instance();
  
  void Swap(CMsgMvMVictoryInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMvMVictoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo& from);
  void MergeFrom(const CMsgMvMVictoryInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgMvMVictoryInfo_Item Item;
  typedef CMsgMvMVictoryInfo_Player Player;
  
  typedef CMsgMvMVictoryInfo_GrantReason GrantReason;
  static const GrantReason INVALID = CMsgMvMVictoryInfo_GrantReason_INVALID;
  static const GrantReason BADGE_LEVELED = CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED;
  static const GrantReason SQUAD_SURPLUS = CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS;
  static const GrantReason MANN_UP = CMsgMvMVictoryInfo_GrantReason_MANN_UP;
  static const GrantReason HELP_A_NOOB = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
  static inline bool GrantReason_IsValid(int value) {
    return CMsgMvMVictoryInfo_GrantReason_IsValid(value);
  }
  static const GrantReason GrantReason_MIN =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN;
  static const GrantReason GrantReason_MAX =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX;
  static const int GrantReason_ARRAYSIZE =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GrantReason_descriptor() {
    return CMsgMvMVictoryInfo_GrantReason_descriptor();
  }
  static inline const ::std::string& GrantReason_Name(GrantReason value) {
    return CMsgMvMVictoryInfo_GrantReason_Name(value);
  }
  static inline bool GrantReason_Parse(const ::std::string& name,
      GrantReason* value) {
    return CMsgMvMVictoryInfo_GrantReason_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgMvMVictoryInfo.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgMvMVictoryInfo_Player& players(int index) const;
  inline ::CMsgMvMVictoryInfo_Player* mutable_players(int index);
  inline ::CMsgMvMVictoryInfo_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
      mutable_players();
  
  // optional string tour_name = 2;
  inline bool has_tour_name() const;
  inline void clear_tour_name();
  static const int kTourNameFieldNumber = 2;
  inline const ::std::string& tour_name() const;
  inline void set_tour_name(const ::std::string& value);
  inline void set_tour_name(const char* value);
  inline void set_tour_name(const char* value, size_t size);
  inline ::std::string* mutable_tour_name();
  
  // optional string mission_name = 3;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 3;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  
  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player > players_;
  ::std::string* tour_name_;
  static const ::std::string _default_tour_name_;
  ::std::string* mission_name_;
  static const ::std::string _default_mission_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFHelloResponse : public ::google::protobuf::Message {
 public:
  CGCMsgTFHelloResponse();
  virtual ~CGCMsgTFHelloResponse();
  
  CGCMsgTFHelloResponse(const CGCMsgTFHelloResponse& from);
  
  inline CGCMsgTFHelloResponse& operator=(const CGCMsgTFHelloResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFHelloResponse& default_instance();
  
  void Swap(CGCMsgTFHelloResponse* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgTFHelloResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFHelloResponse& from);
  void MergeFrom(const CGCMsgTFHelloResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version_check = 1;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 1;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);
  
  // repeated uint64 version_checksum = 2;
  inline int version_checksum_size() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 2;
  inline ::google::protobuf::uint64 version_checksum(int index) const;
  inline void set_version_checksum(int index, ::google::protobuf::uint64 value);
  inline void add_version_checksum(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      version_checksum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_version_checksum();
  
  // optional uint32 version_verbose = 3;
  inline bool has_version_verbose() const;
  inline void clear_version_verbose();
  static const int kVersionVerboseFieldNumber = 3;
  inline ::google::protobuf::uint32 version_verbose() const;
  inline void set_version_verbose(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgTFHelloResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > version_checksum_;
  ::google::protobuf::uint32 version_verbose_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgTFHelloResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFSync : public ::google::protobuf::Message {
 public:
  CGCMsgTFSync();
  virtual ~CGCMsgTFSync();
  
  CGCMsgTFSync(const CGCMsgTFSync& from);
  
  inline CGCMsgTFSync& operator=(const CGCMsgTFSync& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSync& default_instance();
  
  void Swap(CGCMsgTFSync* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgTFSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFSync& from);
  void MergeFrom(const CGCMsgTFSync& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes version_checksum = 1;
  inline bool has_version_checksum() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  inline const ::std::string& version_checksum() const;
  inline void set_version_checksum(const ::std::string& value);
  inline void set_version_checksum(const char* value);
  inline void set_version_checksum(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum();
  
  // optional uint32 version_check = 2;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 2;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);
  
  // optional uint32 version_check_ex = 3;
  inline bool has_version_check_ex() const;
  inline void clear_version_check_ex();
  static const int kVersionCheckExFieldNumber = 3;
  inline ::google::protobuf::uint32 version_check_ex() const;
  inline void set_version_check_ex(::google::protobuf::uint32 value);
  
  // optional uint32 version_check_ex2 = 4;
  inline bool has_version_check_ex2() const;
  inline void clear_version_check_ex2();
  static const int kVersionCheckEx2FieldNumber = 4;
  inline ::google::protobuf::uint32 version_check_ex2() const;
  inline void set_version_check_ex2(::google::protobuf::uint32 value);
  
  // optional bytes version_checksum_ex = 5;
  inline bool has_version_checksum_ex() const;
  inline void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 5;
  inline const ::std::string& version_checksum_ex() const;
  inline void set_version_checksum_ex(const ::std::string& value);
  inline void set_version_checksum_ex(const char* value);
  inline void set_version_checksum_ex(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum_ex();
  
  // @@protoc_insertion_point(class_scope:CGCMsgTFSync)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* version_checksum_;
  static const ::std::string _default_version_checksum_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_check_ex_;
  ::google::protobuf::uint32 version_check_ex2_;
  ::std::string* version_checksum_ex_;
  static const ::std::string _default_version_checksum_ex_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgTFSync* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFSyncEx : public ::google::protobuf::Message {
 public:
  CGCMsgTFSyncEx();
  virtual ~CGCMsgTFSyncEx();
  
  CGCMsgTFSyncEx(const CGCMsgTFSyncEx& from);
  
  inline CGCMsgTFSyncEx& operator=(const CGCMsgTFSyncEx& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSyncEx& default_instance();
  
  void Swap(CGCMsgTFSyncEx* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgTFSyncEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFSyncEx& from);
  void MergeFrom(const CGCMsgTFSyncEx& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string version_checksum = 1;
  inline bool has_version_checksum() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  inline const ::std::string& version_checksum() const;
  inline void set_version_checksum(const ::std::string& value);
  inline void set_version_checksum(const char* value);
  inline void set_version_checksum(const char* value, size_t size);
  inline ::std::string* mutable_version_checksum();
  
  // optional bytes version_checksum_ex = 2;
  inline bool has_version_checksum_ex() const;
  inline void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 2;
  inline const ::std::string& version_checksum_ex() const;
  inline void set_version_checksum_ex(const ::std::string& value);
  inline void set_version_checksum_ex(const char* value);
  inline void set_version_checksum_ex(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum_ex();
  
  // optional uint32 version_check = 3;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 3;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgTFSyncEx)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* version_checksum_;
  static const ::std::string _default_version_checksum_;
  ::std::string* version_checksum_ex_;
  static const ::std::string _default_version_checksum_ex_;
  ::google::protobuf::uint32 version_check_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgTFSyncEx* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictory_Player : public ::google::protobuf::Message {
 public:
  CMsgMvMVictory_Player();
  virtual ~CMsgMvMVictory_Player();
  
  CMsgMvMVictory_Player(const CMsgMvMVictory_Player& from);
  
  inline CMsgMvMVictory_Player& operator=(const CMsgMvMVictory_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory_Player& default_instance();
  
  void Swap(CMsgMvMVictory_Player* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMvMVictory_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictory_Player& from);
  void MergeFrom(const CMsgMvMVictory_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional bool squad_surplus = 2;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 2;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgMvMVictory.Player)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  bool squad_surplus_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMvMVictory_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictory : public ::google::protobuf::Message {
 public:
  CMsgMvMVictory();
  virtual ~CMsgMvMVictory();
  
  CMsgMvMVictory(const CMsgMvMVictory& from);
  
  inline CMsgMvMVictory& operator=(const CMsgMvMVictory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory& default_instance();
  
  void Swap(CMsgMvMVictory* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMvMVictory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictory& from);
  void MergeFrom(const CMsgMvMVictory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgMvMVictory_Player Player;
  
  // accessors -------------------------------------------------------
  
  // optional uint32 legacy_mission_index = 1;
  inline bool has_legacy_mission_index() const;
  inline void clear_legacy_mission_index();
  static const int kLegacyMissionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 legacy_mission_index() const;
  inline void set_legacy_mission_index(::google::protobuf::uint32 value);
  
  // optional string tour_name_mannup = 5;
  inline bool has_tour_name_mannup() const;
  inline void clear_tour_name_mannup();
  static const int kTourNameMannupFieldNumber = 5;
  inline const ::std::string& tour_name_mannup() const;
  inline void set_tour_name_mannup(const ::std::string& value);
  inline void set_tour_name_mannup(const char* value);
  inline void set_tour_name_mannup(const char* value, size_t size);
  inline ::std::string* mutable_tour_name_mannup();
  
  // optional string mission_name = 6;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 6;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  
  // repeated .CMsgMvMVictory.Player players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::CMsgMvMVictory_Player& players(int index) const;
  inline ::CMsgMvMVictory_Player* mutable_players(int index);
  inline ::CMsgMvMVictory_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
      mutable_players();
  
  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);
  
  // optional fixed32 event_time = 4;
  inline bool has_event_time() const;
  inline void clear_event_time();
  static const int kEventTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 event_time() const;
  inline void set_event_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgMvMVictory)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 legacy_mission_index_;
  ::std::string* tour_name_mannup_;
  static const ::std::string _default_tour_name_mannup_;
  ::std::string* mission_name_;
  static const ::std::string _default_mission_name_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player > players_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 event_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMvMVictory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMMannUpVictoryReply : public ::google::protobuf::Message {
 public:
  CMsgMvMMannUpVictoryReply();
  virtual ~CMsgMvMMannUpVictoryReply();
  
  CMsgMvMMannUpVictoryReply(const CMsgMvMMannUpVictoryReply& from);
  
  inline CMsgMvMMannUpVictoryReply& operator=(const CMsgMvMMannUpVictoryReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMMannUpVictoryReply& default_instance();
  
  void Swap(CMsgMvMMannUpVictoryReply* other);
  
  // implements Message ----------------------------------------------
  
  CMsgMvMMannUpVictoryReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMMannUpVictoryReply& from);
  void MergeFrom(const CMsgMvMMannUpVictoryReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgMvMMannUpVictoryReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgMvMMannUpVictoryReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobby : public ::google::protobuf::Message {
 public:
  CMsgGameServerKickingLobby();
  virtual ~CMsgGameServerKickingLobby();
  
  CMsgGameServerKickingLobby(const CMsgGameServerKickingLobby& from);
  
  inline CMsgGameServerKickingLobby& operator=(const CMsgGameServerKickingLobby& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobby& default_instance();
  
  void Swap(CMsgGameServerKickingLobby* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGameServerKickingLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerKickingLobby& from);
  void MergeFrom(const CMsgGameServerKickingLobby& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated fixed64 connected_players = 1;
  inline int connected_players_size() const;
  inline void clear_connected_players();
  static const int kConnectedPlayersFieldNumber = 1;
  inline ::google::protobuf::uint64 connected_players(int index) const;
  inline void set_connected_players(int index, ::google::protobuf::uint64 value);
  inline void add_connected_players(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      connected_players() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_connected_players();
  
  // optional bool create_party = 2 [default = true];
  inline bool has_create_party() const;
  inline void clear_create_party();
  static const int kCreatePartyFieldNumber = 2;
  inline bool create_party() const;
  inline void set_create_party(bool value);
  
  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);
  
  // optional uint64 match_id = 4;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobby)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > connected_players_;
  bool create_party_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGameServerKickingLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobbyResponse : public ::google::protobuf::Message {
 public:
  CMsgGameServerKickingLobbyResponse();
  virtual ~CMsgGameServerKickingLobbyResponse();
  
  CMsgGameServerKickingLobbyResponse(const CMsgGameServerKickingLobbyResponse& from);
  
  inline CMsgGameServerKickingLobbyResponse& operator=(const CMsgGameServerKickingLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobbyResponse& default_instance();
  
  void Swap(CMsgGameServerKickingLobbyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGameServerKickingLobbyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerKickingLobbyResponse& from);
  void MergeFrom(const CMsgGameServerKickingLobbyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobbyResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGameServerKickingLobbyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveGameAndPrepareToJoinParty : public ::google::protobuf::Message {
 public:
  CMsgLeaveGameAndPrepareToJoinParty();
  virtual ~CMsgLeaveGameAndPrepareToJoinParty();
  
  CMsgLeaveGameAndPrepareToJoinParty(const CMsgLeaveGameAndPrepareToJoinParty& from);
  
  inline CMsgLeaveGameAndPrepareToJoinParty& operator=(const CMsgLeaveGameAndPrepareToJoinParty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveGameAndPrepareToJoinParty& default_instance();
  
  void Swap(CMsgLeaveGameAndPrepareToJoinParty* other);
  
  // implements Message ----------------------------------------------
  
  CMsgLeaveGameAndPrepareToJoinParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void MergeFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgLeaveGameAndPrepareToJoinParty)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 party_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgLeaveGameAndPrepareToJoinParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerLeftMatch : public ::google::protobuf::Message {
 public:
  CMsgPlayerLeftMatch();
  virtual ~CMsgPlayerLeftMatch();
  
  CMsgPlayerLeftMatch(const CMsgPlayerLeftMatch& from);
  
  inline CMsgPlayerLeftMatch& operator=(const CMsgPlayerLeftMatch& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerLeftMatch& default_instance();
  
  void Swap(CMsgPlayerLeftMatch* other);
  
  // implements Message ----------------------------------------------
  
  CMsgPlayerLeftMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerLeftMatch& from);
  void MergeFrom(const CMsgPlayerLeftMatch& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional .TFMatchLeaveReason leave_reason = 2 [default = TFMatchLeaveReason_UNSPECIFIED];
  inline bool has_leave_reason() const;
  inline void clear_leave_reason();
  static const int kLeaveReasonFieldNumber = 2;
  inline TFMatchLeaveReason leave_reason() const;
  inline void set_leave_reason(TFMatchLeaveReason value);
  
  // optional bool was_abandon = 3;
  inline bool has_was_abandon() const;
  inline void clear_was_abandon();
  static const int kWasAbandonFieldNumber = 3;
  inline bool was_abandon() const;
  inline void set_was_abandon(bool value);
  
  // optional uint64 lobby_id = 4;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);
  
  // optional uint64 match_id = 5;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgPlayerLeftMatch)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  int leave_reason_;
  bool was_abandon_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgPlayerLeftMatch* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPlayerLeftMatchResponse : public ::google::protobuf::Message {
 public:
  CMsgPlayerLeftMatchResponse();
  virtual ~CMsgPlayerLeftMatchResponse();
  
  CMsgPlayerLeftMatchResponse(const CMsgPlayerLeftMatchResponse& from);
  
  inline CMsgPlayerLeftMatchResponse& operator=(const CMsgPlayerLeftMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerLeftMatchResponse& default_instance();
  
  void Swap(CMsgPlayerLeftMatchResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgPlayerLeftMatchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPlayerLeftMatchResponse& from);
  void MergeFrom(const CMsgPlayerLeftMatchResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgPlayerLeftMatchResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgPlayerLeftMatchResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHalloween_ServerBossEvent : public ::google::protobuf::Message {
 public:
  CMsgHalloween_ServerBossEvent();
  virtual ~CMsgHalloween_ServerBossEvent();
  
  CMsgHalloween_ServerBossEvent(const CMsgHalloween_ServerBossEvent& from);
  
  inline CMsgHalloween_ServerBossEvent& operator=(const CMsgHalloween_ServerBossEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_ServerBossEvent& default_instance();
  
  void Swap(CMsgHalloween_ServerBossEvent* other);
  
  // implements Message ----------------------------------------------
  
  CMsgHalloween_ServerBossEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHalloween_ServerBossEvent& from);
  void MergeFrom(const CMsgHalloween_ServerBossEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 event_counter = 1;
  inline bool has_event_counter() const;
  inline void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  inline ::google::protobuf::uint32 event_counter() const;
  inline void set_event_counter(::google::protobuf::uint32 value);
  
  // optional uint32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);
  
  // optional uint32 boss_type = 3;
  inline bool has_boss_type() const;
  inline void clear_boss_type();
  static const int kBossTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 boss_type() const;
  inline void set_boss_type(::google::protobuf::uint32 value);
  
  // optional uint32 boss_level = 4;
  inline bool has_boss_level() const;
  inline void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 boss_level() const;
  inline void set_boss_level(::google::protobuf::uint32 value);
  
  // optional uint32 event_type = 5;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);
  
  // optional uint32 players_involved = 6;
  inline bool has_players_involved() const;
  inline void clear_players_involved();
  static const int kPlayersInvolvedFieldNumber = 6;
  inline ::google::protobuf::uint32 players_involved() const;
  inline void set_players_involved(::google::protobuf::uint32 value);
  
  // optional float elapsed_time = 7;
  inline bool has_elapsed_time() const;
  inline void clear_elapsed_time();
  static const int kElapsedTimeFieldNumber = 7;
  inline float elapsed_time() const;
  inline void set_elapsed_time(float value);
  
  // @@protoc_insertion_point(class_scope:CMsgHalloween_ServerBossEvent)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 boss_type_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 players_involved_;
  float elapsed_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgHalloween_ServerBossEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHalloween_Merasmus2012 : public ::google::protobuf::Message {
 public:
  CMsgHalloween_Merasmus2012();
  virtual ~CMsgHalloween_Merasmus2012();
  
  CMsgHalloween_Merasmus2012(const CMsgHalloween_Merasmus2012& from);
  
  inline CMsgHalloween_Merasmus2012& operator=(const CMsgHalloween_Merasmus2012& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_Merasmus2012& default_instance();
  
  void Swap(CMsgHalloween_Merasmus2012* other);
  
  // implements Message ----------------------------------------------
  
  CMsgHalloween_Merasmus2012* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHalloween_Merasmus2012& from);
  void MergeFrom(const CMsgHalloween_Merasmus2012& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 event_counter = 1;
  inline bool has_event_counter() const;
  inline void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  inline ::google::protobuf::uint32 event_counter() const;
  inline void set_event_counter(::google::protobuf::uint32 value);
  
  // optional fixed32 time_submitted = 2;
  inline bool has_time_submitted() const;
  inline void clear_time_submitted();
  static const int kTimeSubmittedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_submitted() const;
  inline void set_time_submitted(::google::protobuf::uint32 value);
  
  // optional bool is_valve_server = 3;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 3;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);
  
  // optional uint32 boss_level = 4;
  inline bool has_boss_level() const;
  inline void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 boss_level() const;
  inline void set_boss_level(::google::protobuf::uint32 value);
  
  // optional uint32 spawned_health = 5;
  inline bool has_spawned_health() const;
  inline void clear_spawned_health();
  static const int kSpawnedHealthFieldNumber = 5;
  inline ::google::protobuf::uint32 spawned_health() const;
  inline void set_spawned_health(::google::protobuf::uint32 value);
  
  // optional uint32 remaining_health = 6;
  inline bool has_remaining_health() const;
  inline void clear_remaining_health();
  static const int kRemainingHealthFieldNumber = 6;
  inline ::google::protobuf::uint32 remaining_health() const;
  inline void set_remaining_health(::google::protobuf::uint32 value);
  
  // optional uint32 life_time = 7;
  inline bool has_life_time() const;
  inline void clear_life_time();
  static const int kLifeTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 life_time() const;
  inline void set_life_time(::google::protobuf::uint32 value);
  
  // optional uint32 bomb_kills = 8;
  inline bool has_bomb_kills() const;
  inline void clear_bomb_kills();
  static const int kBombKillsFieldNumber = 8;
  inline ::google::protobuf::uint32 bomb_kills() const;
  inline void set_bomb_kills(::google::protobuf::uint32 value);
  
  // optional uint32 staff_kills = 9;
  inline bool has_staff_kills() const;
  inline void clear_staff_kills();
  static const int kStaffKillsFieldNumber = 9;
  inline ::google::protobuf::uint32 staff_kills() const;
  inline void set_staff_kills(::google::protobuf::uint32 value);
  
  // optional uint32 pvp_kills = 10;
  inline bool has_pvp_kills() const;
  inline void clear_pvp_kills();
  static const int kPvpKillsFieldNumber = 10;
  inline ::google::protobuf::uint32 pvp_kills() const;
  inline void set_pvp_kills(::google::protobuf::uint32 value);
  
  // optional uint32 prophunt_time1 = 11;
  inline bool has_prophunt_time1() const;
  inline void clear_prophunt_time1();
  static const int kProphuntTime1FieldNumber = 11;
  inline ::google::protobuf::uint32 prophunt_time1() const;
  inline void set_prophunt_time1(::google::protobuf::uint32 value);
  
  // optional uint32 prophunt_time2 = 12;
  inline bool has_prophunt_time2() const;
  inline void clear_prophunt_time2();
  static const int kProphuntTime2FieldNumber = 12;
  inline ::google::protobuf::uint32 prophunt_time2() const;
  inline void set_prophunt_time2(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_scout = 13;
  inline bool has_dmg_scout() const;
  inline void clear_dmg_scout();
  static const int kDmgScoutFieldNumber = 13;
  inline ::google::protobuf::uint32 dmg_scout() const;
  inline void set_dmg_scout(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_sniper = 14;
  inline bool has_dmg_sniper() const;
  inline void clear_dmg_sniper();
  static const int kDmgSniperFieldNumber = 14;
  inline ::google::protobuf::uint32 dmg_sniper() const;
  inline void set_dmg_sniper(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_soldier = 15;
  inline bool has_dmg_soldier() const;
  inline void clear_dmg_soldier();
  static const int kDmgSoldierFieldNumber = 15;
  inline ::google::protobuf::uint32 dmg_soldier() const;
  inline void set_dmg_soldier(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_demo = 16;
  inline bool has_dmg_demo() const;
  inline void clear_dmg_demo();
  static const int kDmgDemoFieldNumber = 16;
  inline ::google::protobuf::uint32 dmg_demo() const;
  inline void set_dmg_demo(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_medic = 17;
  inline bool has_dmg_medic() const;
  inline void clear_dmg_medic();
  static const int kDmgMedicFieldNumber = 17;
  inline ::google::protobuf::uint32 dmg_medic() const;
  inline void set_dmg_medic(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_heavy = 18;
  inline bool has_dmg_heavy() const;
  inline void clear_dmg_heavy();
  static const int kDmgHeavyFieldNumber = 18;
  inline ::google::protobuf::uint32 dmg_heavy() const;
  inline void set_dmg_heavy(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_pyro = 19;
  inline bool has_dmg_pyro() const;
  inline void clear_dmg_pyro();
  static const int kDmgPyroFieldNumber = 19;
  inline ::google::protobuf::uint32 dmg_pyro() const;
  inline void set_dmg_pyro(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_spy = 20;
  inline bool has_dmg_spy() const;
  inline void clear_dmg_spy();
  static const int kDmgSpyFieldNumber = 20;
  inline ::google::protobuf::uint32 dmg_spy() const;
  inline void set_dmg_spy(::google::protobuf::uint32 value);
  
  // optional uint32 dmg_engineer = 21;
  inline bool has_dmg_engineer() const;
  inline void clear_dmg_engineer();
  static const int kDmgEngineerFieldNumber = 21;
  inline ::google::protobuf::uint32 dmg_engineer() const;
  inline void set_dmg_engineer(::google::protobuf::uint32 value);
  
  // optional uint32 scout_count = 22;
  inline bool has_scout_count() const;
  inline void clear_scout_count();
  static const int kScoutCountFieldNumber = 22;
  inline ::google::protobuf::uint32 scout_count() const;
  inline void set_scout_count(::google::protobuf::uint32 value);
  
  // optional uint32 sniper_count = 23;
  inline bool has_sniper_count() const;
  inline void clear_sniper_count();
  static const int kSniperCountFieldNumber = 23;
  inline ::google::protobuf::uint32 sniper_count() const;
  inline void set_sniper_count(::google::protobuf::uint32 value);
  
  // optional uint32 solider_count = 24;
  inline bool has_solider_count() const;
  inline void clear_solider_count();
  static const int kSoliderCountFieldNumber = 24;
  inline ::google::protobuf::uint32 solider_count() const;
  inline void set_solider_count(::google::protobuf::uint32 value);
  
  // optional uint32 demo_count = 25;
  inline bool has_demo_count() const;
  inline void clear_demo_count();
  static const int kDemoCountFieldNumber = 25;
  inline ::google::protobuf::uint32 demo_count() const;
  inline void set_demo_count(::google::protobuf::uint32 value);
  
  // optional uint32 medic_count = 26;
  inline bool has_medic_count() const;
  inline void clear_medic_count();
  static const int kMedicCountFieldNumber = 26;
  inline ::google::protobuf::uint32 medic_count() const;
  inline void set_medic_count(::google::protobuf::uint32 value);
  
  // optional uint32 heavy_count = 27;
  inline bool has_heavy_count() const;
  inline void clear_heavy_count();
  static const int kHeavyCountFieldNumber = 27;
  inline ::google::protobuf::uint32 heavy_count() const;
  inline void set_heavy_count(::google::protobuf::uint32 value);
  
  // optional uint32 pyro_count = 28;
  inline bool has_pyro_count() const;
  inline void clear_pyro_count();
  static const int kPyroCountFieldNumber = 28;
  inline ::google::protobuf::uint32 pyro_count() const;
  inline void set_pyro_count(::google::protobuf::uint32 value);
  
  // optional uint32 spy_count = 29;
  inline bool has_spy_count() const;
  inline void clear_spy_count();
  static const int kSpyCountFieldNumber = 29;
  inline ::google::protobuf::uint32 spy_count() const;
  inline void set_spy_count(::google::protobuf::uint32 value);
  
  // optional uint32 engineer_count = 30;
  inline bool has_engineer_count() const;
  inline void clear_engineer_count();
  static const int kEngineerCountFieldNumber = 30;
  inline ::google::protobuf::uint32 engineer_count() const;
  inline void set_engineer_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgHalloween_Merasmus2012)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 time_submitted_;
  bool is_valve_server_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 spawned_health_;
  ::google::protobuf::uint32 remaining_health_;
  ::google::protobuf::uint32 life_time_;
  ::google::protobuf::uint32 bomb_kills_;
  ::google::protobuf::uint32 staff_kills_;
  ::google::protobuf::uint32 pvp_kills_;
  ::google::protobuf::uint32 prophunt_time1_;
  ::google::protobuf::uint32 prophunt_time2_;
  ::google::protobuf::uint32 dmg_scout_;
  ::google::protobuf::uint32 dmg_sniper_;
  ::google::protobuf::uint32 dmg_soldier_;
  ::google::protobuf::uint32 dmg_demo_;
  ::google::protobuf::uint32 dmg_medic_;
  ::google::protobuf::uint32 dmg_heavy_;
  ::google::protobuf::uint32 dmg_pyro_;
  ::google::protobuf::uint32 dmg_spy_;
  ::google::protobuf::uint32 dmg_engineer_;
  ::google::protobuf::uint32 scout_count_;
  ::google::protobuf::uint32 sniper_count_;
  ::google::protobuf::uint32 solider_count_;
  ::google::protobuf::uint32 demo_count_;
  ::google::protobuf::uint32 medic_count_;
  ::google::protobuf::uint32 heavy_count_;
  ::google::protobuf::uint32 pyro_count_;
  ::google::protobuf::uint32 spy_count_;
  ::google::protobuf::uint32 engineer_count_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgHalloween_Merasmus2012* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel_Player : public ::google::protobuf::Message {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel_Player();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel_Player();
  
  CMsgUpdateHalloweenMerasmusLootLevel_Player(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  
  inline CMsgUpdateHalloweenMerasmusLootLevel_Player& operator=(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel_Player& default_instance();
  
  void Swap(CMsgUpdateHalloweenMerasmusLootLevel_Player* other);
  
  // implements Message ----------------------------------------------
  
  CMsgUpdateHalloweenMerasmusLootLevel_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel.Player)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgUpdateHalloweenMerasmusLootLevel_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel : public ::google::protobuf::Message {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel();
  
  CMsgUpdateHalloweenMerasmusLootLevel(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  
  inline CMsgUpdateHalloweenMerasmusLootLevel& operator=(const CMsgUpdateHalloweenMerasmusLootLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel& default_instance();
  
  void Swap(CMsgUpdateHalloweenMerasmusLootLevel* other);
  
  // implements Message ----------------------------------------------
  
  CMsgUpdateHalloweenMerasmusLootLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgUpdateHalloweenMerasmusLootLevel_Player Player;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& players(int index) const;
  inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* mutable_players(int index);
  inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
      mutable_players();
  
  // optional uint32 merasmus_level = 2;
  inline bool has_merasmus_level() const;
  inline void clear_merasmus_level();
  static const int kMerasmusLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 merasmus_level() const;
  inline void set_merasmus_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player > players_;
  ::google::protobuf::uint32 merasmus_level_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgUpdateHalloweenMerasmusLootLevel* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_String : public ::google::protobuf::Message {
 public:
  CAttribute_String();
  virtual ~CAttribute_String();
  
  CAttribute_String(const CAttribute_String& from);
  
  inline CAttribute_String& operator=(const CAttribute_String& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_String& default_instance();
  
  void Swap(CAttribute_String* other);
  
  // implements Message ----------------------------------------------
  
  CAttribute_String* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_String& from);
  void MergeFrom(const CAttribute_String& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  
  // @@protoc_insertion_point(class_scope:CAttribute_String)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* value_;
  static const ::std::string _default_value_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CAttribute_String* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent : public ::google::protobuf::Message {
 public:
  CAttribute_DynamicRecipeComponent();
  virtual ~CAttribute_DynamicRecipeComponent();
  
  CAttribute_DynamicRecipeComponent(const CAttribute_DynamicRecipeComponent& from);
  
  inline CAttribute_DynamicRecipeComponent& operator=(const CAttribute_DynamicRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent& default_instance();
  
  void Swap(CAttribute_DynamicRecipeComponent* other);
  
  // implements Message ----------------------------------------------
  
  CAttribute_DynamicRecipeComponent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_DynamicRecipeComponent& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional uint32 item_quality = 2;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 item_quality() const;
  inline void set_item_quality(::google::protobuf::uint32 value);
  
  // optional uint32 component_flags = 3;
  inline bool has_component_flags() const;
  inline void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 component_flags() const;
  inline void set_component_flags(::google::protobuf::uint32 value);
  
  // optional string attributes_string = 4;
  inline bool has_attributes_string() const;
  inline void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 4;
  inline const ::std::string& attributes_string() const;
  inline void set_attributes_string(const ::std::string& value);
  inline void set_attributes_string(const char* value);
  inline void set_attributes_string(const char* value, size_t size);
  inline ::std::string* mutable_attributes_string();
  
  // optional uint32 num_required = 5;
  inline bool has_num_required() const;
  inline void clear_num_required();
  static const int kNumRequiredFieldNumber = 5;
  inline ::google::protobuf::uint32 num_required() const;
  inline void set_num_required(::google::protobuf::uint32 value);
  
  // optional uint32 num_fulfilled = 6;
  inline bool has_num_fulfilled() const;
  inline void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 6;
  inline ::google::protobuf::uint32 num_fulfilled() const;
  inline void set_num_fulfilled(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_quality_;
  ::google::protobuf::uint32 component_flags_;
  ::std::string* attributes_string_;
  static const ::std::string _default_attributes_string_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 num_fulfilled_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CAttribute_DynamicRecipeComponent* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT : public ::google::protobuf::Message {
 public:
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
  virtual ~CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
  
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  
  inline CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& operator=(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& default_instance();
  
  void Swap(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* other);
  
  // implements Message ----------------------------------------------
  
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional uint32 item_def = 2;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);
  
  // optional uint32 item_quality = 3;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 item_quality() const;
  inline void set_item_quality(::google::protobuf::uint32 value);
  
  // optional uint32 component_flags = 4;
  inline bool has_component_flags() const;
  inline void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 component_flags() const;
  inline void set_component_flags(::google::protobuf::uint32 value);
  
  // optional uint32 item_flags = 5;
  inline bool has_item_flags() const;
  inline void clear_item_flags();
  static const int kItemFlagsFieldNumber = 5;
  inline ::google::protobuf::uint32 item_flags() const;
  inline void set_item_flags(::google::protobuf::uint32 value);
  
  // optional string attributes_string = 6;
  inline bool has_attributes_string() const;
  inline void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 6;
  inline const ::std::string& attributes_string() const;
  inline void set_attributes_string(const ::std::string& value);
  inline void set_attributes_string(const char* value);
  inline void set_attributes_string(const char* value, size_t size);
  inline ::std::string* mutable_attributes_string();
  
  // optional uint32 num_required = 7;
  inline bool has_num_required() const;
  inline void clear_num_required();
  static const int kNumRequiredFieldNumber = 7;
  inline ::google::protobuf::uint32 num_required() const;
  inline void set_num_required(::google::protobuf::uint32 value);
  
  // optional uint32 item_count = 8;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 8;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);
  
  // optional uint32 num_fulfilled = 9;
  inline bool has_num_fulfilled() const;
  inline void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 9;
  inline ::google::protobuf::uint32 num_fulfilled() const;
  inline void set_num_fulfilled(::google::protobuf::uint32 value);
  
  // optional uint32 items_fulfilled = 10;
  inline bool has_items_fulfilled() const;
  inline void clear_items_fulfilled();
  static const int kItemsFulfilledFieldNumber = 10;
  inline ::google::protobuf::uint32 items_fulfilled() const;
  inline void set_items_fulfilled(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 item_quality_;
  ::google::protobuf::uint32 component_flags_;
  ::google::protobuf::uint32 item_flags_;
  ::std::string* attributes_string_;
  static const ::std::string _default_attributes_string_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 num_fulfilled_;
  ::google::protobuf::uint32 items_fulfilled_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_ItemSlotCriteria : public ::google::protobuf::Message {
 public:
  CAttribute_ItemSlotCriteria();
  virtual ~CAttribute_ItemSlotCriteria();
  
  CAttribute_ItemSlotCriteria(const CAttribute_ItemSlotCriteria& from);
  
  inline CAttribute_ItemSlotCriteria& operator=(const CAttribute_ItemSlotCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_ItemSlotCriteria& default_instance();
  
  void Swap(CAttribute_ItemSlotCriteria* other);
  
  // implements Message ----------------------------------------------
  
  CAttribute_ItemSlotCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_ItemSlotCriteria& from);
  void MergeFrom(const CAttribute_ItemSlotCriteria& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string tags = 1;
  inline bool has_tags() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 1;
  inline const ::std::string& tags() const;
  inline void set_tags(const ::std::string& value);
  inline void set_tags(const char* value);
  inline void set_tags(const char* value, size_t size);
  inline ::std::string* mutable_tags();
  
  // @@protoc_insertion_point(class_scope:CAttribute_ItemSlotCriteria)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* tags_;
  static const ::std::string _default_tags_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CAttribute_ItemSlotCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetItemSlotAttribute : public ::google::protobuf::Message {
 public:
  CMsgSetItemSlotAttribute();
  virtual ~CMsgSetItemSlotAttribute();
  
  CMsgSetItemSlotAttribute(const CMsgSetItemSlotAttribute& from);
  
  inline CMsgSetItemSlotAttribute& operator=(const CMsgSetItemSlotAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetItemSlotAttribute& default_instance();
  
  void Swap(CMsgSetItemSlotAttribute* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSetItemSlotAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetItemSlotAttribute& from);
  void MergeFrom(const CMsgSetItemSlotAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);
  
  // optional uint64 slot_item_original_id = 2;
  inline bool has_slot_item_original_id() const;
  inline void clear_slot_item_original_id();
  static const int kSlotItemOriginalIdFieldNumber = 2;
  inline ::google::protobuf::uint64 slot_item_original_id() const;
  inline void set_slot_item_original_id(::google::protobuf::uint64 value);
  
  // optional uint32 slot_index = 3;
  inline bool has_slot_index() const;
  inline void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 slot_index() const;
  inline void set_slot_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSetItemSlotAttribute)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 slot_item_original_id_;
  ::google::protobuf::uint32 slot_index_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgSetItemSlotAttribute* default_instance_;
};
// -------------------------------------------------------------------

class CSOWarData : public ::google::protobuf::Message {
 public:
  CSOWarData();
  virtual ~CSOWarData();
  
  CSOWarData(const CSOWarData& from);
  
  inline CSOWarData& operator=(const CSOWarData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOWarData& default_instance();
  
  void Swap(CSOWarData* other);
  
  // implements Message ----------------------------------------------
  
  CSOWarData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOWarData& from);
  void MergeFrom(const CSOWarData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);
  
  // optional uint32 affiliation = 3;
  inline bool has_affiliation() const;
  inline void clear_affiliation();
  static const int kAffiliationFieldNumber = 3;
  inline ::google::protobuf::uint32 affiliation() const;
  inline void set_affiliation(::google::protobuf::uint32 value);
  
  // optional uint32 points_scored = 4;
  inline bool has_points_scored() const;
  inline void clear_points_scored();
  static const int kPointsScoredFieldNumber = 4;
  inline ::google::protobuf::uint32 points_scored() const;
  inline void set_points_scored(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOWarData)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 war_id_;
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 points_scored_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOWarData* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_IndividualUpdate : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_IndividualUpdate();
  virtual ~CGCMsgGC_War_IndividualUpdate();
  
  CGCMsgGC_War_IndividualUpdate(const CGCMsgGC_War_IndividualUpdate& from);
  
  inline CGCMsgGC_War_IndividualUpdate& operator=(const CGCMsgGC_War_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_IndividualUpdate& default_instance();
  
  void Swap(CGCMsgGC_War_IndividualUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgGC_War_IndividualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_War_IndividualUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);
  
  // optional uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_IndividualUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 war_id_;
  ::google::protobuf::uint32 score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgGC_War_IndividualUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_JoinWar : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_JoinWar();
  virtual ~CGCMsgGC_War_JoinWar();
  
  CGCMsgGC_War_JoinWar(const CGCMsgGC_War_JoinWar& from);
  
  inline CGCMsgGC_War_JoinWar& operator=(const CGCMsgGC_War_JoinWar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_JoinWar& default_instance();
  
  void Swap(CGCMsgGC_War_JoinWar* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgGC_War_JoinWar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_JoinWar& from);
  void MergeFrom(const CGCMsgGC_War_JoinWar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 affiliation = 1;
  inline bool has_affiliation() const;
  inline void clear_affiliation();
  static const int kAffiliationFieldNumber = 1;
  inline ::google::protobuf::uint32 affiliation() const;
  inline void set_affiliation(::google::protobuf::uint32 value);
  
  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_JoinWar)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 war_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgGC_War_JoinWar* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_RequestGlobalStats : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_RequestGlobalStats();
  virtual ~CGCMsgGC_War_RequestGlobalStats();
  
  CGCMsgGC_War_RequestGlobalStats(const CGCMsgGC_War_RequestGlobalStats& from);
  
  inline CGCMsgGC_War_RequestGlobalStats& operator=(const CGCMsgGC_War_RequestGlobalStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_RequestGlobalStats& default_instance();
  
  void Swap(CGCMsgGC_War_RequestGlobalStats* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgGC_War_RequestGlobalStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_RequestGlobalStats& from);
  void MergeFrom(const CGCMsgGC_War_RequestGlobalStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 war_id = 1;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 1;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_RequestGlobalStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 war_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgGC_War_RequestGlobalStats* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_GlobalStatsResponse_SideScore : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_GlobalStatsResponse_SideScore();
  virtual ~CGCMsgGC_War_GlobalStatsResponse_SideScore();
  
  CGCMsgGC_War_GlobalStatsResponse_SideScore(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  
  inline CGCMsgGC_War_GlobalStatsResponse_SideScore& operator=(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_GlobalStatsResponse_SideScore& default_instance();
  
  void Swap(CGCMsgGC_War_GlobalStatsResponse_SideScore* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgGC_War_GlobalStatsResponse_SideScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  void MergeFrom(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 side = 1;
  inline bool has_side() const;
  inline void clear_side();
  static const int kSideFieldNumber = 1;
  inline ::google::protobuf::uint32 side() const;
  inline void set_side(::google::protobuf::uint32 value);
  
  // optional uint64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_GlobalStatsResponse.SideScore)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 side_;
  ::google::protobuf::uint64 score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgGC_War_GlobalStatsResponse_SideScore* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_War_GlobalStatsResponse : public ::google::protobuf::Message {
 public:
  CGCMsgGC_War_GlobalStatsResponse();
  virtual ~CGCMsgGC_War_GlobalStatsResponse();
  
  CGCMsgGC_War_GlobalStatsResponse(const CGCMsgGC_War_GlobalStatsResponse& from);
  
  inline CGCMsgGC_War_GlobalStatsResponse& operator=(const CGCMsgGC_War_GlobalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_GlobalStatsResponse& default_instance();
  
  void Swap(CGCMsgGC_War_GlobalStatsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgGC_War_GlobalStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_War_GlobalStatsResponse& from);
  void MergeFrom(const CGCMsgGC_War_GlobalStatsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CGCMsgGC_War_GlobalStatsResponse_SideScore SideScore;
  
  // accessors -------------------------------------------------------
  
  // repeated .CGCMsgGC_War_GlobalStatsResponse.SideScore side_scores = 1;
  inline int side_scores_size() const;
  inline void clear_side_scores();
  static const int kSideScoresFieldNumber = 1;
  inline const ::CGCMsgGC_War_GlobalStatsResponse_SideScore& side_scores(int index) const;
  inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* mutable_side_scores(int index);
  inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* add_side_scores();
  inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >&
      side_scores() const;
  inline ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >*
      mutable_side_scores();
  
  // optional uint32 war_id = 2;
  inline bool has_war_id() const;
  inline void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 war_id() const;
  inline void set_war_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_GlobalStatsResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore > side_scores_;
  ::google::protobuf::uint32 war_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgGC_War_GlobalStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate : public ::google::protobuf::Message {
 public:
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
  virtual ~CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
  
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  
  inline CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& operator=(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& default_instance();
  
  void Swap(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional bytes score_id = 4;
  inline bool has_score_id() const;
  inline void clear_score_id();
  static const int kScoreIdFieldNumber = 4;
  inline const ::std::string& score_id() const;
  inline void set_score_id(const ::std::string& value);
  inline void set_score_id(const char* value);
  inline void set_score_id(const void* value, size_t size);
  inline ::std::string* mutable_score_id();
  
  // optional uint32 score_check = 5;
  inline bool has_score_check() const;
  inline void clear_score_check();
  static const int kScoreCheckFieldNumber = 5;
  inline ::google::protobuf::uint32 score_check() const;
  inline void set_score_check(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 type_;
  ::std::string* score_id_;
  static const ::std::string _default_score_id_;
  ::google::protobuf::uint32 score_check_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_WorldItemPlacement : public ::google::protobuf::Message {
 public:
  CAttribute_WorldItemPlacement();
  virtual ~CAttribute_WorldItemPlacement();
  
  CAttribute_WorldItemPlacement(const CAttribute_WorldItemPlacement& from);
  
  inline CAttribute_WorldItemPlacement& operator=(const CAttribute_WorldItemPlacement& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_WorldItemPlacement& default_instance();
  
  void Swap(CAttribute_WorldItemPlacement* other);
  
  // implements Message ----------------------------------------------
  
  CAttribute_WorldItemPlacement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_WorldItemPlacement& from);
  void MergeFrom(const CAttribute_WorldItemPlacement& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 original_item_id = 1;
  inline bool has_original_item_id() const;
  inline void clear_original_item_id();
  static const int kOriginalItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 original_item_id() const;
  inline void set_original_item_id(::google::protobuf::uint64 value);
  
  // optional float pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline float pos_x() const;
  inline void set_pos_x(float value);
  
  // optional float pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline float pos_y() const;
  inline void set_pos_y(float value);
  
  // optional float pos_z = 4;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  inline float pos_z() const;
  inline void set_pos_z(float value);
  
  // optional float ang_x = 5;
  inline bool has_ang_x() const;
  inline void clear_ang_x();
  static const int kAngXFieldNumber = 5;
  inline float ang_x() const;
  inline void set_ang_x(float value);
  
  // optional float ang_y = 6;
  inline bool has_ang_y() const;
  inline void clear_ang_y();
  static const int kAngYFieldNumber = 6;
  inline float ang_y() const;
  inline void set_ang_y(float value);
  
  // optional float ang_z = 7;
  inline bool has_ang_z() const;
  inline void clear_ang_z();
  static const int kAngZFieldNumber = 7;
  inline float ang_z() const;
  inline void set_ang_z(float value);
  
  // @@protoc_insertion_point(class_scope:CAttribute_WorldItemPlacement)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 original_item_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float ang_x_;
  float ang_y_;
  float ang_z_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CAttribute_WorldItemPlacement* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsg_WorldItemPlacement_Update : public ::google::protobuf::Message {
 public:
  CGCMsg_WorldItemPlacement_Update();
  virtual ~CGCMsg_WorldItemPlacement_Update();
  
  CGCMsg_WorldItemPlacement_Update(const CGCMsg_WorldItemPlacement_Update& from);
  
  inline CGCMsg_WorldItemPlacement_Update& operator=(const CGCMsg_WorldItemPlacement_Update& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsg_WorldItemPlacement_Update& default_instance();
  
  void Swap(CGCMsg_WorldItemPlacement_Update* other);
  
  // implements Message ----------------------------------------------
  
  CGCMsg_WorldItemPlacement_Update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsg_WorldItemPlacement_Update& from);
  void MergeFrom(const CGCMsg_WorldItemPlacement_Update& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 original_item_id = 1;
  inline bool has_original_item_id() const;
  inline void clear_original_item_id();
  static const int kOriginalItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 original_item_id() const;
  inline void set_original_item_id(::google::protobuf::uint64 value);
  
  // optional float pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline float pos_x() const;
  inline void set_pos_x(float value);
  
  // optional float pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline float pos_y() const;
  inline void set_pos_y(float value);
  
  // optional float pos_z = 4;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  inline float pos_z() const;
  inline void set_pos_z(float value);
  
  // optional float ang_x = 5;
  inline bool has_ang_x() const;
  inline void clear_ang_x();
  static const int kAngXFieldNumber = 5;
  inline float ang_x() const;
  inline void set_ang_x(float value);
  
  // optional float ang_y = 6;
  inline bool has_ang_y() const;
  inline void clear_ang_y();
  static const int kAngYFieldNumber = 6;
  inline float ang_y() const;
  inline void set_ang_y(float value);
  
  // optional float ang_z = 7;
  inline bool has_ang_z() const;
  inline void clear_ang_z();
  static const int kAngZFieldNumber = 7;
  inline float ang_z() const;
  inline void set_ang_z(float value);
  
  // optional bool force_remove_all = 8;
  inline bool has_force_remove_all() const;
  inline void clear_force_remove_all();
  static const int kForceRemoveAllFieldNumber = 8;
  inline bool force_remove_all() const;
  inline void set_force_remove_all(bool value);
  
  // optional string attrib_name = 9;
  inline bool has_attrib_name() const;
  inline void clear_attrib_name();
  static const int kAttribNameFieldNumber = 9;
  inline const ::std::string& attrib_name() const;
  inline void set_attrib_name(const ::std::string& value);
  inline void set_attrib_name(const char* value);
  inline void set_attrib_name(const char* value, size_t size);
  inline ::std::string* mutable_attrib_name();
  
  // @@protoc_insertion_point(class_scope:CGCMsg_WorldItemPlacement_Update)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 original_item_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float ang_x_;
  float ang_y_;
  float ang_z_;
  bool force_remove_all_;
  ::std::string* attrib_name_;
  static const ::std::string _default_attrib_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGCMsg_WorldItemPlacement_Update* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotification : public ::google::protobuf::Message {
 public:
  CMsgGCNotification();
  virtual ~CMsgGCNotification();
  
  CMsgGCNotification(const CMsgGCNotification& from);
  
  inline CMsgGCNotification& operator=(const CMsgGCNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotification& default_instance();
  
  void Swap(CMsgGCNotification* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotification& from);
  void MergeFrom(const CMsgGCNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGCNotification_NotificationType NotificationType;
  static const NotificationType NOTIFICATION_REPORTED_PLAYER_BANNED = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED;
  static const NotificationType NOTIFICATION_CUSTOM_STRING = CMsgGCNotification_NotificationType_NOTIFICATION_CUSTOM_STRING;
  static const NotificationType NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS = CMsgGCNotification_NotificationType_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS;
  static const NotificationType NOTIFICATION_REPORTED_PLAYER_WAS_BANNED = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED;
  static const NotificationType NOTIFICATION_NUM_TYPES = CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES;
  static inline bool NotificationType_IsValid(int value) {
    return CMsgGCNotification_NotificationType_IsValid(value);
  }
  static const NotificationType NotificationType_MIN =
    CMsgGCNotification_NotificationType_NotificationType_MIN;
  static const NotificationType NotificationType_MAX =
    CMsgGCNotification_NotificationType_NotificationType_MAX;
  static const int NotificationType_ARRAYSIZE =
    CMsgGCNotification_NotificationType_NotificationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NotificationType_descriptor() {
    return CMsgGCNotification_NotificationType_descriptor();
  }
  static inline const ::std::string& NotificationType_Name(NotificationType value) {
    return CMsgGCNotification_NotificationType_Name(value);
  }
  static inline bool NotificationType_Parse(const ::std::string& name,
      NotificationType* value) {
    return CMsgGCNotification_NotificationType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional uint64 notification_id = 1;
  inline bool has_notification_id() const;
  inline void clear_notification_id();
  static const int kNotificationIdFieldNumber = 1;
  inline ::google::protobuf::uint64 notification_id() const;
  inline void set_notification_id(::google::protobuf::uint64 value);
  
  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional fixed32 expiration_time = 3;
  inline bool has_expiration_time() const;
  inline void clear_expiration_time();
  static const int kExpirationTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 expiration_time() const;
  inline void set_expiration_time(::google::protobuf::uint32 value);
  
  // optional .CMsgGCNotification.NotificationType type = 4 [default = NOTIFICATION_REPORTED_PLAYER_BANNED];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::CMsgGCNotification_NotificationType type() const;
  inline void set_type(::CMsgGCNotification_NotificationType value);
  
  // optional string notification_string = 5;
  inline bool has_notification_string() const;
  inline void clear_notification_string();
  static const int kNotificationStringFieldNumber = 5;
  inline const ::std::string& notification_string() const;
  inline void set_notification_string(const ::std::string& value);
  inline void set_notification_string(const char* value);
  inline void set_notification_string(const char* value, size_t size);
  inline ::std::string* mutable_notification_string();
  
  // @@protoc_insertion_point(class_scope:CMsgGCNotification)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 notification_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 expiration_time_;
  int type_;
  ::std::string* notification_string_;
  static const ::std::string _default_notification_string_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGCNotification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCNotificationQueue : public ::google::protobuf::Message {
 public:
  CMsgGCNotificationQueue();
  virtual ~CMsgGCNotificationQueue();
  
  CMsgGCNotificationQueue(const CMsgGCNotificationQueue& from);
  
  inline CMsgGCNotificationQueue& operator=(const CMsgGCNotificationQueue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationQueue& default_instance();
  
  void Swap(CMsgGCNotificationQueue* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCNotificationQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCNotificationQueue& from);
  void MergeFrom(const CMsgGCNotificationQueue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgGCNotification notifications = 1;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 1;
  inline const ::CMsgGCNotification& notifications(int index) const;
  inline ::CMsgGCNotification* mutable_notifications(int index);
  inline ::CMsgGCNotification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >*
      mutable_notifications();
  
  // @@protoc_insertion_point(class_scope:CMsgGCNotificationQueue)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification > notifications_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGCNotificationQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotificationAcknowledge : public ::google::protobuf::Message {
 public:
  CMsgNotificationAcknowledge();
  virtual ~CMsgNotificationAcknowledge();
  
  CMsgNotificationAcknowledge(const CMsgNotificationAcknowledge& from);
  
  inline CMsgNotificationAcknowledge& operator=(const CMsgNotificationAcknowledge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationAcknowledge& default_instance();
  
  void Swap(CMsgNotificationAcknowledge* other);
  
  // implements Message ----------------------------------------------
  
  CMsgNotificationAcknowledge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotificationAcknowledge& from);
  void MergeFrom(const CMsgNotificationAcknowledge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint64 notification_id = 2;
  inline bool has_notification_id() const;
  inline void clear_notification_id();
  static const int kNotificationIdFieldNumber = 2;
  inline ::google::protobuf::uint64 notification_id() const;
  inline void set_notification_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgNotificationAcknowledge)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint64 notification_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgNotificationAcknowledge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotificationAcknowledgeReply : public ::google::protobuf::Message {
 public:
  CMsgNotificationAcknowledgeReply();
  virtual ~CMsgNotificationAcknowledgeReply();
  
  CMsgNotificationAcknowledgeReply(const CMsgNotificationAcknowledgeReply& from);
  
  inline CMsgNotificationAcknowledgeReply& operator=(const CMsgNotificationAcknowledgeReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationAcknowledgeReply& default_instance();
  
  void Swap(CMsgNotificationAcknowledgeReply* other);
  
  // implements Message ----------------------------------------------
  
  CMsgNotificationAcknowledgeReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotificationAcknowledgeReply& from);
  void MergeFrom(const CMsgNotificationAcknowledgeReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgNotificationAcknowledgeReply)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgNotificationAcknowledgeReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Match_Result_Player : public ::google::protobuf::Message {
 public:
  CMsgGC_Match_Result_Player();
  virtual ~CMsgGC_Match_Result_Player();
  
  CMsgGC_Match_Result_Player(const CMsgGC_Match_Result_Player& from);
  
  inline CMsgGC_Match_Result_Player& operator=(const CMsgGC_Match_Result_Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_Result_Player& default_instance();
  
  void Swap(CMsgGC_Match_Result_Player* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Match_Result_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Match_Result_Player& from);
  void MergeFrom(const CMsgGC_Match_Result_Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional uint64 party_id = 2;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 2;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);
  
  // optional uint32 team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);
  
  // optional uint32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 ping = 5;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 5;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);
  
  // optional uint32 flags = 6;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);
  
  // optional uint32 skillrating = 7;
  inline bool has_skillrating() const;
  inline void clear_skillrating();
  static const int kSkillratingFieldNumber = 7;
  inline ::google::protobuf::uint32 skillrating() const;
  inline void set_skillrating(::google::protobuf::uint32 value);
  
  // optional int32 skillrating_change = 8;
  inline bool has_skillrating_change() const;
  inline void clear_skillrating_change();
  static const int kSkillratingChangeFieldNumber = 8;
  inline ::google::protobuf::int32 skillrating_change() const;
  inline void set_skillrating_change(::google::protobuf::int32 value);
  
  // optional uint32 rank = 9;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 9;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 classes_played = 10;
  inline bool has_classes_played() const;
  inline void clear_classes_played();
  static const int kClassesPlayedFieldNumber = 10;
  inline ::google::protobuf::uint32 classes_played() const;
  inline void set_classes_played(::google::protobuf::uint32 value);
  
  // optional uint32 kills = 11;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 11;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);
  
  // optional uint32 deaths = 12;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 12;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);
  
  // optional uint32 damage = 13;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 13;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);
  
  // optional uint32 healing = 14;
  inline bool has_healing() const;
  inline void clear_healing();
  static const int kHealingFieldNumber = 14;
  inline ::google::protobuf::uint32 healing() const;
  inline void set_healing(::google::protobuf::uint32 value);
  
  // optional uint32 support = 15;
  inline bool has_support() const;
  inline void clear_support();
  static const int kSupportFieldNumber = 15;
  inline ::google::protobuf::uint32 support() const;
  inline void set_support(::google::protobuf::uint32 value);
  
  // optional uint32 score_medal = 16;
  inline bool has_score_medal() const;
  inline void clear_score_medal();
  static const int kScoreMedalFieldNumber = 16;
  inline ::google::protobuf::uint32 score_medal() const;
  inline void set_score_medal(::google::protobuf::uint32 value);
  
  // optional uint32 kills_medal = 17;
  inline bool has_kills_medal() const;
  inline void clear_kills_medal();
  static const int kKillsMedalFieldNumber = 17;
  inline ::google::protobuf::uint32 kills_medal() const;
  inline void set_kills_medal(::google::protobuf::uint32 value);
  
  // optional uint32 damage_medal = 18;
  inline bool has_damage_medal() const;
  inline void clear_damage_medal();
  static const int kDamageMedalFieldNumber = 18;
  inline ::google::protobuf::uint32 damage_medal() const;
  inline void set_damage_medal(::google::protobuf::uint32 value);
  
  // optional uint32 healing_medal = 19;
  inline bool has_healing_medal() const;
  inline void clear_healing_medal();
  static const int kHealingMedalFieldNumber = 19;
  inline ::google::protobuf::uint32 healing_medal() const;
  inline void set_healing_medal(::google::protobuf::uint32 value);
  
  // optional uint32 support_medal = 20;
  inline bool has_support_medal() const;
  inline void clear_support_medal();
  static const int kSupportMedalFieldNumber = 20;
  inline ::google::protobuf::uint32 support_medal() const;
  inline void set_support_medal(::google::protobuf::uint32 value);
  
  // optional uint32 leave_time = 22;
  inline bool has_leave_time() const;
  inline void clear_leave_time();
  static const int kLeaveTimeFieldNumber = 22;
  inline ::google::protobuf::uint32 leave_time() const;
  inline void set_leave_time(::google::protobuf::uint32 value);
  
  // optional .TFMatchLeaveReason leave_reason = 23 [default = TFMatchLeaveReason_UNSPECIFIED];
  inline bool has_leave_reason() const;
  inline void clear_leave_reason();
  static const int kLeaveReasonFieldNumber = 23;
  inline TFMatchLeaveReason leave_reason() const;
  inline void set_leave_reason(TFMatchLeaveReason value);
  
  // optional uint32 connect_time = 24;
  inline bool has_connect_time() const;
  inline void clear_connect_time();
  static const int kConnectTimeFieldNumber = 24;
  inline ::google::protobuf::uint32 connect_time() const;
  inline void set_connect_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Match_Result.Player)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 skillrating_;
  ::google::protobuf::int32 skillrating_change_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 classes_played_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_medal_;
  ::google::protobuf::uint32 kills_medal_;
  ::google::protobuf::uint32 damage_medal_;
  ::google::protobuf::uint32 healing_medal_;
  ::google::protobuf::uint32 support_medal_;
  ::google::protobuf::uint32 leave_time_;
  int leave_reason_;
  ::google::protobuf::uint32 connect_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Match_Result_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Match_Result : public ::google::protobuf::Message {
 public:
  CMsgGC_Match_Result();
  virtual ~CMsgGC_Match_Result();
  
  CMsgGC_Match_Result(const CMsgGC_Match_Result& from);
  
  inline CMsgGC_Match_Result& operator=(const CMsgGC_Match_Result& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_Result& default_instance();
  
  void Swap(CMsgGC_Match_Result* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Match_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Match_Result& from);
  void MergeFrom(const CMsgGC_Match_Result& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_Match_Result_Player Player;
  
  typedef CMsgGC_Match_Result_Status Status;
  static const Status MATCH_SUCCEEDED = CMsgGC_Match_Result_Status_MATCH_SUCCEEDED;
  static const Status MATCH_FAILED_GC = CMsgGC_Match_Result_Status_MATCH_FAILED_GC;
  static const Status MATCH_FAILED_TRUSTED = CMsgGC_Match_Result_Status_MATCH_FAILED_TRUSTED;
  static const Status MATCH_FAILED_ABANDON = CMsgGC_Match_Result_Status_MATCH_FAILED_ABANDON;
  static const Status MATCH_FAILED_UNKNOWN = CMsgGC_Match_Result_Status_MATCH_FAILED_UNKNOWN;
  static const Status MATCH_FAILED_TIMEOUT = CMsgGC_Match_Result_Status_MATCH_FAILED_TIMEOUT;
  static const Status MATCH_FINISHED_ABANDON = CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON;
  static inline bool Status_IsValid(int value) {
    return CMsgGC_Match_Result_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CMsgGC_Match_Result_Status_Status_MIN;
  static const Status Status_MAX =
    CMsgGC_Match_Result_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CMsgGC_Match_Result_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CMsgGC_Match_Result_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CMsgGC_Match_Result_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CMsgGC_Match_Result_Status_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);
  
  // optional int32 match_group = 2;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);
  
  // optional .CMsgGC_Match_Result.Status status = 3 [default = MATCH_SUCCEEDED];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::CMsgGC_Match_Result_Status status() const;
  inline void set_status(::CMsgGC_Match_Result_Status value);
  
  // optional uint32 duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);
  
  // optional uint32 red_score = 5;
  inline bool has_red_score() const;
  inline void clear_red_score();
  static const int kRedScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 red_score() const;
  inline void set_red_score(::google::protobuf::uint32 value);
  
  // optional uint32 blue_score = 6;
  inline bool has_blue_score() const;
  inline void clear_blue_score();
  static const int kBlueScoreFieldNumber = 6;
  inline ::google::protobuf::uint32 blue_score() const;
  inline void set_blue_score(::google::protobuf::uint32 value);
  
  // optional uint32 winning_team = 7;
  inline bool has_winning_team() const;
  inline void clear_winning_team();
  static const int kWinningTeamFieldNumber = 7;
  inline ::google::protobuf::uint32 winning_team() const;
  inline void set_winning_team(::google::protobuf::uint32 value);
  
  // optional uint32 map_index = 8;
  inline bool has_map_index() const;
  inline void clear_map_index();
  static const int kMapIndexFieldNumber = 8;
  inline ::google::protobuf::uint32 map_index() const;
  inline void set_map_index(::google::protobuf::uint32 value);
  
  // optional uint32 game_type = 9 [default = 0];
  inline bool has_game_type() const;
  inline void clear_game_type();
  static const int kGameTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 game_type() const;
  inline void set_game_type(::google::protobuf::uint32 value);
  
  // repeated .CMsgGC_Match_Result.Player players = 10;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 10;
  inline const ::CMsgGC_Match_Result_Player& players(int index) const;
  inline ::CMsgGC_Match_Result_Player* mutable_players(int index);
  inline ::CMsgGC_Match_Result_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >*
      mutable_players();
  
  // optional uint32 red_skillrating = 11;
  inline bool has_red_skillrating() const;
  inline void clear_red_skillrating();
  static const int kRedSkillratingFieldNumber = 11;
  inline ::google::protobuf::uint32 red_skillrating() const;
  inline void set_red_skillrating(::google::protobuf::uint32 value);
  
  // optional uint32 blue_skillrating = 12;
  inline bool has_blue_skillrating() const;
  inline void clear_blue_skillrating();
  static const int kBlueSkillratingFieldNumber = 12;
  inline ::google::protobuf::uint32 blue_skillrating() const;
  inline void set_blue_skillrating(::google::protobuf::uint32 value);
  
  // optional uint32 win_reason = 13;
  inline bool has_win_reason() const;
  inline void clear_win_reason();
  static const int kWinReasonFieldNumber = 13;
  inline ::google::protobuf::uint32 win_reason() const;
  inline void set_win_reason(::google::protobuf::uint32 value);
  
  // optional uint32 flags = 14;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 14;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);
  
  // optional uint32 server_version = 15;
  inline bool has_server_version() const;
  inline void clear_server_version();
  static const int kServerVersionFieldNumber = 15;
  inline ::google::protobuf::uint32 server_version() const;
  inline void set_server_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Match_Result)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::int32 match_group_;
  int status_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 red_score_;
  ::google::protobuf::uint32 blue_score_;
  ::google::protobuf::uint32 winning_team_;
  ::google::protobuf::uint32 map_index_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player > players_;
  ::google::protobuf::uint32 red_skillrating_;
  ::google::protobuf::uint32 blue_skillrating_;
  ::google::protobuf::uint32 win_reason_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 server_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Match_Result* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Match_ResultResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Match_ResultResponse();
  virtual ~CMsgGC_Match_ResultResponse();
  
  CMsgGC_Match_ResultResponse(const CMsgGC_Match_ResultResponse& from);
  
  inline CMsgGC_Match_ResultResponse& operator=(const CMsgGC_Match_ResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_ResultResponse& default_instance();
  
  void Swap(CMsgGC_Match_ResultResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Match_ResultResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Match_ResultResponse& from);
  void MergeFrom(const CMsgGC_Match_ResultResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Match_ResultResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Match_ResultResponse* default_instance_;
};
// -------------------------------------------------------------------

class CEconItemPreviewDataBlock : public ::google::protobuf::Message {
 public:
  CEconItemPreviewDataBlock();
  virtual ~CEconItemPreviewDataBlock();
  
  CEconItemPreviewDataBlock(const CEconItemPreviewDataBlock& from);
  
  inline CEconItemPreviewDataBlock& operator=(const CEconItemPreviewDataBlock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CEconItemPreviewDataBlock& default_instance();
  
  void Swap(CEconItemPreviewDataBlock* other);
  
  // implements Message ----------------------------------------------
  
  CEconItemPreviewDataBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CEconItemPreviewDataBlock& from);
  void MergeFrom(const CEconItemPreviewDataBlock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CSOEconItem econitem = 1;
  inline bool has_econitem() const;
  inline void clear_econitem();
  static const int kEconitemFieldNumber = 1;
  inline const ::CSOEconItem& econitem() const;
  inline ::CSOEconItem* mutable_econitem();
  
  // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CSOEconItem* econitem_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CEconItemPreviewDataBlock* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client2GCEconPreviewDataBlockRequest : public ::google::protobuf::Message {
 public:
  CMsgGC_Client2GCEconPreviewDataBlockRequest();
  virtual ~CMsgGC_Client2GCEconPreviewDataBlockRequest();
  
  CMsgGC_Client2GCEconPreviewDataBlockRequest(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  
  inline CMsgGC_Client2GCEconPreviewDataBlockRequest& operator=(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client2GCEconPreviewDataBlockRequest& default_instance();
  
  void Swap(CMsgGC_Client2GCEconPreviewDataBlockRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Client2GCEconPreviewDataBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  void MergeFrom(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 param_s = 1;
  inline bool has_param_s() const;
  inline void clear_param_s();
  static const int kParamSFieldNumber = 1;
  inline ::google::protobuf::uint64 param_s() const;
  inline void set_param_s(::google::protobuf::uint64 value);
  
  // optional uint64 param_a = 2;
  inline bool has_param_a() const;
  inline void clear_param_a();
  static const int kParamAFieldNumber = 2;
  inline ::google::protobuf::uint64 param_a() const;
  inline void set_param_a(::google::protobuf::uint64 value);
  
  // optional uint64 param_d = 3;
  inline bool has_param_d() const;
  inline void clear_param_d();
  static const int kParamDFieldNumber = 3;
  inline ::google::protobuf::uint64 param_d() const;
  inline void set_param_d(::google::protobuf::uint64 value);
  
  // optional uint64 param_m = 4;
  inline bool has_param_m() const;
  inline void clear_param_m();
  static const int kParamMFieldNumber = 4;
  inline ::google::protobuf::uint64 param_m() const;
  inline void set_param_m(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Client2GCEconPreviewDataBlockRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 param_s_;
  ::google::protobuf::uint64 param_a_;
  ::google::protobuf::uint64 param_d_;
  ::google::protobuf::uint64 param_m_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Client2GCEconPreviewDataBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client2GCEconPreviewDataBlockResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Client2GCEconPreviewDataBlockResponse();
  virtual ~CMsgGC_Client2GCEconPreviewDataBlockResponse();
  
  CMsgGC_Client2GCEconPreviewDataBlockResponse(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  
  inline CMsgGC_Client2GCEconPreviewDataBlockResponse& operator=(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client2GCEconPreviewDataBlockResponse& default_instance();
  
  void Swap(CMsgGC_Client2GCEconPreviewDataBlockResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_Client2GCEconPreviewDataBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  void MergeFrom(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 1;
  inline const ::CEconItemPreviewDataBlock& iteminfo() const;
  inline ::CEconItemPreviewDataBlock* mutable_iteminfo();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_Client2GCEconPreviewDataBlockResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CEconItemPreviewDataBlock* iteminfo_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_Client2GCEconPreviewDataBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFLadderPlayerStats : public ::google::protobuf::Message {
 public:
  CSOTFLadderPlayerStats();
  virtual ~CSOTFLadderPlayerStats();
  
  CSOTFLadderPlayerStats(const CSOTFLadderPlayerStats& from);
  
  inline CSOTFLadderPlayerStats& operator=(const CSOTFLadderPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFLadderPlayerStats& default_instance();
  
  void Swap(CSOTFLadderPlayerStats* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFLadderPlayerStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFLadderPlayerStats& from);
  void MergeFrom(const CSOTFLadderPlayerStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional int32 match_group = 2;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);
  
  // optional uint32 season_id = 3;
  inline bool has_season_id() const;
  inline void clear_season_id();
  static const int kSeasonIdFieldNumber = 3;
  inline ::google::protobuf::uint32 season_id() const;
  inline void set_season_id(::google::protobuf::uint32 value);
  
  // optional uint32 rating = 4;
  inline bool has_rating() const;
  inline void clear_rating();
  static const int kRatingFieldNumber = 4;
  inline ::google::protobuf::uint32 rating() const;
  inline void set_rating(::google::protobuf::uint32 value);
  
  // optional int32 last_rating_change = 5;
  inline bool has_last_rating_change() const;
  inline void clear_last_rating_change();
  static const int kLastRatingChangeFieldNumber = 5;
  inline ::google::protobuf::int32 last_rating_change() const;
  inline void set_last_rating_change(::google::protobuf::int32 value);
  
  // optional uint32 rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 highest_rank = 7;
  inline bool has_highest_rank() const;
  inline void clear_highest_rank();
  static const int kHighestRankFieldNumber = 7;
  inline ::google::protobuf::uint32 highest_rank() const;
  inline void set_highest_rank(::google::protobuf::uint32 value);
  
  // optional uint32 experience = 8;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 8;
  inline ::google::protobuf::uint32 experience() const;
  inline void set_experience(::google::protobuf::uint32 value);
  
  // optional uint32 games = 9;
  inline bool has_games() const;
  inline void clear_games();
  static const int kGamesFieldNumber = 9;
  inline ::google::protobuf::uint32 games() const;
  inline void set_games(::google::protobuf::uint32 value);
  
  // optional uint32 score = 10;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 10;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 kills = 11;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 11;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);
  
  // optional uint32 deaths = 12;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 12;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);
  
  // optional uint32 damage = 13;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 13;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);
  
  // optional uint32 healing = 14;
  inline bool has_healing() const;
  inline void clear_healing();
  static const int kHealingFieldNumber = 14;
  inline ::google::protobuf::uint32 healing() const;
  inline void set_healing(::google::protobuf::uint32 value);
  
  // optional uint32 support = 15;
  inline bool has_support() const;
  inline void clear_support();
  static const int kSupportFieldNumber = 15;
  inline ::google::protobuf::uint32 support() const;
  inline void set_support(::google::protobuf::uint32 value);
  
  // optional uint32 score_bronze = 16;
  inline bool has_score_bronze() const;
  inline void clear_score_bronze();
  static const int kScoreBronzeFieldNumber = 16;
  inline ::google::protobuf::uint32 score_bronze() const;
  inline void set_score_bronze(::google::protobuf::uint32 value);
  
  // optional uint32 score_silver = 17;
  inline bool has_score_silver() const;
  inline void clear_score_silver();
  static const int kScoreSilverFieldNumber = 17;
  inline ::google::protobuf::uint32 score_silver() const;
  inline void set_score_silver(::google::protobuf::uint32 value);
  
  // optional uint32 score_gold = 18;
  inline bool has_score_gold() const;
  inline void clear_score_gold();
  static const int kScoreGoldFieldNumber = 18;
  inline ::google::protobuf::uint32 score_gold() const;
  inline void set_score_gold(::google::protobuf::uint32 value);
  
  // optional uint32 kills_bronze = 19;
  inline bool has_kills_bronze() const;
  inline void clear_kills_bronze();
  static const int kKillsBronzeFieldNumber = 19;
  inline ::google::protobuf::uint32 kills_bronze() const;
  inline void set_kills_bronze(::google::protobuf::uint32 value);
  
  // optional uint32 kills_silver = 20;
  inline bool has_kills_silver() const;
  inline void clear_kills_silver();
  static const int kKillsSilverFieldNumber = 20;
  inline ::google::protobuf::uint32 kills_silver() const;
  inline void set_kills_silver(::google::protobuf::uint32 value);
  
  // optional uint32 kills_gold = 21;
  inline bool has_kills_gold() const;
  inline void clear_kills_gold();
  static const int kKillsGoldFieldNumber = 21;
  inline ::google::protobuf::uint32 kills_gold() const;
  inline void set_kills_gold(::google::protobuf::uint32 value);
  
  // optional uint32 damage_bronze = 22;
  inline bool has_damage_bronze() const;
  inline void clear_damage_bronze();
  static const int kDamageBronzeFieldNumber = 22;
  inline ::google::protobuf::uint32 damage_bronze() const;
  inline void set_damage_bronze(::google::protobuf::uint32 value);
  
  // optional uint32 damage_silver = 23;
  inline bool has_damage_silver() const;
  inline void clear_damage_silver();
  static const int kDamageSilverFieldNumber = 23;
  inline ::google::protobuf::uint32 damage_silver() const;
  inline void set_damage_silver(::google::protobuf::uint32 value);
  
  // optional uint32 damage_gold = 24;
  inline bool has_damage_gold() const;
  inline void clear_damage_gold();
  static const int kDamageGoldFieldNumber = 24;
  inline ::google::protobuf::uint32 damage_gold() const;
  inline void set_damage_gold(::google::protobuf::uint32 value);
  
  // optional uint32 healing_bronze = 25;
  inline bool has_healing_bronze() const;
  inline void clear_healing_bronze();
  static const int kHealingBronzeFieldNumber = 25;
  inline ::google::protobuf::uint32 healing_bronze() const;
  inline void set_healing_bronze(::google::protobuf::uint32 value);
  
  // optional uint32 healing_silver = 26;
  inline bool has_healing_silver() const;
  inline void clear_healing_silver();
  static const int kHealingSilverFieldNumber = 26;
  inline ::google::protobuf::uint32 healing_silver() const;
  inline void set_healing_silver(::google::protobuf::uint32 value);
  
  // optional uint32 healing_gold = 27;
  inline bool has_healing_gold() const;
  inline void clear_healing_gold();
  static const int kHealingGoldFieldNumber = 27;
  inline ::google::protobuf::uint32 healing_gold() const;
  inline void set_healing_gold(::google::protobuf::uint32 value);
  
  // optional uint32 support_bronze = 28;
  inline bool has_support_bronze() const;
  inline void clear_support_bronze();
  static const int kSupportBronzeFieldNumber = 28;
  inline ::google::protobuf::uint32 support_bronze() const;
  inline void set_support_bronze(::google::protobuf::uint32 value);
  
  // optional uint32 support_silver = 29;
  inline bool has_support_silver() const;
  inline void clear_support_silver();
  static const int kSupportSilverFieldNumber = 29;
  inline ::google::protobuf::uint32 support_silver() const;
  inline void set_support_silver(::google::protobuf::uint32 value);
  
  // optional uint32 support_gold = 30;
  inline bool has_support_gold() const;
  inline void clear_support_gold();
  static const int kSupportGoldFieldNumber = 30;
  inline ::google::protobuf::uint32 support_gold() const;
  inline void set_support_gold(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFLadderPlayerStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 season_id_;
  ::google::protobuf::uint32 rating_;
  ::google::protobuf::int32 last_rating_change_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 highest_rank_;
  ::google::protobuf::uint32 experience_;
  ::google::protobuf::uint32 games_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_bronze_;
  ::google::protobuf::uint32 score_silver_;
  ::google::protobuf::uint32 score_gold_;
  ::google::protobuf::uint32 kills_bronze_;
  ::google::protobuf::uint32 kills_silver_;
  ::google::protobuf::uint32 kills_gold_;
  ::google::protobuf::uint32 damage_bronze_;
  ::google::protobuf::uint32 damage_silver_;
  ::google::protobuf::uint32 damage_gold_;
  ::google::protobuf::uint32 healing_bronze_;
  ::google::protobuf::uint32 healing_silver_;
  ::google::protobuf::uint32 healing_gold_;
  ::google::protobuf::uint32 support_bronze_;
  ::google::protobuf::uint32 support_silver_;
  ::google::protobuf::uint32 support_gold_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFLadderPlayerStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_TFVoteKickPlayerRequest : public ::google::protobuf::Message {
 public:
  CMsgGC_TFVoteKickPlayerRequest();
  virtual ~CMsgGC_TFVoteKickPlayerRequest();
  
  CMsgGC_TFVoteKickPlayerRequest(const CMsgGC_TFVoteKickPlayerRequest& from);
  
  inline CMsgGC_TFVoteKickPlayerRequest& operator=(const CMsgGC_TFVoteKickPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_TFVoteKickPlayerRequest& default_instance();
  
  void Swap(CMsgGC_TFVoteKickPlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_TFVoteKickPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_TFVoteKickPlayerRequest& from);
  void MergeFrom(const CMsgGC_TFVoteKickPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_TFVoteKickPlayerRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_TFVoteKickPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_VoteKickPlayerRequestResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_VoteKickPlayerRequestResponse();
  virtual ~CMsgGC_VoteKickPlayerRequestResponse();
  
  CMsgGC_VoteKickPlayerRequestResponse(const CMsgGC_VoteKickPlayerRequestResponse& from);
  
  inline CMsgGC_VoteKickPlayerRequestResponse& operator=(const CMsgGC_VoteKickPlayerRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_VoteKickPlayerRequestResponse& default_instance();
  
  void Swap(CMsgGC_VoteKickPlayerRequestResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_VoteKickPlayerRequestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_VoteKickPlayerRequestResponse& from);
  void MergeFrom(const CMsgGC_VoteKickPlayerRequestResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool allowed = 1;
  inline bool has_allowed() const;
  inline void clear_allowed();
  static const int kAllowedFieldNumber = 1;
  inline bool allowed() const;
  inline void set_allowed(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_VoteKickPlayerRequestResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  bool allowed_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_VoteKickPlayerRequestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup : public ::google::protobuf::Message {
 public:
  CMsgGC_DailyCompetitiveStatsRollup();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup();
  
  CMsgGC_DailyCompetitiveStatsRollup(const CMsgGC_DailyCompetitiveStatsRollup& from);
  
  inline CMsgGC_DailyCompetitiveStatsRollup& operator=(const CMsgGC_DailyCompetitiveStatsRollup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup& default_instance();
  
  void Swap(CMsgGC_DailyCompetitiveStatsRollup* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_DailyCompetitiveStatsRollup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_DailyCompetitiveStatsRollup* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry : public ::google::protobuf::Message {
 public:
  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();
  
  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  
  inline CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& operator=(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& default_instance();
  
  void Swap(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 records = 2;
  inline bool has_records() const;
  inline void clear_records();
  static const int kRecordsFieldNumber = 2;
  inline ::google::protobuf::uint32 records() const;
  inline void set_records(::google::protobuf::uint32 value);
  
  // optional uint32 avg_score = 3;
  inline bool has_avg_score() const;
  inline void clear_avg_score();
  static const int kAvgScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 avg_score() const;
  inline void set_avg_score(::google::protobuf::uint32 value);
  
  // optional uint32 stdev_score = 4;
  inline bool has_stdev_score() const;
  inline void clear_stdev_score();
  static const int kStdevScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 stdev_score() const;
  inline void set_stdev_score(::google::protobuf::uint32 value);
  
  // optional uint32 avg_kills = 5;
  inline bool has_avg_kills() const;
  inline void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 5;
  inline ::google::protobuf::uint32 avg_kills() const;
  inline void set_avg_kills(::google::protobuf::uint32 value);
  
  // optional uint32 stdev_kills = 6;
  inline bool has_stdev_kills() const;
  inline void clear_stdev_kills();
  static const int kStdevKillsFieldNumber = 6;
  inline ::google::protobuf::uint32 stdev_kills() const;
  inline void set_stdev_kills(::google::protobuf::uint32 value);
  
  // optional uint32 avg_damage = 7;
  inline bool has_avg_damage() const;
  inline void clear_avg_damage();
  static const int kAvgDamageFieldNumber = 7;
  inline ::google::protobuf::uint32 avg_damage() const;
  inline void set_avg_damage(::google::protobuf::uint32 value);
  
  // optional uint32 stdev_damage = 8;
  inline bool has_stdev_damage() const;
  inline void clear_stdev_damage();
  static const int kStdevDamageFieldNumber = 8;
  inline ::google::protobuf::uint32 stdev_damage() const;
  inline void set_stdev_damage(::google::protobuf::uint32 value);
  
  // optional uint32 avg_healing = 9;
  inline bool has_avg_healing() const;
  inline void clear_avg_healing();
  static const int kAvgHealingFieldNumber = 9;
  inline ::google::protobuf::uint32 avg_healing() const;
  inline void set_avg_healing(::google::protobuf::uint32 value);
  
  // optional uint32 stdev_healing = 10;
  inline bool has_stdev_healing() const;
  inline void clear_stdev_healing();
  static const int kStdevHealingFieldNumber = 10;
  inline ::google::protobuf::uint32 stdev_healing() const;
  inline void set_stdev_healing(::google::protobuf::uint32 value);
  
  // optional uint32 avg_support = 11;
  inline bool has_avg_support() const;
  inline void clear_avg_support();
  static const int kAvgSupportFieldNumber = 11;
  inline ::google::protobuf::uint32 avg_support() const;
  inline void set_avg_support(::google::protobuf::uint32 value);
  
  // optional uint32 stdev_support = 12;
  inline bool has_stdev_support() const;
  inline void clear_stdev_support();
  static const int kStdevSupportFieldNumber = 12;
  inline ::google::protobuf::uint32 stdev_support() const;
  inline void set_stdev_support(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 records_;
  ::google::protobuf::uint32 avg_score_;
  ::google::protobuf::uint32 stdev_score_;
  ::google::protobuf::uint32 avg_kills_;
  ::google::protobuf::uint32 stdev_kills_;
  ::google::protobuf::uint32 avg_damage_;
  ::google::protobuf::uint32 stdev_damage_;
  ::google::protobuf::uint32 avg_healing_;
  ::google::protobuf::uint32 stdev_healing_;
  ::google::protobuf::uint32 avg_support_;
  ::google::protobuf::uint32 stdev_support_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_DailyCompetitiveStatsRollup_Response();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup_Response();
  
  CMsgGC_DailyCompetitiveStatsRollup_Response(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  
  inline CMsgGC_DailyCompetitiveStatsRollup_Response& operator=(const CMsgGC_DailyCompetitiveStatsRollup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup_Response& default_instance();
  
  void Swap(CMsgGC_DailyCompetitiveStatsRollup_Response* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_DailyCompetitiveStatsRollup_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry RankBucketEntry;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry rankdata = 1;
  inline int rankdata_size() const;
  inline void clear_rankdata();
  static const int kRankdataFieldNumber = 1;
  inline const ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& rankdata(int index) const;
  inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* mutable_rankdata(int index);
  inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* add_rankdata();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >&
      rankdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >*
      mutable_rankdata();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup_Response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry > rankdata_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_DailyCompetitiveStatsRollup_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_ReportPlayer : public ::google::protobuf::Message {
 public:
  CMsgGC_ReportPlayer();
  virtual ~CMsgGC_ReportPlayer();
  
  CMsgGC_ReportPlayer(const CMsgGC_ReportPlayer& from);
  
  inline CMsgGC_ReportPlayer& operator=(const CMsgGC_ReportPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_ReportPlayer& default_instance();
  
  void Swap(CMsgGC_ReportPlayer* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_ReportPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_ReportPlayer& from);
  void MergeFrom(const CMsgGC_ReportPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_ReportPlayer_EReason EReason;
  static const EReason kReason_INVALID = CMsgGC_ReportPlayer_EReason_kReason_INVALID;
  static const EReason kReason_CHEATING = CMsgGC_ReportPlayer_EReason_kReason_CHEATING;
  static const EReason kReason_IDLE = CMsgGC_ReportPlayer_EReason_kReason_IDLE;
  static const EReason kReason_HARASSMENT = CMsgGC_ReportPlayer_EReason_kReason_HARASSMENT;
  static const EReason kReason_GRIEFING = CMsgGC_ReportPlayer_EReason_kReason_GRIEFING;
  static const EReason kReason_COUNT = CMsgGC_ReportPlayer_EReason_kReason_COUNT;
  static inline bool EReason_IsValid(int value) {
    return CMsgGC_ReportPlayer_EReason_IsValid(value);
  }
  static const EReason EReason_MIN =
    CMsgGC_ReportPlayer_EReason_EReason_MIN;
  static const EReason EReason_MAX =
    CMsgGC_ReportPlayer_EReason_EReason_MAX;
  static const int EReason_ARRAYSIZE =
    CMsgGC_ReportPlayer_EReason_EReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EReason_descriptor() {
    return CMsgGC_ReportPlayer_EReason_descriptor();
  }
  static inline const ::std::string& EReason_Name(EReason value) {
    return CMsgGC_ReportPlayer_EReason_Name(value);
  }
  static inline bool EReason_Parse(const ::std::string& name,
      EReason* value) {
    return CMsgGC_ReportPlayer_EReason_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_target = 1;
  inline bool has_account_id_target() const;
  inline void clear_account_id_target();
  static const int kAccountIdTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_target() const;
  inline void set_account_id_target(::google::protobuf::uint32 value);
  
  // optional .CMsgGC_ReportPlayer.EReason reason = 2 [default = kReason_INVALID];
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::CMsgGC_ReportPlayer_EReason reason() const;
  inline void set_reason(::CMsgGC_ReportPlayer_EReason value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_ReportPlayer)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_target_;
  int reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGC_ReportPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFMatchResultPlayerStats : public ::google::protobuf::Message {
 public:
  CSOTFMatchResultPlayerStats();
  virtual ~CSOTFMatchResultPlayerStats();
  
  CSOTFMatchResultPlayerStats(const CSOTFMatchResultPlayerStats& from);
  
  inline CSOTFMatchResultPlayerStats& operator=(const CSOTFMatchResultPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMatchResultPlayerStats& default_instance();
  
  void Swap(CSOTFMatchResultPlayerStats* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFMatchResultPlayerStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFMatchResultPlayerStats& from);
  void MergeFrom(const CSOTFMatchResultPlayerStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 match_id = 1;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);
  
  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional int32 match_group = 3;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 3;
  inline ::google::protobuf::int32 match_group() const;
  inline void set_match_group(::google::protobuf::int32 value);
  
  // optional uint32 endtime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);
  
  // optional uint32 season_id = 5;
  inline bool has_season_id() const;
  inline void clear_season_id();
  static const int kSeasonIdFieldNumber = 5;
  inline ::google::protobuf::uint32 season_id() const;
  inline void set_season_id(::google::protobuf::uint32 value);
  
  // optional uint32 status = 6;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 party_id = 7;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 7;
  inline ::google::protobuf::uint32 party_id() const;
  inline void set_party_id(::google::protobuf::uint32 value);
  
  // optional uint32 team = 8;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 8;
  inline ::google::protobuf::uint32 team() const;
  inline void set_team(::google::protobuf::uint32 value);
  
  // optional uint32 score = 9;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 9;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 ping = 10;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 10;
  inline ::google::protobuf::uint32 ping() const;
  inline void set_ping(::google::protobuf::uint32 value);
  
  // optional uint32 flags = 11;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 11;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);
  
  // optional uint32 skillrating = 12;
  inline bool has_skillrating() const;
  inline void clear_skillrating();
  static const int kSkillratingFieldNumber = 12;
  inline ::google::protobuf::uint32 skillrating() const;
  inline void set_skillrating(::google::protobuf::uint32 value);
  
  // optional int32 skillrating_change = 13;
  inline bool has_skillrating_change() const;
  inline void clear_skillrating_change();
  static const int kSkillratingChangeFieldNumber = 13;
  inline ::google::protobuf::int32 skillrating_change() const;
  inline void set_skillrating_change(::google::protobuf::int32 value);
  
  // optional uint32 rank = 14;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 14;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 classes_played = 15;
  inline bool has_classes_played() const;
  inline void clear_classes_played();
  static const int kClassesPlayedFieldNumber = 15;
  inline ::google::protobuf::uint32 classes_played() const;
  inline void set_classes_played(::google::protobuf::uint32 value);
  
  // optional uint32 kills = 16;
  inline bool has_kills() const;
  inline void clear_kills();
  static const int kKillsFieldNumber = 16;
  inline ::google::protobuf::uint32 kills() const;
  inline void set_kills(::google::protobuf::uint32 value);
  
  // optional uint32 deaths = 17;
  inline bool has_deaths() const;
  inline void clear_deaths();
  static const int kDeathsFieldNumber = 17;
  inline ::google::protobuf::uint32 deaths() const;
  inline void set_deaths(::google::protobuf::uint32 value);
  
  // optional uint32 damage = 18;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 18;
  inline ::google::protobuf::uint32 damage() const;
  inline void set_damage(::google::protobuf::uint32 value);
  
  // optional uint32 healing = 19;
  inline bool has_healing() const;
  inline void clear_healing();
  static const int kHealingFieldNumber = 19;
  inline ::google::protobuf::uint32 healing() const;
  inline void set_healing(::google::protobuf::uint32 value);
  
  // optional uint32 support = 20;
  inline bool has_support() const;
  inline void clear_support();
  static const int kSupportFieldNumber = 20;
  inline ::google::protobuf::uint32 support() const;
  inline void set_support(::google::protobuf::uint32 value);
  
  // optional uint32 score_medal = 21;
  inline bool has_score_medal() const;
  inline void clear_score_medal();
  static const int kScoreMedalFieldNumber = 21;
  inline ::google::protobuf::uint32 score_medal() const;
  inline void set_score_medal(::google::protobuf::uint32 value);
  
  // optional uint32 kills_medal = 22;
  inline bool has_kills_medal() const;
  inline void clear_kills_medal();
  static const int kKillsMedalFieldNumber = 22;
  inline ::google::protobuf::uint32 kills_medal() const;
  inline void set_kills_medal(::google::protobuf::uint32 value);
  
  // optional uint32 damage_medal = 23;
  inline bool has_damage_medal() const;
  inline void clear_damage_medal();
  static const int kDamageMedalFieldNumber = 23;
  inline ::google::protobuf::uint32 damage_medal() const;
  inline void set_damage_medal(::google::protobuf::uint32 value);
  
  // optional uint32 healing_medal = 24;
  inline bool has_healing_medal() const;
  inline void clear_healing_medal();
  static const int kHealingMedalFieldNumber = 24;
  inline ::google::protobuf::uint32 healing_medal() const;
  inline void set_healing_medal(::google::protobuf::uint32 value);
  
  // optional uint32 support_medal = 25;
  inline bool has_support_medal() const;
  inline void clear_support_medal();
  static const int kSupportMedalFieldNumber = 25;
  inline ::google::protobuf::uint32 support_medal() const;
  inline void set_support_medal(::google::protobuf::uint32 value);
  
  // optional uint32 map_index = 26;
  inline bool has_map_index() const;
  inline void clear_map_index();
  static const int kMapIndexFieldNumber = 26;
  inline ::google::protobuf::uint32 map_index() const;
  inline void set_map_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFMatchResultPlayerStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 season_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 party_id_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 skillrating_;
  ::google::protobuf::int32 skillrating_change_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 classes_played_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_medal_;
  ::google::protobuf::uint32 kills_medal_;
  ::google::protobuf::uint32 damage_medal_;
  ::google::protobuf::uint32 healing_medal_;
  ::google::protobuf::uint32 support_medal_;
  ::google::protobuf::uint32 map_index_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(26 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CSOTFMatchResultPlayerStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCRequestCasualCriteriaStats : public ::google::protobuf::Message {
 public:
  CMsgGCRequestCasualCriteriaStats();
  virtual ~CMsgGCRequestCasualCriteriaStats();
  
  CMsgGCRequestCasualCriteriaStats(const CMsgGCRequestCasualCriteriaStats& from);
  
  inline CMsgGCRequestCasualCriteriaStats& operator=(const CMsgGCRequestCasualCriteriaStats& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestCasualCriteriaStats& default_instance();
  
  void Swap(CMsgGCRequestCasualCriteriaStats* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCRequestCasualCriteriaStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCRequestCasualCriteriaStats& from);
  void MergeFrom(const CMsgGCRequestCasualCriteriaStats& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGCRequestCasualCriteriaStats)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGCRequestCasualCriteriaStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCCasualCriteriaStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgGCCasualCriteriaStatsResponse();
  virtual ~CMsgGCCasualCriteriaStatsResponse();
  
  CMsgGCCasualCriteriaStatsResponse(const CMsgGCCasualCriteriaStatsResponse& from);
  
  inline CMsgGCCasualCriteriaStatsResponse& operator=(const CMsgGCCasualCriteriaStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCCasualCriteriaStatsResponse& default_instance();
  
  void Swap(CMsgGCCasualCriteriaStatsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCCasualCriteriaStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCCasualCriteriaStatsResponse& from);
  void MergeFrom(const CMsgGCCasualCriteriaStatsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 map_count = 1;
  inline int map_count_size() const;
  inline void clear_map_count();
  static const int kMapCountFieldNumber = 1;
  inline ::google::protobuf::uint32 map_count(int index) const;
  inline void set_map_count(int index, ::google::protobuf::uint32 value);
  inline void add_map_count(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      map_count() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_map_count();
  
  // @@protoc_insertion_point(class_scope:CMsgGCCasualCriteriaStatsResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > map_count_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGCCasualCriteriaStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMatchHistoryLoad : public ::google::protobuf::Message {
 public:
  CMsgGCMatchHistoryLoad();
  virtual ~CMsgGCMatchHistoryLoad();
  
  CMsgGCMatchHistoryLoad(const CMsgGCMatchHistoryLoad& from);
  
  inline CMsgGCMatchHistoryLoad& operator=(const CMsgGCMatchHistoryLoad& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchHistoryLoad& default_instance();
  
  void Swap(CMsgGCMatchHistoryLoad* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCMatchHistoryLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMatchHistoryLoad& from);
  void MergeFrom(const CMsgGCMatchHistoryLoad& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGCMatchHistoryLoad)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgGCMatchHistoryLoad* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgTFGoldenWrenchBroadcast

// optional int32 wrench_number = 1;
inline bool CMsgTFGoldenWrenchBroadcast::has_wrench_number() const {
  return _has_bit(0);
}
inline void CMsgTFGoldenWrenchBroadcast::clear_wrench_number() {
  wrench_number_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMsgTFGoldenWrenchBroadcast::wrench_number() const {
  return wrench_number_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_wrench_number(::google::protobuf::int32 value) {
  _set_bit(0);
  wrench_number_ = value;
}

// optional bool deleted = 2;
inline bool CMsgTFGoldenWrenchBroadcast::has_deleted() const {
  return _has_bit(1);
}
inline void CMsgTFGoldenWrenchBroadcast::clear_deleted() {
  deleted_ = false;
  _clear_bit(1);
}
inline bool CMsgTFGoldenWrenchBroadcast::deleted() const {
  return deleted_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_deleted(bool value) {
  _set_bit(1);
  deleted_ = value;
}

// optional string user_name = 3;
inline bool CMsgTFGoldenWrenchBroadcast::has_user_name() const {
  return _has_bit(2);
}
inline void CMsgTFGoldenWrenchBroadcast::clear_user_name() {
  if (user_name_ != &_default_user_name_) {
    user_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgTFGoldenWrenchBroadcast::user_name() const {
  return *user_name_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const ::std::string& value) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value, size_t size) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::mutable_user_name() {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}

// -------------------------------------------------------------------

// CMsgTFSaxxyBroadcast

// optional int32 category_number = 1;
inline bool CMsgTFSaxxyBroadcast::has_category_number() const {
  return _has_bit(0);
}
inline void CMsgTFSaxxyBroadcast::clear_category_number() {
  category_number_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMsgTFSaxxyBroadcast::category_number() const {
  return category_number_;
}
inline void CMsgTFSaxxyBroadcast::set_category_number(::google::protobuf::int32 value) {
  _set_bit(0);
  category_number_ = value;
}

// optional string user_name = 2;
inline bool CMsgTFSaxxyBroadcast::has_user_name() const {
  return _has_bit(1);
}
inline void CMsgTFSaxxyBroadcast::clear_user_name() {
  if (user_name_ != &_default_user_name_) {
    user_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgTFSaxxyBroadcast::user_name() const {
  return *user_name_;
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const ::std::string& value) {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value) {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value, size_t size) {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFSaxxyBroadcast::mutable_user_name() {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}

// -------------------------------------------------------------------

// CMsgGCTFSpecificItemBroadcast

// optional uint32 item_def_index = 1;
inline bool CMsgGCTFSpecificItemBroadcast::has_item_def_index() const {
  return _has_bit(0);
}
inline void CMsgGCTFSpecificItemBroadcast::clear_item_def_index() {
  item_def_index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGCTFSpecificItemBroadcast::item_def_index() const {
  return item_def_index_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_item_def_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  item_def_index_ = value;
}

// optional bool was_destruction = 2;
inline bool CMsgGCTFSpecificItemBroadcast::has_was_destruction() const {
  return _has_bit(1);
}
inline void CMsgGCTFSpecificItemBroadcast::clear_was_destruction() {
  was_destruction_ = false;
  _clear_bit(1);
}
inline bool CMsgGCTFSpecificItemBroadcast::was_destruction() const {
  return was_destruction_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_was_destruction(bool value) {
  _set_bit(1);
  was_destruction_ = value;
}

// optional string user_name = 3;
inline bool CMsgGCTFSpecificItemBroadcast::has_user_name() const {
  return _has_bit(2);
}
inline void CMsgGCTFSpecificItemBroadcast::clear_user_name() {
  if (user_name_ != &_default_user_name_) {
    user_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgGCTFSpecificItemBroadcast::user_name() const {
  return *user_name_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const ::std::string& value) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value, size_t size) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::mutable_user_name() {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}

// -------------------------------------------------------------------

// CMsgTFWorldStatus

// optional bool beta_stress_test_event_active = 1 [default = false];
inline bool CMsgTFWorldStatus::has_beta_stress_test_event_active() const {
  return _has_bit(0);
}
inline void CMsgTFWorldStatus::clear_beta_stress_test_event_active() {
  beta_stress_test_event_active_ = false;
  _clear_bit(0);
}
inline bool CMsgTFWorldStatus::beta_stress_test_event_active() const {
  return beta_stress_test_event_active_;
}
inline void CMsgTFWorldStatus::set_beta_stress_test_event_active(bool value) {
  _set_bit(0);
  beta_stress_test_event_active_ = value;
}

// -------------------------------------------------------------------

// CSOTFDuelSummary

// optional uint32 account_id = 1;
inline bool CSOTFDuelSummary::has_account_id() const {
  return _has_bit(0);
}
inline void CSOTFDuelSummary::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::account_id() const {
  return account_id_;
}
inline void CSOTFDuelSummary::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional uint32 duel_wins = 2;
inline bool CSOTFDuelSummary::has_duel_wins() const {
  return _has_bit(1);
}
inline void CSOTFDuelSummary::clear_duel_wins() {
  duel_wins_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_wins() const {
  return duel_wins_;
}
inline void CSOTFDuelSummary::set_duel_wins(::google::protobuf::uint32 value) {
  _set_bit(1);
  duel_wins_ = value;
}

// optional uint32 duel_losses = 3;
inline bool CSOTFDuelSummary::has_duel_losses() const {
  return _has_bit(2);
}
inline void CSOTFDuelSummary::clear_duel_losses() {
  duel_losses_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_losses() const {
  return duel_losses_;
}
inline void CSOTFDuelSummary::set_duel_losses(::google::protobuf::uint32 value) {
  _set_bit(2);
  duel_losses_ = value;
}

// optional uint32 last_duel_account_id = 4;
inline bool CSOTFDuelSummary::has_last_duel_account_id() const {
  return _has_bit(3);
}
inline void CSOTFDuelSummary::clear_last_duel_account_id() {
  last_duel_account_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_account_id() const {
  return last_duel_account_id_;
}
inline void CSOTFDuelSummary::set_last_duel_account_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  last_duel_account_id_ = value;
}

// optional uint32 last_duel_timestamp = 5;
inline bool CSOTFDuelSummary::has_last_duel_timestamp() const {
  return _has_bit(4);
}
inline void CSOTFDuelSummary::clear_last_duel_timestamp() {
  last_duel_timestamp_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_timestamp() const {
  return last_duel_timestamp_;
}
inline void CSOTFDuelSummary::set_last_duel_timestamp(::google::protobuf::uint32 value) {
  _set_bit(4);
  last_duel_timestamp_ = value;
}

// optional uint32 last_duel_status = 6;
inline bool CSOTFDuelSummary::has_last_duel_status() const {
  return _has_bit(5);
}
inline void CSOTFDuelSummary::clear_last_duel_status() {
  last_duel_status_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_status() const {
  return last_duel_status_;
}
inline void CSOTFDuelSummary::set_last_duel_status(::google::protobuf::uint32 value) {
  _set_bit(5);
  last_duel_status_ = value;
}

// -------------------------------------------------------------------

// CSOTFMapContribution

// optional uint32 account_id = 1;
inline bool CSOTFMapContribution::has_account_id() const {
  return _has_bit(0);
}
inline void CSOTFMapContribution::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CSOTFMapContribution::account_id() const {
  return account_id_;
}
inline void CSOTFMapContribution::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional uint32 def_index = 2;
inline bool CSOTFMapContribution::has_def_index() const {
  return _has_bit(1);
}
inline void CSOTFMapContribution::clear_def_index() {
  def_index_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CSOTFMapContribution::def_index() const {
  return def_index_;
}
inline void CSOTFMapContribution::set_def_index(::google::protobuf::uint32 value) {
  _set_bit(1);
  def_index_ = value;
}

// optional uint32 contribution_level = 3;
inline bool CSOTFMapContribution::has_contribution_level() const {
  return _has_bit(2);
}
inline void CSOTFMapContribution::clear_contribution_level() {
  contribution_level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CSOTFMapContribution::contribution_level() const {
  return contribution_level_;
}
inline void CSOTFMapContribution::set_contribution_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  contribution_level_ = value;
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayer

// optional uint32 account_id_subject = 1;
inline bool CMsgTFVoteKickBanPlayer::has_account_id_subject() const {
  return _has_bit(0);
}
inline void CMsgTFVoteKickBanPlayer::clear_account_id_subject() {
  account_id_subject_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::account_id_subject() const {
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayer::set_account_id_subject(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_subject_ = value;
}

// optional uint32 kick_reason = 2;
inline bool CMsgTFVoteKickBanPlayer::has_kick_reason() const {
  return _has_bit(1);
}
inline void CMsgTFVoteKickBanPlayer::clear_kick_reason() {
  kick_reason_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::kick_reason() const {
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayer::set_kick_reason(::google::protobuf::uint32 value) {
  _set_bit(1);
  kick_reason_ = value;
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayerResult

// optional uint32 account_id_initiator = 1;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_initiator() const {
  return _has_bit(0);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_initiator() {
  account_id_initiator_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_initiator() const {
  return account_id_initiator_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_initiator(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_initiator_ = value;
}

// optional uint32 account_id_subject = 2;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_subject() const {
  return _has_bit(1);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_subject() {
  account_id_subject_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_subject() const {
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_subject(::google::protobuf::uint32 value) {
  _set_bit(1);
  account_id_subject_ = value;
}

// optional uint32 kick_reason = 3;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_reason() const {
  return _has_bit(2);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_reason() {
  kick_reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::kick_reason() const {
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  kick_reason_ = value;
}

// optional bool kick_successful = 4;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_successful() const {
  return _has_bit(3);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_successful() {
  kick_successful_ = false;
  _clear_bit(3);
}
inline bool CMsgTFVoteKickBanPlayerResult::kick_successful() const {
  return kick_successful_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_successful(bool value) {
  _set_bit(3);
  kick_successful_ = value;
}

// optional uint32 num_yes_votes = 5;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_yes_votes() const {
  return _has_bit(4);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_yes_votes() {
  num_yes_votes_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_yes_votes() const {
  return num_yes_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_yes_votes(::google::protobuf::uint32 value) {
  _set_bit(4);
  num_yes_votes_ = value;
}

// optional uint32 num_no_votes = 6;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_no_votes() const {
  return _has_bit(5);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_no_votes() {
  num_no_votes_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_no_votes() const {
  return num_no_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_no_votes(::google::protobuf::uint32 value) {
  _set_bit(5);
  num_no_votes_ = value;
}

// optional uint32 num_possible_votes = 7;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_possible_votes() const {
  return _has_bit(6);
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_possible_votes() {
  num_possible_votes_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_possible_votes() const {
  return num_possible_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_possible_votes(::google::protobuf::uint32 value) {
  _set_bit(6);
  num_possible_votes_ = value;
}

// -------------------------------------------------------------------

// CMsgTFFreeTrialChooseMostHelpfulFriend

// optional uint32 account_id_friend = 1;
inline bool CMsgTFFreeTrialChooseMostHelpfulFriend::has_account_id_friend() const {
  return _has_bit(0);
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_account_id_friend() {
  account_id_friend_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFFreeTrialChooseMostHelpfulFriend::account_id_friend() const {
  return account_id_friend_;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_account_id_friend(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_friend_ = value;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2Friends

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2Friends::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2Friends::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2Friends::account_ids(int index) const {
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2Friends::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
}
inline void CMsgTFRequestTF2Friends::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2Friends::account_ids() const {
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2Friends::mutable_account_ids() {
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2FriendsResponse

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2FriendsResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2FriendsResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2FriendsResponse::account_ids(int index) const {
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2FriendsResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
}
inline void CMsgTFRequestTF2FriendsResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2FriendsResponse::account_ids() const {
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2FriendsResponse::mutable_account_ids() {
  return &account_ids_;
}

// -------------------------------------------------------------------

// CSOTFPlayerInfo

// optional uint32 num_new_users_helped = 1;
inline bool CSOTFPlayerInfo::has_num_new_users_helped() const {
  return _has_bit(0);
}
inline void CSOTFPlayerInfo::clear_num_new_users_helped() {
  num_new_users_helped_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CSOTFPlayerInfo::num_new_users_helped() const {
  return num_new_users_helped_;
}
inline void CSOTFPlayerInfo::set_num_new_users_helped(::google::protobuf::uint32 value) {
  _set_bit(0);
  num_new_users_helped_ = value;
}

// -------------------------------------------------------------------

// CMsgTFThankedBySomeone

// optional uint64 thanker_steam_id = 1;
inline bool CMsgTFThankedBySomeone::has_thanker_steam_id() const {
  return _has_bit(0);
}
inline void CMsgTFThankedBySomeone::clear_thanker_steam_id() {
  thanker_steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgTFThankedBySomeone::thanker_steam_id() const {
  return thanker_steam_id_;
}
inline void CMsgTFThankedBySomeone::set_thanker_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  thanker_steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgTFThankedSomeone

// -------------------------------------------------------------------

// CMsgTFFreeTrialConvertedToPremium

// -------------------------------------------------------------------

// CMsgSaxxyAwarded

// optional uint32 category = 1;
inline bool CMsgSaxxyAwarded::has_category() const {
  return _has_bit(0);
}
inline void CMsgSaxxyAwarded::clear_category() {
  category_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgSaxxyAwarded::category() const {
  return category_;
}
inline void CMsgSaxxyAwarded::set_category(::google::protobuf::uint32 value) {
  _set_bit(0);
  category_ = value;
}

// repeated string winner_names = 2;
inline int CMsgSaxxyAwarded::winner_names_size() const {
  return winner_names_.size();
}
inline void CMsgSaxxyAwarded::clear_winner_names() {
  winner_names_.Clear();
}
inline const ::std::string& CMsgSaxxyAwarded::winner_names(int index) const {
  return winner_names_.Get(index);
}
inline ::std::string* CMsgSaxxyAwarded::mutable_winner_names(int index) {
  return winner_names_.Mutable(index);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const ::std::string& value) {
  winner_names_.Mutable(index)->assign(value);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value) {
  winner_names_.Mutable(index)->assign(value);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value, size_t size) {
  winner_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSaxxyAwarded::add_winner_names() {
  return winner_names_.Add();
}
inline void CMsgSaxxyAwarded::add_winner_names(const ::std::string& value) {
  winner_names_.Add()->assign(value);
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value) {
  winner_names_.Add()->assign(value);
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value, size_t size) {
  winner_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSaxxyAwarded::winner_names() const {
  return winner_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSaxxyAwarded::mutable_winner_names() {
  return &winner_names_;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntry

// optional string youtube_url = 1;
inline bool CMsgReplaySubmitContestEntry::has_youtube_url() const {
  return _has_bit(0);
}
inline void CMsgReplaySubmitContestEntry::clear_youtube_url() {
  if (youtube_url_ != &_default_youtube_url_) {
    youtube_url_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMsgReplaySubmitContestEntry::youtube_url() const {
  return *youtube_url_;
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const ::std::string& value) {
  _set_bit(0);
  if (youtube_url_ == &_default_youtube_url_) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value) {
  _set_bit(0);
  if (youtube_url_ == &_default_youtube_url_) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value, size_t size) {
  _set_bit(0);
  if (youtube_url_ == &_default_youtube_url_) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgReplaySubmitContestEntry::mutable_youtube_url() {
  _set_bit(0);
  if (youtube_url_ == &_default_youtube_url_) {
    youtube_url_ = new ::std::string;
  }
  return youtube_url_;
}

// optional uint32 category = 2;
inline bool CMsgReplaySubmitContestEntry::has_category() const {
  return _has_bit(1);
}
inline void CMsgReplaySubmitContestEntry::clear_category() {
  category_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgReplaySubmitContestEntry::category() const {
  return category_;
}
inline void CMsgReplaySubmitContestEntry::set_category(::google::protobuf::uint32 value) {
  _set_bit(1);
  category_ = value;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntryResponse

// optional bool success = 1;
inline bool CMsgReplaySubmitContestEntryResponse::has_success() const {
  return _has_bit(0);
}
inline void CMsgReplaySubmitContestEntryResponse::clear_success() {
  success_ = false;
  _clear_bit(0);
}
inline bool CMsgReplaySubmitContestEntryResponse::success() const {
  return success_;
}
inline void CMsgReplaySubmitContestEntryResponse::set_success(bool value) {
  _set_bit(0);
  success_ = value;
}

// -------------------------------------------------------------------

// CReplayCachedContestData

// optional fixed32 timestamp = 1;
inline bool CReplayCachedContestData::has_timestamp() const {
  return _has_bit(0);
}
inline void CReplayCachedContestData::clear_timestamp() {
  timestamp_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CReplayCachedContestData::timestamp() const {
  return timestamp_;
}
inline void CReplayCachedContestData::set_timestamp(::google::protobuf::uint32 value) {
  _set_bit(0);
  timestamp_ = value;
}

// optional uint32 num_votes_last_day = 2;
inline bool CReplayCachedContestData::has_num_votes_last_day() const {
  return _has_bit(1);
}
inline void CReplayCachedContestData::clear_num_votes_last_day() {
  num_votes_last_day_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_votes_last_day() const {
  return num_votes_last_day_;
}
inline void CReplayCachedContestData::set_num_votes_last_day(::google::protobuf::uint32 value) {
  _set_bit(1);
  num_votes_last_day_ = value;
}

// repeated uint32 video_entry_ids = 3;
inline int CReplayCachedContestData::video_entry_ids_size() const {
  return video_entry_ids_.size();
}
inline void CReplayCachedContestData::clear_video_entry_ids() {
  video_entry_ids_.Clear();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::video_entry_ids(int index) const {
  return video_entry_ids_.Get(index);
}
inline void CReplayCachedContestData::set_video_entry_ids(int index, ::google::protobuf::uint32 value) {
  video_entry_ids_.Set(index, value);
}
inline void CReplayCachedContestData::add_video_entry_ids(::google::protobuf::uint32 value) {
  video_entry_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CReplayCachedContestData::video_entry_ids() const {
  return video_entry_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CReplayCachedContestData::mutable_video_entry_ids() {
  return &video_entry_ids_;
}

// optional uint32 num_flags_last_day = 4;
inline bool CReplayCachedContestData::has_num_flags_last_day() const {
  return _has_bit(3);
}
inline void CReplayCachedContestData::clear_num_flags_last_day() {
  num_flags_last_day_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_flags_last_day() const {
  return num_flags_last_day_;
}
inline void CReplayCachedContestData::set_num_flags_last_day(::google::protobuf::uint32 value) {
  _set_bit(3);
  num_flags_last_day_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AddToCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveFromCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoach

// optional uint32 account_id_friend_as_coach = 1;
inline bool CMsgTFCoaching_FindCoach::has_account_id_friend_as_coach() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_FindCoach::clear_account_id_friend_as_coach() {
  account_id_friend_as_coach_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoach::account_id_friend_as_coach() const {
  return account_id_friend_as_coach_;
}
inline void CMsgTFCoaching_FindCoach::set_account_id_friend_as_coach(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_friend_as_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoachResponse

// optional bool found_coach = 1;
inline bool CMsgTFCoaching_FindCoachResponse::has_found_coach() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_FindCoachResponse::clear_found_coach() {
  found_coach_ = false;
  _clear_bit(0);
}
inline bool CMsgTFCoaching_FindCoachResponse::found_coach() const {
  return found_coach_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_found_coach(bool value) {
  _set_bit(0);
  found_coach_ = value;
}

// optional uint32 num_likes = 2;
inline bool CMsgTFCoaching_FindCoachResponse::has_num_likes() const {
  return _has_bit(1);
}
inline void CMsgTFCoaching_FindCoachResponse::clear_num_likes() {
  num_likes_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoachResponse::num_likes() const {
  return num_likes_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_num_likes(::google::protobuf::uint32 value) {
  _set_bit(1);
  num_likes_ = value;
}

// optional string coach_name = 3;
inline bool CMsgTFCoaching_FindCoachResponse::has_coach_name() const {
  return _has_bit(2);
}
inline void CMsgTFCoaching_FindCoachResponse::clear_coach_name() {
  if (coach_name_ != &_default_coach_name_) {
    coach_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgTFCoaching_FindCoachResponse::coach_name() const {
  return *coach_name_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const ::std::string& value) {
  _set_bit(2);
  if (coach_name_ == &_default_coach_name_) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value) {
  _set_bit(2);
  if (coach_name_ == &_default_coach_name_) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value, size_t size) {
  _set_bit(2);
  if (coach_name_ == &_default_coach_name_) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::mutable_coach_name() {
  _set_bit(2);
  if (coach_name_ == &_default_coach_name_) {
    coach_name_ = new ::std::string;
  }
  return coach_name_;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoach

// optional uint32 account_id_student = 1;
inline bool CMsgTFCoaching_AskCoach::has_account_id_student() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_AskCoach::clear_account_id_student() {
  account_id_student_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_AskCoach::account_id_student() const {
  return account_id_student_;
}
inline void CMsgTFCoaching_AskCoach::set_account_id_student(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_student_ = value;
}

// optional bool student_is_friend = 2;
inline bool CMsgTFCoaching_AskCoach::has_student_is_friend() const {
  return _has_bit(1);
}
inline void CMsgTFCoaching_AskCoach::clear_student_is_friend() {
  student_is_friend_ = false;
  _clear_bit(1);
}
inline bool CMsgTFCoaching_AskCoach::student_is_friend() const {
  return student_is_friend_;
}
inline void CMsgTFCoaching_AskCoach::set_student_is_friend(bool value) {
  _set_bit(1);
  student_is_friend_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoachResponse

// optional bool accept_coaching_assignment = 1;
inline bool CMsgTFCoaching_AskCoachResponse::has_accept_coaching_assignment() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_AskCoachResponse::clear_accept_coaching_assignment() {
  accept_coaching_assignment_ = false;
  _clear_bit(0);
}
inline bool CMsgTFCoaching_AskCoachResponse::accept_coaching_assignment() const {
  return accept_coaching_assignment_;
}
inline void CMsgTFCoaching_AskCoachResponse::set_accept_coaching_assignment(bool value) {
  _set_bit(0);
  accept_coaching_assignment_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoinGame

// optional bool join_game = 1;
inline bool CMsgTFCoaching_CoachJoinGame::has_join_game() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_CoachJoinGame::clear_join_game() {
  join_game_ = false;
  _clear_bit(0);
}
inline bool CMsgTFCoaching_CoachJoinGame::join_game() const {
  return join_game_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_join_game(bool value) {
  _set_bit(0);
  join_game_ = value;
}

// optional uint32 server_address = 2;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_address() const {
  return _has_bit(1);
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_address() {
  server_address_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_address() const {
  return server_address_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_address(::google::protobuf::uint32 value) {
  _set_bit(1);
  server_address_ = value;
}

// optional uint32 server_port = 3;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_port() const {
  return _has_bit(2);
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_port() {
  server_port_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_port() const {
  return server_port_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_port(::google::protobuf::uint32 value) {
  _set_bit(2);
  server_port_ = value;
}

// optional uint32 account_id_student = 4;
inline bool CMsgTFCoaching_CoachJoinGame::has_account_id_student() const {
  return _has_bit(3);
}
inline void CMsgTFCoaching_CoachJoinGame::clear_account_id_student() {
  account_id_student_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::account_id_student() const {
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_account_id_student(::google::protobuf::uint32 value) {
  _set_bit(3);
  account_id_student_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoining

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_coach() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_coach() {
  account_id_coach_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_coach() const {
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_coach(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_coach_ = value;
}

// optional uint32 account_id_student = 2;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_student() const {
  return _has_bit(1);
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_student() {
  account_id_student_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_student() const {
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_student(::google::protobuf::uint32 value) {
  _set_bit(1);
  account_id_student_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoined

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoined::has_account_id_coach() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_CoachJoined::clear_account_id_coach() {
  account_id_coach_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoined::account_id_coach() const {
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoined::set_account_id_coach(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_LikeCurrentCoach

// optional bool like_coach = 1;
inline bool CMsgTFCoaching_LikeCurrentCoach::has_like_coach() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_like_coach() {
  like_coach_ = false;
  _clear_bit(0);
}
inline bool CMsgTFCoaching_LikeCurrentCoach::like_coach() const {
  return like_coach_;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_like_coach(bool value) {
  _set_bit(0);
  like_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveCurrentCoach

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_RemoveCurrentCoach::has_account_id_coach() const {
  return _has_bit(0);
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_account_id_coach() {
  account_id_coach_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFCoaching_RemoveCurrentCoach::account_id_coach() const {
  return account_id_coach_;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_account_id_coach(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_address() const {
  return _has_bit(0);
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_address() const {
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  _set_bit(0);
  server_address_ = value;
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_port() const {
  return _has_bit(1);
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_port() const {
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  _set_bit(1);
  server_port_ = value;
}

// optional uint32 num_users = 3;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_num_users() const {
  return _has_bit(2);
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_num_users() {
  num_users_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::num_users() const {
  return num_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_num_users(::google::protobuf::uint32 value) {
  _set_bit(2);
  num_users_ = value;
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_steam_id() const {
  return _has_bit(3);
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServers_ServerInfo::steam_id() const {
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(3);
  steam_id_ = value;
}

// optional uint32 max_users = 5;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_max_users() const {
  return _has_bit(4);
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_max_users() {
  max_users_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::max_users() const {
  return max_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_max_users(::google::protobuf::uint32 value) {
  _set_bit(4);
  max_users_ = value;
}

// optional float user_score = 6;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_user_score() const {
  return _has_bit(5);
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_user_score() {
  user_score_ = 0;
  _clear_bit(5);
}
inline float CMsgTFQuickplay_ScoreServers_ServerInfo::user_score() const {
  return user_score_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_user_score(float value) {
  _set_bit(5);
  user_score_ = value;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers

// repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServers::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServers::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& CMsgTFQuickplay_ScoreServers::servers(int index) const {
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::mutable_servers(int index) {
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::add_servers() {
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
CMsgTFQuickplay_ScoreServers::servers() const {
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
CMsgTFQuickplay_ScoreServers::mutable_servers() {
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_address() const {
  return _has_bit(0);
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_address() const {
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  _set_bit(0);
  server_address_ = value;
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_port() const {
  return _has_bit(1);
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_port() const {
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  _set_bit(1);
  server_port_ = value;
}

// optional float total_score = 3;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_total_score() const {
  return _has_bit(2);
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_total_score() {
  total_score_ = 0;
  _clear_bit(2);
}
inline float CMsgTFQuickplay_ScoreServersResponse_ServerInfo::total_score() const {
  return total_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_total_score(float value) {
  _set_bit(2);
  total_score_ = value;
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_steam_id() const {
  return _has_bit(3);
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::steam_id() const {
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(3);
  steam_id_ = value;
}

// optional uint32 options_score = 5;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_options_score() const {
  return _has_bit(4);
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_options_score() {
  options_score_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::options_score() const {
  return options_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_options_score(::google::protobuf::uint32 value) {
  _set_bit(4);
  options_score_ = value;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse

// repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServersResponse::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServersResponse::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& CMsgTFQuickplay_ScoreServersResponse::servers(int index) const {
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::mutable_servers(int index) {
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::add_servers() {
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
CMsgTFQuickplay_ScoreServersResponse::servers() const {
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
CMsgTFQuickplay_ScoreServersResponse::mutable_servers() {
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_PlayerJoining

// optional uint32 account_id = 1;
inline bool CMsgTFQuickplay_PlayerJoining::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgTFQuickplay_PlayerJoining::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_PlayerJoining::account_id() const {
  return account_id_;
}
inline void CMsgTFQuickplay_PlayerJoining::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_LevelInfo

// optional bool level_loaded = 1;
inline bool CMsgGC_GameServer_LevelInfo::has_level_loaded() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_loaded() {
  level_loaded_ = false;
  _clear_bit(0);
}
inline bool CMsgGC_GameServer_LevelInfo::level_loaded() const {
  return level_loaded_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_loaded(bool value) {
  _set_bit(0);
  level_loaded_ = value;
}

// optional string level_name = 2;
inline bool CMsgGC_GameServer_LevelInfo::has_level_name() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_name() {
  if (level_name_ != &_default_level_name_) {
    level_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgGC_GameServer_LevelInfo::level_name() const {
  return *level_name_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const ::std::string& value) {
  _set_bit(1);
  if (level_name_ == &_default_level_name_) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value) {
  _set_bit(1);
  if (level_name_ == &_default_level_name_) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value, size_t size) {
  _set_bit(1);
  if (level_name_ == &_default_level_name_) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::mutable_level_name() {
  _set_bit(1);
  if (level_name_ == &_default_level_name_) {
    level_name_ = new ::std::string;
  }
  return level_name_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallenge

// optional string challenge_string = 1;
inline bool CMsgGC_GameServer_AuthChallenge::has_challenge_string() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_AuthChallenge::clear_challenge_string() {
  if (challenge_string_ != &_default_challenge_string_) {
    challenge_string_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMsgGC_GameServer_AuthChallenge::challenge_string() const {
  return *challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const ::std::string& value) {
  _set_bit(0);
  if (challenge_string_ == &_default_challenge_string_) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value) {
  _set_bit(0);
  if (challenge_string_ == &_default_challenge_string_) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value, size_t size) {
  _set_bit(0);
  if (challenge_string_ == &_default_challenge_string_) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::mutable_challenge_string() {
  _set_bit(0);
  if (challenge_string_ == &_default_challenge_string_) {
    challenge_string_ = new ::std::string;
  }
  return challenge_string_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthResult

// optional bool authenticated = 1;
inline bool CMsgGC_GameServer_AuthResult::has_authenticated() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_AuthResult::clear_authenticated() {
  authenticated_ = false;
  _clear_bit(0);
}
inline bool CMsgGC_GameServer_AuthResult::authenticated() const {
  return authenticated_;
}
inline void CMsgGC_GameServer_AuthResult::set_authenticated(bool value) {
  _set_bit(0);
  authenticated_ = value;
}

// optional int32 game_server_standing = 2;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing() {
  game_server_standing_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing() const {
  return game_server_standing_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing(::google::protobuf::int32 value) {
  _set_bit(1);
  game_server_standing_ = value;
}

// optional int32 game_server_standing_trend = 3;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing_trend() const {
  return _has_bit(2);
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing_trend() const {
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing_trend(::google::protobuf::int32 value) {
  _set_bit(2);
  game_server_standing_trend_ = value;
}

// optional bool is_valve_server = 4;
inline bool CMsgGC_GameServer_AuthResult::has_is_valve_server() const {
  return _has_bit(3);
}
inline void CMsgGC_GameServer_AuthResult::clear_is_valve_server() {
  is_valve_server_ = false;
  _clear_bit(3);
}
inline bool CMsgGC_GameServer_AuthResult::is_valve_server() const {
  return is_valve_server_;
}
inline void CMsgGC_GameServer_AuthResult::set_is_valve_server(bool value) {
  _set_bit(3);
  is_valve_server_ = value;
}

// optional string message = 5;
inline bool CMsgGC_GameServer_AuthResult::has_message() const {
  return _has_bit(4);
}
inline void CMsgGC_GameServer_AuthResult::clear_message() {
  if (message_ != &_default_message_) {
    message_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMsgGC_GameServer_AuthResult::message() const {
  return *message_;
}
inline void CMsgGC_GameServer_AuthResult::set_message(const ::std::string& value) {
  _set_bit(4);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value) {
  _set_bit(4);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value, size_t size) {
  _set_bit(4);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_AuthResult::mutable_message() {
  _set_bit(4);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  return message_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallengeResponse

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_game_server_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AuthChallengeResponse::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  game_server_account_id_ = value;
}

// optional bytes hashed_challenge_string = 2;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_hashed_challenge_string() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_hashed_challenge_string() {
  if (hashed_challenge_string_ != &_default_hashed_challenge_string_) {
    hashed_challenge_string_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgGC_GameServer_AuthChallengeResponse::hashed_challenge_string() const {
  return *hashed_challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const ::std::string& value) {
  _set_bit(1);
  if (hashed_challenge_string_ == &_default_hashed_challenge_string_) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const char* value) {
  _set_bit(1);
  if (hashed_challenge_string_ == &_default_hashed_challenge_string_) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const void* value, size_t size) {
  _set_bit(1);
  if (hashed_challenge_string_ == &_default_hashed_challenge_string_) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::mutable_hashed_challenge_string() {
  _set_bit(1);
  if (hashed_challenge_string_ == &_default_hashed_challenge_string_) {
    hashed_challenge_string_ = new ::std::string;
  }
  return hashed_challenge_string_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentity

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_CreateIdentity::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_CreateIdentity::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentity::account_id() const {
  return account_id_;
}
inline void CMsgGC_GameServer_CreateIdentity::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentityResponse

// optional bool account_created = 1;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_account_created() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_account_created() {
  account_created_ = false;
  _clear_bit(0);
}
inline bool CMsgGC_GameServer_CreateIdentityResponse::account_created() const {
  return account_created_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_account_created(bool value) {
  _set_bit(0);
  account_created_ = value;
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_account_id() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentityResponse::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  game_server_account_id_ = value;
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_identity_token() const {
  return _has_bit(2);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &_default_game_server_identity_token_) {
    game_server_identity_token_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse::game_server_identity_token() const {
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value) {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::mutable_game_server_identity_token() {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  return game_server_identity_token_;
}

// optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_status() const {
  return _has_bit(3);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_status() {
  status_ = 0;
  _clear_bit(3);
}
inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse::status() const {
  return static_cast< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus >(status_);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  GOOGLE_DCHECK(::CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value));
  _set_bit(3);
  status_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_List

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_List::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_List::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_List::account_id() const {
  return account_id_;
}
inline void CMsgGC_GameServer_List::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse_GameServerIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  game_server_account_id_ = value;
}

// optional string game_server_identity_token = 2;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_identity_token() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &_default_game_server_identity_token_) {
    game_server_identity_token_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_identity_token() const {
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const ::std::string& value) {
  _set_bit(1);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value) {
  _set_bit(1);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value, size_t size) {
  _set_bit(1);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::mutable_game_server_identity_token() {
  _set_bit(1);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  return game_server_identity_token_;
}

// optional int32 game_server_standing = 3;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing() const {
  return _has_bit(2);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing() {
  game_server_standing_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing() const {
  return game_server_standing_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing(::google::protobuf::int32 value) {
  _set_bit(2);
  game_server_standing_ = value;
}

// optional int32 game_server_standing_trend = 4;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing_trend() const {
  return _has_bit(3);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing_trend() const {
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing_trend(::google::protobuf::int32 value) {
  _set_bit(3);
  game_server_standing_trend_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse

// repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
inline int CMsgGC_GameServer_ListResponse::owned_game_servers_size() const {
  return owned_game_servers_.size();
}
inline void CMsgGC_GameServer_ListResponse::clear_owned_game_servers() {
  owned_game_servers_.Clear();
}
inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& CMsgGC_GameServer_ListResponse::owned_game_servers(int index) const {
  return owned_game_servers_.Get(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::mutable_owned_game_servers(int index) {
  return owned_game_servers_.Mutable(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::add_owned_game_servers() {
  return owned_game_servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
CMsgGC_GameServer_ListResponse::owned_game_servers() const {
  return owned_game_servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
CMsgGC_GameServer_ListResponse::mutable_owned_game_servers() {
  return &owned_game_servers_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ResetIdentity::has_game_server_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_ResetIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentity::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  game_server_account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentityResponse

// optional bool game_server_identity_token_reset = 1;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token_reset() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token_reset() {
  game_server_identity_token_reset_ = false;
  _clear_bit(0);
}
inline bool CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token_reset() const {
  return game_server_identity_token_reset_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token_reset(bool value) {
  _set_bit(0);
  game_server_identity_token_reset_ = value;
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_account_id() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentityResponse::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  game_server_account_id_ = value;
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token() const {
  return _has_bit(2);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &_default_game_server_identity_token_) {
    game_server_identity_token_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token() const {
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value) {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::mutable_game_server_identity_token() {
  _set_bit(2);
  if (game_server_identity_token_ == &_default_game_server_identity_token_) {
    game_server_identity_token_ = new ::std::string;
  }
  return game_server_identity_token_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicy

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicyResponse

// optional uint32 result = 1;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_result() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AckPolicyResponse::result() const {
  return result_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional string message = 2;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_message() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_message() {
  if (message_ != &_default_message_) {
    message_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgGC_GameServer_AckPolicyResponse::message() const {
  return *message_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const ::std::string& value) {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value) {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value, size_t size) {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::mutable_message() {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  return message_;
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem

// optional uint64 item_id = 1;
inline bool CMsgGC_Client_UseServerModificationItem::has_item_id() const {
  return _has_bit(0);
}
inline void CMsgGC_Client_UseServerModificationItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgGC_Client_UseServerModificationItem::item_id() const {
  return item_id_;
}
inline void CMsgGC_Client_UseServerModificationItem::set_item_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  item_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem_Response

// optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1 [default = kServerModificationItemResponse_AlreadyInUse];
inline bool CMsgGC_Client_UseServerModificationItem_Response::has_response_code() const {
  return _has_bit(0);
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_response_code() {
  response_code_ = 1;
  _clear_bit(0);
}
inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response::response_code() const {
  return static_cast< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse >(response_code_);
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  GOOGLE_DCHECK(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value));
  _set_bit(0);
  response_code_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_UseServerModificationItem::has_modification_type() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  _clear_bit(0);
}
inline EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem::modification_type() const {
  return static_cast< EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_modification_type(EServerModificationItemType value) {
  GOOGLE_DCHECK(EServerModificationItemType_IsValid(value));
  _set_bit(0);
  modification_type_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem_Response

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_modification_type() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_modification_type() {
  modification_type_ = 1;
  _clear_bit(0);
}
inline EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem_Response::modification_type() const {
  return static_cast< EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_modification_type(EServerModificationItemType value) {
  GOOGLE_DCHECK(EServerModificationItemType_IsValid(value));
  _set_bit(0);
  modification_type_ = value;
}

// optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2 [default = kServerModificationItemServerResponse_Accepted];
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_server_response_code() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_server_response_code() {
  server_response_code_ = 1;
  _clear_bit(1);
}
inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response::server_response_code() const {
  return static_cast< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse >(server_response_code_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  GOOGLE_DCHECK(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value));
  _set_bit(1);
  server_response_code_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItemExpired

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_ServerModificationItemExpired::has_modification_type() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_modification_type() {
  modification_type_ = 1;
  _clear_bit(0);
}
inline EServerModificationItemType CMsgGC_GameServer_ServerModificationItemExpired::modification_type() const {
  return static_cast< EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_modification_type(EServerModificationItemType value) {
  GOOGLE_DCHECK(EServerModificationItemType_IsValid(value));
  _set_bit(0);
  modification_type_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItem

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_ServerModificationItem::has_modification_type() const {
  return _has_bit(0);
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  _clear_bit(0);
}
inline EServerModificationItemType CMsgGC_GameServer_ServerModificationItem::modification_type() const {
  return static_cast< EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItem::set_modification_type(EServerModificationItemType value) {
  GOOGLE_DCHECK(EServerModificationItemType_IsValid(value));
  _set_bit(0);
  modification_type_ = value;
}

// optional bool active = 2;
inline bool CMsgGC_GameServer_ServerModificationItem::has_active() const {
  return _has_bit(1);
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_active() {
  active_ = false;
  _clear_bit(1);
}
inline bool CMsgGC_GameServer_ServerModificationItem::active() const {
  return active_;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_active(bool value) {
  _set_bit(1);
  active_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ReservedItem

// repeated float x = 1;
inline int CMsgGC_Halloween_ReservedItem::x_size() const {
  return x_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_x() {
  x_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::x(int index) const {
  return x_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_x(int index, float value) {
  x_.Set(index, value);
}
inline void CMsgGC_Halloween_ReservedItem::add_x(float value) {
  x_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::x() const {
  return x_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_x() {
  return &x_;
}

// repeated float y = 2;
inline int CMsgGC_Halloween_ReservedItem::y_size() const {
  return y_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_y() {
  y_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::y(int index) const {
  return y_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_y(int index, float value) {
  y_.Set(index, value);
}
inline void CMsgGC_Halloween_ReservedItem::add_y(float value) {
  y_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::y() const {
  return y_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_y() {
  return &y_;
}

// repeated float z = 3;
inline int CMsgGC_Halloween_ReservedItem::z_size() const {
  return z_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_z() {
  z_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::z(int index) const {
  return z_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_z(int index, float value) {
  z_.Set(index, value);
}
inline void CMsgGC_Halloween_ReservedItem::add_z(float value) {
  z_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::z() const {
  return z_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_z() {
  return &z_;
}

// optional uint32 spawn_meta_info = 7;
inline bool CMsgGC_Halloween_ReservedItem::has_spawn_meta_info() const {
  return _has_bit(3);
}
inline void CMsgGC_Halloween_ReservedItem::clear_spawn_meta_info() {
  spawn_meta_info_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_ReservedItem::spawn_meta_info() const {
  return spawn_meta_info_;
}
inline void CMsgGC_Halloween_ReservedItem::set_spawn_meta_info(::google::protobuf::uint32 value) {
  _set_bit(3);
  spawn_meta_info_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItem

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItem::has_recipient_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_Halloween_GrantItem::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::recipient_account_id() const {
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_recipient_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  recipient_account_id_ = value;
}

// optional uint32 level_id = 2;
inline bool CMsgGC_Halloween_GrantItem::has_level_id() const {
  return _has_bit(1);
}
inline void CMsgGC_Halloween_GrantItem::clear_level_id() {
  level_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::level_id() const {
  return level_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_level_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_id_ = value;
}

// optional bool flagged = 3;
inline bool CMsgGC_Halloween_GrantItem::has_flagged() const {
  return _has_bit(2);
}
inline void CMsgGC_Halloween_GrantItem::clear_flagged() {
  flagged_ = false;
  _clear_bit(2);
}
inline bool CMsgGC_Halloween_GrantItem::flagged() const {
  return flagged_;
}
inline void CMsgGC_Halloween_GrantItem::set_flagged(bool value) {
  _set_bit(2);
  flagged_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItemResponse

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItemResponse::has_recipient_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItemResponse::recipient_account_id() const {
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_recipient_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  recipient_account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ItemClaimed

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_Query

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_Query::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_PickupItemEligibility_Query::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::account_id() const {
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional uint32 seconds_ago = 2;
inline bool CMsgGC_PickupItemEligibility_Query::has_seconds_ago() const {
  return _has_bit(1);
}
inline void CMsgGC_PickupItemEligibility_Query::clear_seconds_ago() {
  seconds_ago_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::seconds_ago() const {
  return seconds_ago_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_seconds_ago(::google::protobuf::uint32 value) {
  _set_bit(1);
  seconds_ago_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_QueryResponse

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::account_id() const {
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional bool was_eligible = 2;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_was_eligible() const {
  return _has_bit(1);
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_was_eligible() {
  was_eligible_ = false;
  _clear_bit(1);
}
inline bool CMsgGC_PickupItemEligibility_QueryResponse::was_eligible() const {
  return was_eligible_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_was_eligible(bool value) {
  _set_bit(1);
  was_eligible_ = value;
}

// optional uint32 level_id = 3;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_level_id() const {
  return _has_bit(2);
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_level_id() {
  level_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::level_id() const {
  return level_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_level_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_id_ = value;
}

// -------------------------------------------------------------------

// CSOTFPartyMember

// optional bool owns_ticket = 2;
inline bool CSOTFPartyMember::has_owns_ticket() const {
  return _has_bit(0);
}
inline void CSOTFPartyMember::clear_owns_ticket() {
  owns_ticket_ = false;
  _clear_bit(0);
}
inline bool CSOTFPartyMember::owns_ticket() const {
  return owns_ticket_;
}
inline void CSOTFPartyMember::set_owns_ticket(bool value) {
  _set_bit(0);
  owns_ticket_ = value;
}

// optional uint32 completed_missions = 3;
inline bool CSOTFPartyMember::has_completed_missions() const {
  return _has_bit(1);
}
inline void CSOTFPartyMember::clear_completed_missions() {
  completed_missions_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CSOTFPartyMember::completed_missions() const {
  return completed_missions_;
}
inline void CSOTFPartyMember::set_completed_missions(::google::protobuf::uint32 value) {
  _set_bit(1);
  completed_missions_ = value;
}

// optional uint32 badge_level = 4;
inline bool CSOTFPartyMember::has_badge_level() const {
  return _has_bit(2);
}
inline void CSOTFPartyMember::clear_badge_level() {
  badge_level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CSOTFPartyMember::badge_level() const {
  return badge_level_;
}
inline void CSOTFPartyMember::set_badge_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  badge_level_ = value;
}

// optional bool squad_surplus = 5;
inline bool CSOTFPartyMember::has_squad_surplus() const {
  return _has_bit(3);
}
inline void CSOTFPartyMember::clear_squad_surplus() {
  squad_surplus_ = false;
  _clear_bit(3);
}
inline bool CSOTFPartyMember::squad_surplus() const {
  return squad_surplus_;
}
inline void CSOTFPartyMember::set_squad_surplus(bool value) {
  _set_bit(3);
  squad_surplus_ = value;
}

// optional bool is_banned = 8 [default = false];
inline bool CSOTFPartyMember::has_is_banned() const {
  return _has_bit(4);
}
inline void CSOTFPartyMember::clear_is_banned() {
  is_banned_ = false;
  _clear_bit(4);
}
inline bool CSOTFPartyMember::is_banned() const {
  return is_banned_;
}
inline void CSOTFPartyMember::set_is_banned(bool value) {
  _set_bit(4);
  is_banned_ = value;
}

// optional bool competitive_access = 9;
inline bool CSOTFPartyMember::has_competitive_access() const {
  return _has_bit(5);
}
inline void CSOTFPartyMember::clear_competitive_access() {
  competitive_access_ = false;
  _clear_bit(5);
}
inline bool CSOTFPartyMember::competitive_access() const {
  return competitive_access_;
}
inline void CSOTFPartyMember::set_competitive_access(bool value) {
  _set_bit(5);
  competitive_access_ = value;
}

// optional uint32 ladder_rank = 12;
inline bool CSOTFPartyMember::has_ladder_rank() const {
  return _has_bit(6);
}
inline void CSOTFPartyMember::clear_ladder_rank() {
  ladder_rank_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CSOTFPartyMember::ladder_rank() const {
  return ladder_rank_;
}
inline void CSOTFPartyMember::set_ladder_rank(::google::protobuf::uint32 value) {
  _set_bit(6);
  ladder_rank_ = value;
}

// optional bool is_low_priority = 13 [default = false];
inline bool CSOTFPartyMember::has_is_low_priority() const {
  return _has_bit(7);
}
inline void CSOTFPartyMember::clear_is_low_priority() {
  is_low_priority_ = false;
  _clear_bit(7);
}
inline bool CSOTFPartyMember::is_low_priority() const {
  return is_low_priority_;
}
inline void CSOTFPartyMember::set_is_low_priority(bool value) {
  _set_bit(7);
  is_low_priority_ = value;
}

// optional uint32 experience = 14;
inline bool CSOTFPartyMember::has_experience() const {
  return _has_bit(8);
}
inline void CSOTFPartyMember::clear_experience() {
  experience_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CSOTFPartyMember::experience() const {
  return experience_;
}
inline void CSOTFPartyMember::set_experience(::google::protobuf::uint32 value) {
  _set_bit(8);
  experience_ = value;
}

// -------------------------------------------------------------------

// CMsgMatchSearchCriteria

// optional .TF_MatchmakingMode matchmaking_mode = 7 [default = TF_Matchmaking_INVALID];
inline bool CMsgMatchSearchCriteria::has_matchmaking_mode() const {
  return _has_bit(0);
}
inline void CMsgMatchSearchCriteria::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  _clear_bit(0);
}
inline TF_MatchmakingMode CMsgMatchSearchCriteria::matchmaking_mode() const {
  return static_cast< TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CMsgMatchSearchCriteria::set_matchmaking_mode(TF_MatchmakingMode value) {
  GOOGLE_DCHECK(TF_MatchmakingMode_IsValid(value));
  _set_bit(0);
  matchmaking_mode_ = value;
}

// optional bool late_join_ok = 5;
inline bool CMsgMatchSearchCriteria::has_late_join_ok() const {
  return _has_bit(1);
}
inline void CMsgMatchSearchCriteria::clear_late_join_ok() {
  late_join_ok_ = false;
  _clear_bit(1);
}
inline bool CMsgMatchSearchCriteria::late_join_ok() const {
  return late_join_ok_;
}
inline void CMsgMatchSearchCriteria::set_late_join_ok(bool value) {
  _set_bit(1);
  late_join_ok_ = value;
}

// optional string mvm_mannup_tour = 10;
inline bool CMsgMatchSearchCriteria::has_mvm_mannup_tour() const {
  return _has_bit(2);
}
inline void CMsgMatchSearchCriteria::clear_mvm_mannup_tour() {
  if (mvm_mannup_tour_ != &_default_mvm_mannup_tour_) {
    mvm_mannup_tour_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgMatchSearchCriteria::mvm_mannup_tour() const {
  return *mvm_mannup_tour_;
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const ::std::string& value) {
  _set_bit(2);
  if (mvm_mannup_tour_ == &_default_mvm_mannup_tour_) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(value);
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const char* value) {
  _set_bit(2);
  if (mvm_mannup_tour_ == &_default_mvm_mannup_tour_) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(value);
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const char* value, size_t size) {
  _set_bit(2);
  if (mvm_mannup_tour_ == &_default_mvm_mannup_tour_) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMatchSearchCriteria::mutable_mvm_mannup_tour() {
  _set_bit(2);
  if (mvm_mannup_tour_ == &_default_mvm_mannup_tour_) {
    mvm_mannup_tour_ = new ::std::string;
  }
  return mvm_mannup_tour_;
}

// repeated string mvm_missions = 9;
inline int CMsgMatchSearchCriteria::mvm_missions_size() const {
  return mvm_missions_.size();
}
inline void CMsgMatchSearchCriteria::clear_mvm_missions() {
  mvm_missions_.Clear();
}
inline const ::std::string& CMsgMatchSearchCriteria::mvm_missions(int index) const {
  return mvm_missions_.Get(index);
}
inline ::std::string* CMsgMatchSearchCriteria::mutable_mvm_missions(int index) {
  return mvm_missions_.Mutable(index);
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const ::std::string& value) {
  mvm_missions_.Mutable(index)->assign(value);
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const char* value) {
  mvm_missions_.Mutable(index)->assign(value);
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const char* value, size_t size) {
  mvm_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMatchSearchCriteria::add_mvm_missions() {
  return mvm_missions_.Add();
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const ::std::string& value) {
  mvm_missions_.Add()->assign(value);
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const char* value) {
  mvm_missions_.Add()->assign(value);
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const char* value, size_t size) {
  mvm_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgMatchSearchCriteria::mvm_missions() const {
  return mvm_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgMatchSearchCriteria::mutable_mvm_missions() {
  return &mvm_missions_;
}

// optional bool play_for_bragging_rights = 6;
inline bool CMsgMatchSearchCriteria::has_play_for_bragging_rights() const {
  return _has_bit(4);
}
inline void CMsgMatchSearchCriteria::clear_play_for_bragging_rights() {
  play_for_bragging_rights_ = false;
  _clear_bit(4);
}
inline bool CMsgMatchSearchCriteria::play_for_bragging_rights() const {
  return play_for_bragging_rights_;
}
inline void CMsgMatchSearchCriteria::set_play_for_bragging_rights(bool value) {
  _set_bit(4);
  play_for_bragging_rights_ = value;
}

// optional uint32 quickplay_game_type = 8;
inline bool CMsgMatchSearchCriteria::has_quickplay_game_type() const {
  return _has_bit(5);
}
inline void CMsgMatchSearchCriteria::clear_quickplay_game_type() {
  quickplay_game_type_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::quickplay_game_type() const {
  return quickplay_game_type_;
}
inline void CMsgMatchSearchCriteria::set_quickplay_game_type(::google::protobuf::uint32 value) {
  _set_bit(5);
  quickplay_game_type_ = value;
}

// optional uint32 ladder_game_type = 11;
inline bool CMsgMatchSearchCriteria::has_ladder_game_type() const {
  return _has_bit(6);
}
inline void CMsgMatchSearchCriteria::clear_ladder_game_type() {
  ladder_game_type_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::ladder_game_type() const {
  return ladder_game_type_;
}
inline void CMsgMatchSearchCriteria::set_ladder_game_type(::google::protobuf::uint32 value) {
  _set_bit(6);
  ladder_game_type_ = value;
}

// optional .CMsgCasualMatchmakingSearchCriteria casual_criteria = 12;
inline bool CMsgMatchSearchCriteria::has_casual_criteria() const {
  return _has_bit(7);
}
inline void CMsgMatchSearchCriteria::clear_casual_criteria() {
  if (casual_criteria_ != NULL) casual_criteria_->::CMsgCasualMatchmakingSearchCriteria::Clear();
  _clear_bit(7);
}
inline const ::CMsgCasualMatchmakingSearchCriteria& CMsgMatchSearchCriteria::casual_criteria() const {
  return casual_criteria_ != NULL ? *casual_criteria_ : *default_instance_->casual_criteria_;
}
inline ::CMsgCasualMatchmakingSearchCriteria* CMsgMatchSearchCriteria::mutable_casual_criteria() {
  _set_bit(7);
  if (casual_criteria_ == NULL) casual_criteria_ = new ::CMsgCasualMatchmakingSearchCriteria;
  return casual_criteria_;
}

// -------------------------------------------------------------------

// CMsgCasualMatchmakingSearchCriteria

// repeated fixed32 selected_maps_bits = 3;
inline int CMsgCasualMatchmakingSearchCriteria::selected_maps_bits_size() const {
  return selected_maps_bits_.size();
}
inline void CMsgCasualMatchmakingSearchCriteria::clear_selected_maps_bits() {
  selected_maps_bits_.Clear();
}
inline ::google::protobuf::uint32 CMsgCasualMatchmakingSearchCriteria::selected_maps_bits(int index) const {
  return selected_maps_bits_.Get(index);
}
inline void CMsgCasualMatchmakingSearchCriteria::set_selected_maps_bits(int index, ::google::protobuf::uint32 value) {
  selected_maps_bits_.Set(index, value);
}
inline void CMsgCasualMatchmakingSearchCriteria::add_selected_maps_bits(::google::protobuf::uint32 value) {
  selected_maps_bits_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgCasualMatchmakingSearchCriteria::selected_maps_bits() const {
  return selected_maps_bits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgCasualMatchmakingSearchCriteria::mutable_selected_maps_bits() {
  return &selected_maps_bits_;
}

// -------------------------------------------------------------------

// CMsgCreateOrUpdateParty

// optional .CMsgMatchSearchCriteria search_criteria = 1;
inline bool CMsgCreateOrUpdateParty::has_search_criteria() const {
  return _has_bit(0);
}
inline void CMsgCreateOrUpdateParty::clear_search_criteria() {
  if (search_criteria_ != NULL) search_criteria_->::CMsgMatchSearchCriteria::Clear();
  _clear_bit(0);
}
inline const ::CMsgMatchSearchCriteria& CMsgCreateOrUpdateParty::search_criteria() const {
  return search_criteria_ != NULL ? *search_criteria_ : *default_instance_->search_criteria_;
}
inline ::CMsgMatchSearchCriteria* CMsgCreateOrUpdateParty::mutable_search_criteria() {
  _set_bit(0);
  if (search_criteria_ == NULL) search_criteria_ = new ::CMsgMatchSearchCriteria;
  return search_criteria_;
}

// optional fixed64 steam_lobby_id = 3;
inline bool CMsgCreateOrUpdateParty::has_steam_lobby_id() const {
  return _has_bit(1);
}
inline void CMsgCreateOrUpdateParty::clear_steam_lobby_id() {
  steam_lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgCreateOrUpdateParty::steam_lobby_id() const {
  return steam_lobby_id_;
}
inline void CMsgCreateOrUpdateParty::set_steam_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  steam_lobby_id_ = value;
}

// optional bool squad_surplus = 4;
inline bool CMsgCreateOrUpdateParty::has_squad_surplus() const {
  return _has_bit(2);
}
inline void CMsgCreateOrUpdateParty::clear_squad_surplus() {
  squad_surplus_ = false;
  _clear_bit(2);
}
inline bool CMsgCreateOrUpdateParty::squad_surplus() const {
  return squad_surplus_;
}
inline void CMsgCreateOrUpdateParty::set_squad_surplus(bool value) {
  _set_bit(2);
  squad_surplus_ = value;
}

// optional .TF_Matchmaking_WizardStep wizard_step = 5 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CMsgCreateOrUpdateParty::has_wizard_step() const {
  return _has_bit(3);
}
inline void CMsgCreateOrUpdateParty::clear_wizard_step() {
  wizard_step_ = 0;
  _clear_bit(3);
}
inline TF_Matchmaking_WizardStep CMsgCreateOrUpdateParty::wizard_step() const {
  return static_cast< TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CMsgCreateOrUpdateParty::set_wizard_step(TF_Matchmaking_WizardStep value) {
  GOOGLE_DCHECK(TF_Matchmaking_WizardStep_IsValid(value));
  _set_bit(3);
  wizard_step_ = value;
}

// optional uint32 client_version = 6 [default = 1225];
inline bool CMsgCreateOrUpdateParty::has_client_version() const {
  return _has_bit(4);
}
inline void CMsgCreateOrUpdateParty::clear_client_version() {
  client_version_ = 1225u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgCreateOrUpdateParty::client_version() const {
  return client_version_;
}
inline void CMsgCreateOrUpdateParty::set_client_version(::google::protobuf::uint32 value) {
  _set_bit(4);
  client_version_ = value;
}

// -------------------------------------------------------------------

// CMsgCreateOrUpdatePartyReply

// optional uint32 result = 1;
inline bool CMsgCreateOrUpdatePartyReply::has_result() const {
  return _has_bit(0);
}
inline void CMsgCreateOrUpdatePartyReply::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgCreateOrUpdatePartyReply::result() const {
  return result_;
}
inline void CMsgCreateOrUpdatePartyReply::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional string message = 2;
inline bool CMsgCreateOrUpdatePartyReply::has_message() const {
  return _has_bit(1);
}
inline void CMsgCreateOrUpdatePartyReply::clear_message() {
  if (message_ != &_default_message_) {
    message_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgCreateOrUpdatePartyReply::message() const {
  return *message_;
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const ::std::string& value) {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const char* value) {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const char* value, size_t size) {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgCreateOrUpdatePartyReply::mutable_message() {
  _set_bit(1);
  if (message_ == &_default_message_) {
    message_ = new ::std::string;
  }
  return message_;
}

// optional .TF_Matchmaking_WizardStep wizard_step = 3 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CMsgCreateOrUpdatePartyReply::has_wizard_step() const {
  return _has_bit(2);
}
inline void CMsgCreateOrUpdatePartyReply::clear_wizard_step() {
  wizard_step_ = 0;
  _clear_bit(2);
}
inline TF_Matchmaking_WizardStep CMsgCreateOrUpdatePartyReply::wizard_step() const {
  return static_cast< TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CMsgCreateOrUpdatePartyReply::set_wizard_step(TF_Matchmaking_WizardStep value) {
  GOOGLE_DCHECK(TF_Matchmaking_WizardStep_IsValid(value));
  _set_bit(2);
  wizard_step_ = value;
}

// -------------------------------------------------------------------

// CSOTFParty

// optional uint64 party_id = 1;
inline bool CSOTFParty::has_party_id() const {
  return _has_bit(0);
}
inline void CSOTFParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CSOTFParty::party_id() const {
  return party_id_;
}
inline void CSOTFParty::set_party_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  party_id_ = value;
}

// optional fixed64 leader_id = 2;
inline bool CSOTFParty::has_leader_id() const {
  return _has_bit(1);
}
inline void CSOTFParty::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CSOTFParty::leader_id() const {
  return leader_id_;
}
inline void CSOTFParty::set_leader_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  leader_id_ = value;
}

// repeated fixed64 member_ids = 3;
inline int CSOTFParty::member_ids_size() const {
  return member_ids_.size();
}
inline void CSOTFParty::clear_member_ids() {
  member_ids_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::member_ids(int index) const {
  return member_ids_.Get(index);
}
inline void CSOTFParty::set_member_ids(int index, ::google::protobuf::uint64 value) {
  member_ids_.Set(index, value);
}
inline void CSOTFParty::add_member_ids(::google::protobuf::uint64 value) {
  member_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::member_ids() const {
  return member_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_member_ids() {
  return &member_ids_;
}

// repeated .CSOTFPartyMember members = 13;
inline int CSOTFParty::members_size() const {
  return members_.size();
}
inline void CSOTFParty::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyMember& CSOTFParty::members(int index) const {
  return members_.Get(index);
}
inline ::CSOTFPartyMember* CSOTFParty::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::CSOTFPartyMember* CSOTFParty::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
CSOTFParty::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
CSOTFParty::mutable_members() {
  return &members_;
}

// repeated fixed64 pending_invites = 5;
inline int CSOTFParty::pending_invites_size() const {
  return pending_invites_.size();
}
inline void CSOTFParty::clear_pending_invites() {
  pending_invites_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::pending_invites(int index) const {
  return pending_invites_.Get(index);
}
inline void CSOTFParty::set_pending_invites(int index, ::google::protobuf::uint64 value) {
  pending_invites_.Set(index, value);
}
inline void CSOTFParty::add_pending_invites(::google::protobuf::uint64 value) {
  pending_invites_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::pending_invites() const {
  return pending_invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_pending_invites() {
  return &pending_invites_;
}

// optional .CSOTFParty.State state = 6 [default = UI];
inline bool CSOTFParty::has_state() const {
  return _has_bit(5);
}
inline void CSOTFParty::clear_state() {
  state_ = 0;
  _clear_bit(5);
}
inline ::CSOTFParty_State CSOTFParty::state() const {
  return static_cast< ::CSOTFParty_State >(state_);
}
inline void CSOTFParty::set_state(::CSOTFParty_State value) {
  GOOGLE_DCHECK(::CSOTFParty_State_IsValid(value));
  _set_bit(5);
  state_ = value;
}

// optional .TF_Matchmaking_WizardStep wizard_step = 29 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CSOTFParty::has_wizard_step() const {
  return _has_bit(6);
}
inline void CSOTFParty::clear_wizard_step() {
  wizard_step_ = 0;
  _clear_bit(6);
}
inline TF_Matchmaking_WizardStep CSOTFParty::wizard_step() const {
  return static_cast< TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CSOTFParty::set_wizard_step(TF_Matchmaking_WizardStep value) {
  GOOGLE_DCHECK(TF_Matchmaking_WizardStep_IsValid(value));
  _set_bit(6);
  wizard_step_ = value;
}

// optional uint32 started_matchmaking_time = 7;
inline bool CSOTFParty::has_started_matchmaking_time() const {
  return _has_bit(7);
}
inline void CSOTFParty::clear_started_matchmaking_time() {
  started_matchmaking_time_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CSOTFParty::started_matchmaking_time() const {
  return started_matchmaking_time_;
}
inline void CSOTFParty::set_started_matchmaking_time(::google::protobuf::uint32 value) {
  _set_bit(7);
  started_matchmaking_time_ = value;
}

// repeated uint32 searching_players_by_group = 10;
inline int CSOTFParty::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CSOTFParty::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CSOTFParty::searching_players_by_group(int index) const {
  return searching_players_by_group_.Get(index);
}
inline void CSOTFParty::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
}
inline void CSOTFParty::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOTFParty::searching_players_by_group() const {
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOTFParty::mutable_searching_players_by_group() {
  return &searching_players_by_group_;
}

// optional fixed64 steam_lobby_id = 27;
inline bool CSOTFParty::has_steam_lobby_id() const {
  return _has_bit(9);
}
inline void CSOTFParty::clear_steam_lobby_id() {
  steam_lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::uint64 CSOTFParty::steam_lobby_id() const {
  return steam_lobby_id_;
}
inline void CSOTFParty::set_steam_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(9);
  steam_lobby_id_ = value;
}

// optional .TF_MatchmakingMode matchmaking_mode = 30 [default = TF_Matchmaking_INVALID];
inline bool CSOTFParty::has_matchmaking_mode() const {
  return _has_bit(10);
}
inline void CSOTFParty::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  _clear_bit(10);
}
inline TF_MatchmakingMode CSOTFParty::matchmaking_mode() const {
  return static_cast< TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CSOTFParty::set_matchmaking_mode(TF_MatchmakingMode value) {
  GOOGLE_DCHECK(TF_MatchmakingMode_IsValid(value));
  _set_bit(10);
  matchmaking_mode_ = value;
}

// optional bool search_late_join_ok = 23;
inline bool CSOTFParty::has_search_late_join_ok() const {
  return _has_bit(11);
}
inline void CSOTFParty::clear_search_late_join_ok() {
  search_late_join_ok_ = false;
  _clear_bit(11);
}
inline bool CSOTFParty::search_late_join_ok() const {
  return search_late_join_ok_;
}
inline void CSOTFParty::set_search_late_join_ok(bool value) {
  _set_bit(11);
  search_late_join_ok_ = value;
}

// optional string search_mvm_mannup_tour = 32;
inline bool CSOTFParty::has_search_mvm_mannup_tour() const {
  return _has_bit(12);
}
inline void CSOTFParty::clear_search_mvm_mannup_tour() {
  if (search_mvm_mannup_tour_ != &_default_search_mvm_mannup_tour_) {
    search_mvm_mannup_tour_->clear();
  }
  _clear_bit(12);
}
inline const ::std::string& CSOTFParty::search_mvm_mannup_tour() const {
  return *search_mvm_mannup_tour_;
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const ::std::string& value) {
  _set_bit(12);
  if (search_mvm_mannup_tour_ == &_default_search_mvm_mannup_tour_) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  search_mvm_mannup_tour_->assign(value);
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const char* value) {
  _set_bit(12);
  if (search_mvm_mannup_tour_ == &_default_search_mvm_mannup_tour_) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  search_mvm_mannup_tour_->assign(value);
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const char* value, size_t size) {
  _set_bit(12);
  if (search_mvm_mannup_tour_ == &_default_search_mvm_mannup_tour_) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  search_mvm_mannup_tour_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFParty::mutable_search_mvm_mannup_tour() {
  _set_bit(12);
  if (search_mvm_mannup_tour_ == &_default_search_mvm_mannup_tour_) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  return search_mvm_mannup_tour_;
}

// repeated string search_mvm_missions = 31;
inline int CSOTFParty::search_mvm_missions_size() const {
  return search_mvm_missions_.size();
}
inline void CSOTFParty::clear_search_mvm_missions() {
  search_mvm_missions_.Clear();
}
inline const ::std::string& CSOTFParty::search_mvm_missions(int index) const {
  return search_mvm_missions_.Get(index);
}
inline ::std::string* CSOTFParty::mutable_search_mvm_missions(int index) {
  return search_mvm_missions_.Mutable(index);
}
inline void CSOTFParty::set_search_mvm_missions(int index, const ::std::string& value) {
  search_mvm_missions_.Mutable(index)->assign(value);
}
inline void CSOTFParty::set_search_mvm_missions(int index, const char* value) {
  search_mvm_missions_.Mutable(index)->assign(value);
}
inline void CSOTFParty::set_search_mvm_missions(int index, const char* value, size_t size) {
  search_mvm_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFParty::add_search_mvm_missions() {
  return search_mvm_missions_.Add();
}
inline void CSOTFParty::add_search_mvm_missions(const ::std::string& value) {
  search_mvm_missions_.Add()->assign(value);
}
inline void CSOTFParty::add_search_mvm_missions(const char* value) {
  search_mvm_missions_.Add()->assign(value);
}
inline void CSOTFParty::add_search_mvm_missions(const char* value, size_t size) {
  search_mvm_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CSOTFParty::search_mvm_missions() const {
  return search_mvm_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CSOTFParty::mutable_search_mvm_missions() {
  return &search_mvm_missions_;
}

// optional bool search_play_for_bragging_rights = 26;
inline bool CSOTFParty::has_search_play_for_bragging_rights() const {
  return _has_bit(14);
}
inline void CSOTFParty::clear_search_play_for_bragging_rights() {
  search_play_for_bragging_rights_ = false;
  _clear_bit(14);
}
inline bool CSOTFParty::search_play_for_bragging_rights() const {
  return search_play_for_bragging_rights_;
}
inline void CSOTFParty::set_search_play_for_bragging_rights(bool value) {
  _set_bit(14);
  search_play_for_bragging_rights_ = value;
}

// optional uint32 search_quickplay_game_type = 28;
inline bool CSOTFParty::has_search_quickplay_game_type() const {
  return _has_bit(15);
}
inline void CSOTFParty::clear_search_quickplay_game_type() {
  search_quickplay_game_type_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CSOTFParty::search_quickplay_game_type() const {
  return search_quickplay_game_type_;
}
inline void CSOTFParty::set_search_quickplay_game_type(::google::protobuf::uint32 value) {
  _set_bit(15);
  search_quickplay_game_type_ = value;
}

// optional uint32 search_ladder_game_type = 33;
inline bool CSOTFParty::has_search_ladder_game_type() const {
  return _has_bit(16);
}
inline void CSOTFParty::clear_search_ladder_game_type() {
  search_ladder_game_type_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CSOTFParty::search_ladder_game_type() const {
  return search_ladder_game_type_;
}
inline void CSOTFParty::set_search_ladder_game_type(::google::protobuf::uint32 value) {
  _set_bit(16);
  search_ladder_game_type_ = value;
}

// optional .CMsgCasualMatchmakingSearchCriteria search_casual = 34;
inline bool CSOTFParty::has_search_casual() const {
  return _has_bit(17);
}
inline void CSOTFParty::clear_search_casual() {
  if (search_casual_ != NULL) search_casual_->::CMsgCasualMatchmakingSearchCriteria::Clear();
  _clear_bit(17);
}
inline const ::CMsgCasualMatchmakingSearchCriteria& CSOTFParty::search_casual() const {
  return search_casual_ != NULL ? *search_casual_ : *default_instance_->search_casual_;
}
inline ::CMsgCasualMatchmakingSearchCriteria* CSOTFParty::mutable_search_casual() {
  _set_bit(17);
  if (search_casual_ == NULL) search_casual_ = new ::CMsgCasualMatchmakingSearchCriteria;
  return search_casual_;
}

// optional uint32 matchmaking_ban_time = 18;
inline bool CSOTFParty::has_matchmaking_ban_time() const {
  return _has_bit(18);
}
inline void CSOTFParty::clear_matchmaking_ban_time() {
  matchmaking_ban_time_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CSOTFParty::matchmaking_ban_time() const {
  return matchmaking_ban_time_;
}
inline void CSOTFParty::set_matchmaking_ban_time(::google::protobuf::uint32 value) {
  _set_bit(18);
  matchmaking_ban_time_ = value;
}

// optional uint32 matchmaking_ban_account_id = 19;
inline bool CSOTFParty::has_matchmaking_ban_account_id() const {
  return _has_bit(19);
}
inline void CSOTFParty::clear_matchmaking_ban_account_id() {
  matchmaking_ban_account_id_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CSOTFParty::matchmaking_ban_account_id() const {
  return matchmaking_ban_account_id_;
}
inline void CSOTFParty::set_matchmaking_ban_account_id(::google::protobuf::uint32 value) {
  _set_bit(19);
  matchmaking_ban_account_id_ = value;
}

// optional uint32 matchmaking_low_priority_time = 20;
inline bool CSOTFParty::has_matchmaking_low_priority_time() const {
  return _has_bit(20);
}
inline void CSOTFParty::clear_matchmaking_low_priority_time() {
  matchmaking_low_priority_time_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CSOTFParty::matchmaking_low_priority_time() const {
  return matchmaking_low_priority_time_;
}
inline void CSOTFParty::set_matchmaking_low_priority_time(::google::protobuf::uint32 value) {
  _set_bit(20);
  matchmaking_low_priority_time_ = value;
}

// -------------------------------------------------------------------

// CSOTFPartyInvite_PartyMember

// optional string name = 1;
inline bool CSOTFPartyInvite_PartyMember::has_name() const {
  return _has_bit(0);
}
inline void CSOTFPartyInvite_PartyMember::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CSOTFPartyInvite_PartyMember::name() const {
  return *name_;
}
inline void CSOTFPartyInvite_PartyMember::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSOTFPartyInvite_PartyMember::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSOTFPartyInvite_PartyMember::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFPartyInvite_PartyMember::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional fixed64 steam_id = 2;
inline bool CSOTFPartyInvite_PartyMember::has_steam_id() const {
  return _has_bit(1);
}
inline void CSOTFPartyInvite_PartyMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CSOTFPartyInvite_PartyMember::steam_id() const {
  return steam_id_;
}
inline void CSOTFPartyInvite_PartyMember::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  steam_id_ = value;
}

// optional uint32 avatar = 3;
inline bool CSOTFPartyInvite_PartyMember::has_avatar() const {
  return _has_bit(2);
}
inline void CSOTFPartyInvite_PartyMember::clear_avatar() {
  avatar_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CSOTFPartyInvite_PartyMember::avatar() const {
  return avatar_;
}
inline void CSOTFPartyInvite_PartyMember::set_avatar(::google::protobuf::uint32 value) {
  _set_bit(2);
  avatar_ = value;
}

// -------------------------------------------------------------------

// CSOTFPartyInvite

// optional uint64 group_id = 1;
inline bool CSOTFPartyInvite::has_group_id() const {
  return _has_bit(0);
}
inline void CSOTFPartyInvite::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::group_id() const {
  return group_id_;
}
inline void CSOTFPartyInvite::set_group_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  group_id_ = value;
}

// optional fixed64 sender_id = 2;
inline bool CSOTFPartyInvite::has_sender_id() const {
  return _has_bit(1);
}
inline void CSOTFPartyInvite::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::sender_id() const {
  return sender_id_;
}
inline void CSOTFPartyInvite::set_sender_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  sender_id_ = value;
}

// optional string sender_name = 3;
inline bool CSOTFPartyInvite::has_sender_name() const {
  return _has_bit(2);
}
inline void CSOTFPartyInvite::clear_sender_name() {
  if (sender_name_ != &_default_sender_name_) {
    sender_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CSOTFPartyInvite::sender_name() const {
  return *sender_name_;
}
inline void CSOTFPartyInvite::set_sender_name(const ::std::string& value) {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CSOTFPartyInvite::set_sender_name(const char* value) {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CSOTFPartyInvite::set_sender_name(const char* value, size_t size) {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFPartyInvite::mutable_sender_name() {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  return sender_name_;
}

// repeated .CSOTFPartyInvite.PartyMember members = 4;
inline int CSOTFPartyInvite::members_size() const {
  return members_.size();
}
inline void CSOTFPartyInvite::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyInvite_PartyMember& CSOTFPartyInvite::members(int index) const {
  return members_.Get(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
CSOTFPartyInvite::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
CSOTFPartyInvite::mutable_members() {
  return &members_;
}

// -------------------------------------------------------------------

// CTFLobbyMember

// optional fixed64 id = 1;
inline bool CTFLobbyMember::has_id() const {
  return _has_bit(0);
}
inline void CTFLobbyMember::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CTFLobbyMember::id() const {
  return id_;
}
inline void CTFLobbyMember::set_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_ = value;
}

// optional .TF_GC_TEAM team = 3 [default = TF_GC_TEAM_DEFENDERS];
inline bool CTFLobbyMember::has_team() const {
  return _has_bit(1);
}
inline void CTFLobbyMember::clear_team() {
  team_ = 0;
  _clear_bit(1);
}
inline TF_GC_TEAM CTFLobbyMember::team() const {
  return static_cast< TF_GC_TEAM >(team_);
}
inline void CTFLobbyMember::set_team(TF_GC_TEAM value) {
  GOOGLE_DCHECK(TF_GC_TEAM_IsValid(value));
  _set_bit(1);
  team_ = value;
}

// optional .CTFLobbyMember.ConnectState connect_state = 13 [default = INVALID];
inline bool CTFLobbyMember::has_connect_state() const {
  return _has_bit(2);
}
inline void CTFLobbyMember::clear_connect_state() {
  connect_state_ = 0;
  _clear_bit(2);
}
inline ::CTFLobbyMember_ConnectState CTFLobbyMember::connect_state() const {
  return static_cast< ::CTFLobbyMember_ConnectState >(connect_state_);
}
inline void CTFLobbyMember::set_connect_state(::CTFLobbyMember_ConnectState value) {
  GOOGLE_DCHECK(::CTFLobbyMember_ConnectState_IsValid(value));
  _set_bit(2);
  connect_state_ = value;
}

// optional string name = 6;
inline bool CTFLobbyMember::has_name() const {
  return _has_bit(3);
}
inline void CTFLobbyMember::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CTFLobbyMember::name() const {
  return *name_;
}
inline void CTFLobbyMember::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CTFLobbyMember::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CTFLobbyMember::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CTFLobbyMember::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional float latitude = 8;
inline bool CTFLobbyMember::has_latitude() const {
  return _has_bit(4);
}
inline void CTFLobbyMember::clear_latitude() {
  latitude_ = 0;
  _clear_bit(4);
}
inline float CTFLobbyMember::latitude() const {
  return latitude_;
}
inline void CTFLobbyMember::set_latitude(float value) {
  _set_bit(4);
  latitude_ = value;
}

// optional float longitude = 9;
inline bool CTFLobbyMember::has_longitude() const {
  return _has_bit(5);
}
inline void CTFLobbyMember::clear_longitude() {
  longitude_ = 0;
  _clear_bit(5);
}
inline float CTFLobbyMember::longitude() const {
  return longitude_;
}
inline void CTFLobbyMember::set_longitude(float value) {
  _set_bit(5);
  longitude_ = value;
}

// optional .TFLobbyReadyState ready_state = 11 [default = TFLobbyReadyState_UNDECLARED];
inline bool CTFLobbyMember::has_ready_state() const {
  return _has_bit(6);
}
inline void CTFLobbyMember::clear_ready_state() {
  ready_state_ = 0;
  _clear_bit(6);
}
inline TFLobbyReadyState CTFLobbyMember::ready_state() const {
  return static_cast< TFLobbyReadyState >(ready_state_);
}
inline void CTFLobbyMember::set_ready_state(TFLobbyReadyState value) {
  GOOGLE_DCHECK(TFLobbyReadyState_IsValid(value));
  _set_bit(6);
  ready_state_ = value;
}

// optional uint64 party_id = 12;
inline bool CTFLobbyMember::has_party_id() const {
  return _has_bit(7);
}
inline void CTFLobbyMember::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::uint64 CTFLobbyMember::party_id() const {
  return party_id_;
}
inline void CTFLobbyMember::set_party_id(::google::protobuf::uint64 value) {
  _set_bit(7);
  party_id_ = value;
}

// optional bool squad_surplus = 14;
inline bool CTFLobbyMember::has_squad_surplus() const {
  return _has_bit(8);
}
inline void CTFLobbyMember::clear_squad_surplus() {
  squad_surplus_ = false;
  _clear_bit(8);
}
inline bool CTFLobbyMember::squad_surplus() const {
  return squad_surplus_;
}
inline void CTFLobbyMember::set_squad_surplus(bool value) {
  _set_bit(8);
  squad_surplus_ = value;
}

// optional uint32 badge_level = 15;
inline bool CTFLobbyMember::has_badge_level() const {
  return _has_bit(9);
}
inline void CTFLobbyMember::clear_badge_level() {
  badge_level_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CTFLobbyMember::badge_level() const {
  return badge_level_;
}
inline void CTFLobbyMember::set_badge_level(::google::protobuf::uint32 value) {
  _set_bit(9);
  badge_level_ = value;
}

// optional uint32 last_connect_time = 17;
inline bool CTFLobbyMember::has_last_connect_time() const {
  return _has_bit(10);
}
inline void CTFLobbyMember::clear_last_connect_time() {
  last_connect_time_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CTFLobbyMember::last_connect_time() const {
  return last_connect_time_;
}
inline void CTFLobbyMember::set_last_connect_time(::google::protobuf::uint32 value) {
  _set_bit(10);
  last_connect_time_ = value;
}

// optional bool premade_leader = 19;
inline bool CTFLobbyMember::has_premade_leader() const {
  return _has_bit(11);
}
inline void CTFLobbyMember::clear_premade_leader() {
  premade_leader_ = false;
  _clear_bit(11);
}
inline bool CTFLobbyMember::premade_leader() const {
  return premade_leader_;
}
inline void CTFLobbyMember::set_premade_leader(bool value) {
  _set_bit(11);
  premade_leader_ = value;
}

// -------------------------------------------------------------------

// CLobbyPendingPlayerReport

// optional uint32 account_id = 1;
inline bool CLobbyPendingPlayerReport::has_account_id() const {
  return _has_bit(0);
}
inline void CLobbyPendingPlayerReport::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CLobbyPendingPlayerReport::account_id() const {
  return account_id_;
}
inline void CLobbyPendingPlayerReport::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional fixed32 date = 2;
inline bool CLobbyPendingPlayerReport::has_date() const {
  return _has_bit(1);
}
inline void CLobbyPendingPlayerReport::clear_date() {
  date_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CLobbyPendingPlayerReport::date() const {
  return date_;
}
inline void CLobbyPendingPlayerReport::set_date(::google::protobuf::uint32 value) {
  _set_bit(1);
  date_ = value;
}

// -------------------------------------------------------------------

// CSOTFLobby

// optional uint64 lobby_id = 1;
inline bool CSOTFLobby::has_lobby_id() const {
  return _has_bit(0);
}
inline void CSOTFLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CSOTFLobby::lobby_id() const {
  return lobby_id_;
}
inline void CSOTFLobby::set_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  lobby_id_ = value;
}

// repeated .CTFLobbyMember members = 2;
inline int CSOTFLobby::members_size() const {
  return members_.size();
}
inline void CSOTFLobby::clear_members() {
  members_.Clear();
}
inline const ::CTFLobbyMember& CSOTFLobby::members(int index) const {
  return members_.Get(index);
}
inline ::CTFLobbyMember* CSOTFLobby::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::CTFLobbyMember* CSOTFLobby::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
CSOTFLobby::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
CSOTFLobby::mutable_members() {
  return &members_;
}

// repeated .CTFLobbyMember left_members = 7;
inline int CSOTFLobby::left_members_size() const {
  return left_members_.size();
}
inline void CSOTFLobby::clear_left_members() {
  left_members_.Clear();
}
inline const ::CTFLobbyMember& CSOTFLobby::left_members(int index) const {
  return left_members_.Get(index);
}
inline ::CTFLobbyMember* CSOTFLobby::mutable_left_members(int index) {
  return left_members_.Mutable(index);
}
inline ::CTFLobbyMember* CSOTFLobby::add_left_members() {
  return left_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
CSOTFLobby::left_members() const {
  return left_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
CSOTFLobby::mutable_left_members() {
  return &left_members_;
}

// optional fixed64 leader_id = 11;
inline bool CSOTFLobby::has_leader_id() const {
  return _has_bit(3);
}
inline void CSOTFLobby::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CSOTFLobby::leader_id() const {
  return leader_id_;
}
inline void CSOTFLobby::set_leader_id(::google::protobuf::uint64 value) {
  _set_bit(3);
  leader_id_ = value;
}

// optional fixed64 server_id = 6 [default = 0];
inline bool CSOTFLobby::has_server_id() const {
  return _has_bit(4);
}
inline void CSOTFLobby::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 CSOTFLobby::server_id() const {
  return server_id_;
}
inline void CSOTFLobby::set_server_id(::google::protobuf::uint64 value) {
  _set_bit(4);
  server_id_ = value;
}

// repeated fixed64 pending_invites = 10;
inline int CSOTFLobby::pending_invites_size() const {
  return pending_invites_.size();
}
inline void CSOTFLobby::clear_pending_invites() {
  pending_invites_.Clear();
}
inline ::google::protobuf::uint64 CSOTFLobby::pending_invites(int index) const {
  return pending_invites_.Get(index);
}
inline void CSOTFLobby::set_pending_invites(int index, ::google::protobuf::uint64 value) {
  pending_invites_.Set(index, value);
}
inline void CSOTFLobby::add_pending_invites(::google::protobuf::uint64 value) {
  pending_invites_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFLobby::pending_invites() const {
  return pending_invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFLobby::mutable_pending_invites() {
  return &pending_invites_;
}

// optional .CSOTFLobby.State state = 4 [default = SERVERSETUP];
inline bool CSOTFLobby::has_state() const {
  return _has_bit(6);
}
inline void CSOTFLobby::clear_state() {
  state_ = 1;
  _clear_bit(6);
}
inline ::CSOTFLobby_State CSOTFLobby::state() const {
  return static_cast< ::CSOTFLobby_State >(state_);
}
inline void CSOTFLobby::set_state(::CSOTFLobby_State value) {
  GOOGLE_DCHECK(::CSOTFLobby_State_IsValid(value));
  _set_bit(6);
  state_ = value;
}

// optional string connect = 5;
inline bool CSOTFLobby::has_connect() const {
  return _has_bit(7);
}
inline void CSOTFLobby::clear_connect() {
  if (connect_ != &_default_connect_) {
    connect_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CSOTFLobby::connect() const {
  return *connect_;
}
inline void CSOTFLobby::set_connect(const ::std::string& value) {
  _set_bit(7);
  if (connect_ == &_default_connect_) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void CSOTFLobby::set_connect(const char* value) {
  _set_bit(7);
  if (connect_ == &_default_connect_) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
}
inline void CSOTFLobby::set_connect(const char* value, size_t size) {
  _set_bit(7);
  if (connect_ == &_default_connect_) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFLobby::mutable_connect() {
  _set_bit(7);
  if (connect_ == &_default_connect_) {
    connect_ = new ::std::string;
  }
  return connect_;
}

// optional .CSOTFLobby.LobbyType lobby_type = 12 [default = INVALID];
inline bool CSOTFLobby::has_lobby_type() const {
  return _has_bit(8);
}
inline void CSOTFLobby::clear_lobby_type() {
  lobby_type_ = -1;
  _clear_bit(8);
}
inline ::CSOTFLobby_LobbyType CSOTFLobby::lobby_type() const {
  return static_cast< ::CSOTFLobby_LobbyType >(lobby_type_);
}
inline void CSOTFLobby::set_lobby_type(::CSOTFLobby_LobbyType value) {
  GOOGLE_DCHECK(::CSOTFLobby_LobbyType_IsValid(value));
  _set_bit(8);
  lobby_type_ = value;
}

// optional bool allow_cheats = 13;
inline bool CSOTFLobby::has_allow_cheats() const {
  return _has_bit(9);
}
inline void CSOTFLobby::clear_allow_cheats() {
  allow_cheats_ = false;
  _clear_bit(9);
}
inline bool CSOTFLobby::allow_cheats() const {
  return allow_cheats_;
}
inline void CSOTFLobby::set_allow_cheats(bool value) {
  _set_bit(9);
  allow_cheats_ = value;
}

// optional string game_name = 16;
inline bool CSOTFLobby::has_game_name() const {
  return _has_bit(10);
}
inline void CSOTFLobby::clear_game_name() {
  if (game_name_ != &_default_game_name_) {
    game_name_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CSOTFLobby::game_name() const {
  return *game_name_;
}
inline void CSOTFLobby::set_game_name(const ::std::string& value) {
  _set_bit(10);
  if (game_name_ == &_default_game_name_) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
}
inline void CSOTFLobby::set_game_name(const char* value) {
  _set_bit(10);
  if (game_name_ == &_default_game_name_) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
}
inline void CSOTFLobby::set_game_name(const char* value, size_t size) {
  _set_bit(10);
  if (game_name_ == &_default_game_name_) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFLobby::mutable_game_name() {
  _set_bit(10);
  if (game_name_ == &_default_game_name_) {
    game_name_ = new ::std::string;
  }
  return game_name_;
}

// optional uint32 server_region = 21 [default = 0];
inline bool CSOTFLobby::has_server_region() const {
  return _has_bit(11);
}
inline void CSOTFLobby::clear_server_region() {
  server_region_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CSOTFLobby::server_region() const {
  return server_region_;
}
inline void CSOTFLobby::set_server_region(::google::protobuf::uint32 value) {
  _set_bit(11);
  server_region_ = value;
}

// optional .TF_GC_GameState game_state = 22 [default = TF_GC_GAMESTATE_STATE_INIT];
inline bool CSOTFLobby::has_game_state() const {
  return _has_bit(12);
}
inline void CSOTFLobby::clear_game_state() {
  game_state_ = 0;
  _clear_bit(12);
}
inline TF_GC_GameState CSOTFLobby::game_state() const {
  return static_cast< TF_GC_GameState >(game_state_);
}
inline void CSOTFLobby::set_game_state(TF_GC_GameState value) {
  GOOGLE_DCHECK(TF_GC_GameState_IsValid(value));
  _set_bit(12);
  game_state_ = value;
}

// optional uint32 num_spectators = 23;
inline bool CSOTFLobby::has_num_spectators() const {
  return _has_bit(13);
}
inline void CSOTFLobby::clear_num_spectators() {
  num_spectators_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CSOTFLobby::num_spectators() const {
  return num_spectators_;
}
inline void CSOTFLobby::set_num_spectators(::google::protobuf::uint32 value) {
  _set_bit(13);
  num_spectators_ = value;
}

// optional float readyup_remaining_time = 26;
inline bool CSOTFLobby::has_readyup_remaining_time() const {
  return _has_bit(14);
}
inline void CSOTFLobby::clear_readyup_remaining_time() {
  readyup_remaining_time_ = 0;
  _clear_bit(14);
}
inline float CSOTFLobby::readyup_remaining_time() const {
  return readyup_remaining_time_;
}
inline void CSOTFLobby::set_readyup_remaining_time(float value) {
  _set_bit(14);
  readyup_remaining_time_ = value;
}

// optional bool allow_spectating = 31 [default = true];
inline bool CSOTFLobby::has_allow_spectating() const {
  return _has_bit(15);
}
inline void CSOTFLobby::clear_allow_spectating() {
  allow_spectating_ = true;
  _clear_bit(15);
}
inline bool CSOTFLobby::allow_spectating() const {
  return allow_spectating_;
}
inline void CSOTFLobby::set_allow_spectating(bool value) {
  _set_bit(15);
  allow_spectating_ = value;
}

// optional uint32 average_rank = 32;
inline bool CSOTFLobby::has_average_rank() const {
  return _has_bit(16);
}
inline void CSOTFLobby::clear_average_rank() {
  average_rank_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CSOTFLobby::average_rank() const {
  return average_rank_;
}
inline void CSOTFLobby::set_average_rank(::google::protobuf::uint32 value) {
  _set_bit(16);
  average_rank_ = value;
}

// optional fixed64 load_game_lobby_id = 33;
inline bool CSOTFLobby::has_load_game_lobby_id() const {
  return _has_bit(17);
}
inline void CSOTFLobby::clear_load_game_lobby_id() {
  load_game_lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(17);
}
inline ::google::protobuf::uint64 CSOTFLobby::load_game_lobby_id() const {
  return load_game_lobby_id_;
}
inline void CSOTFLobby::set_load_game_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(17);
  load_game_lobby_id_ = value;
}

// optional uint32 load_game_save_number = 34;
inline bool CSOTFLobby::has_load_game_save_number() const {
  return _has_bit(18);
}
inline void CSOTFLobby::clear_load_game_save_number() {
  load_game_save_number_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CSOTFLobby::load_game_save_number() const {
  return load_game_save_number_;
}
inline void CSOTFLobby::set_load_game_save_number(::google::protobuf::uint32 value) {
  _set_bit(18);
  load_game_save_number_ = value;
}

// optional string mannup_tour_name = 42;
inline bool CSOTFLobby::has_mannup_tour_name() const {
  return _has_bit(19);
}
inline void CSOTFLobby::clear_mannup_tour_name() {
  if (mannup_tour_name_ != &_default_mannup_tour_name_) {
    mannup_tour_name_->clear();
  }
  _clear_bit(19);
}
inline const ::std::string& CSOTFLobby::mannup_tour_name() const {
  return *mannup_tour_name_;
}
inline void CSOTFLobby::set_mannup_tour_name(const ::std::string& value) {
  _set_bit(19);
  if (mannup_tour_name_ == &_default_mannup_tour_name_) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(value);
}
inline void CSOTFLobby::set_mannup_tour_name(const char* value) {
  _set_bit(19);
  if (mannup_tour_name_ == &_default_mannup_tour_name_) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(value);
}
inline void CSOTFLobby::set_mannup_tour_name(const char* value, size_t size) {
  _set_bit(19);
  if (mannup_tour_name_ == &_default_mannup_tour_name_) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFLobby::mutable_mannup_tour_name() {
  _set_bit(19);
  if (mannup_tour_name_ == &_default_mannup_tour_name_) {
    mannup_tour_name_ = new ::std::string;
  }
  return mannup_tour_name_;
}

// optional string map_name = 38;
inline bool CSOTFLobby::has_map_name() const {
  return _has_bit(20);
}
inline void CSOTFLobby::clear_map_name() {
  if (map_name_ != &_default_map_name_) {
    map_name_->clear();
  }
  _clear_bit(20);
}
inline const ::std::string& CSOTFLobby::map_name() const {
  return *map_name_;
}
inline void CSOTFLobby::set_map_name(const ::std::string& value) {
  _set_bit(20);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
}
inline void CSOTFLobby::set_map_name(const char* value) {
  _set_bit(20);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
}
inline void CSOTFLobby::set_map_name(const char* value, size_t size) {
  _set_bit(20);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFLobby::mutable_map_name() {
  _set_bit(20);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  return map_name_;
}

// optional string mission_name = 39;
inline bool CSOTFLobby::has_mission_name() const {
  return _has_bit(21);
}
inline void CSOTFLobby::clear_mission_name() {
  if (mission_name_ != &_default_mission_name_) {
    mission_name_->clear();
  }
  _clear_bit(21);
}
inline const ::std::string& CSOTFLobby::mission_name() const {
  return *mission_name_;
}
inline void CSOTFLobby::set_mission_name(const ::std::string& value) {
  _set_bit(21);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
}
inline void CSOTFLobby::set_mission_name(const char* value) {
  _set_bit(21);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
}
inline void CSOTFLobby::set_mission_name(const char* value, size_t size) {
  _set_bit(21);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOTFLobby::mutable_mission_name() {
  _set_bit(21);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  return mission_name_;
}

// optional uint32 match_group = 41;
inline bool CSOTFLobby::has_match_group() const {
  return _has_bit(22);
}
inline void CSOTFLobby::clear_match_group() {
  match_group_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CSOTFLobby::match_group() const {
  return match_group_;
}
inline void CSOTFLobby::set_match_group(::google::protobuf::uint32 value) {
  _set_bit(22);
  match_group_ = value;
}

// optional uint64 match_id = 30 [default = 0];
inline bool CSOTFLobby::has_match_id() const {
  return _has_bit(23);
}
inline void CSOTFLobby::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(23);
}
inline ::google::protobuf::uint64 CSOTFLobby::match_id() const {
  return match_id_;
}
inline void CSOTFLobby::set_match_id(::google::protobuf::uint64 value) {
  _set_bit(23);
  match_id_ = value;
}

// optional fixed32 replay_salt = 35;
inline bool CSOTFLobby::has_replay_salt() const {
  return _has_bit(24);
}
inline void CSOTFLobby::clear_replay_salt() {
  replay_salt_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 CSOTFLobby::replay_salt() const {
  return replay_salt_;
}
inline void CSOTFLobby::set_replay_salt(::google::protobuf::uint32 value) {
  _set_bit(24);
  replay_salt_ = value;
}

// optional uint32 formed_time = 36;
inline bool CSOTFLobby::has_formed_time() const {
  return _has_bit(25);
}
inline void CSOTFLobby::clear_formed_time() {
  formed_time_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 CSOTFLobby::formed_time() const {
  return formed_time_;
}
inline void CSOTFLobby::set_formed_time(::google::protobuf::uint32 value) {
  _set_bit(25);
  formed_time_ = value;
}

// optional uint32 flags = 43;
inline bool CSOTFLobby::has_flags() const {
  return _has_bit(26);
}
inline void CSOTFLobby::clear_flags() {
  flags_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 CSOTFLobby::flags() const {
  return flags_;
}
inline void CSOTFLobby::set_flags(::google::protobuf::uint32 value) {
  _set_bit(26);
  flags_ = value;
}

// optional bool late_join_eligible = 44;
inline bool CSOTFLobby::has_late_join_eligible() const {
  return _has_bit(27);
}
inline void CSOTFLobby::clear_late_join_eligible() {
  late_join_eligible_ = false;
  _clear_bit(27);
}
inline bool CSOTFLobby::late_join_eligible() const {
  return late_join_eligible_;
}
inline void CSOTFLobby::set_late_join_eligible(bool value) {
  _set_bit(27);
  late_join_eligible_ = value;
}

// optional uint32 fixed_match_size = 45;
inline bool CSOTFLobby::has_fixed_match_size() const {
  return _has_bit(28);
}
inline void CSOTFLobby::clear_fixed_match_size() {
  fixed_match_size_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 CSOTFLobby::fixed_match_size() const {
  return fixed_match_size_;
}
inline void CSOTFLobby::set_fixed_match_size(::google::protobuf::uint32 value) {
  _set_bit(28);
  fixed_match_size_ = value;
}

// optional .CSOTFLobby.WarMatch is_war_match = 46 [default = NOPE];
inline bool CSOTFLobby::has_is_war_match() const {
  return _has_bit(29);
}
inline void CSOTFLobby::clear_is_war_match() {
  is_war_match_ = 0;
  _clear_bit(29);
}
inline ::CSOTFLobby_WarMatch CSOTFLobby::is_war_match() const {
  return static_cast< ::CSOTFLobby_WarMatch >(is_war_match_);
}
inline void CSOTFLobby::set_is_war_match(::CSOTFLobby_WarMatch value) {
  GOOGLE_DCHECK(::CSOTFLobby_WarMatch_IsValid(value));
  _set_bit(29);
  is_war_match_ = value;
}

// -------------------------------------------------------------------

// CMsgExitMatchmaking

// optional bool explicit_abandon = 1;
inline bool CMsgExitMatchmaking::has_explicit_abandon() const {
  return _has_bit(0);
}
inline void CMsgExitMatchmaking::clear_explicit_abandon() {
  explicit_abandon_ = false;
  _clear_bit(0);
}
inline bool CMsgExitMatchmaking::explicit_abandon() const {
  return explicit_abandon_;
}
inline void CMsgExitMatchmaking::set_explicit_abandon(bool value) {
  _set_bit(0);
  explicit_abandon_ = value;
}

// -------------------------------------------------------------------

// CMsgAcceptInvite

// optional uint64 party_id = 1;
inline bool CMsgAcceptInvite::has_party_id() const {
  return _has_bit(0);
}
inline void CMsgAcceptInvite::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgAcceptInvite::party_id() const {
  return party_id_;
}
inline void CMsgAcceptInvite::set_party_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  party_id_ = value;
}

// optional fixed64 steamid_lobby = 2;
inline bool CMsgAcceptInvite::has_steamid_lobby() const {
  return _has_bit(1);
}
inline void CMsgAcceptInvite::clear_steamid_lobby() {
  steamid_lobby_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgAcceptInvite::steamid_lobby() const {
  return steamid_lobby_;
}
inline void CMsgAcceptInvite::set_steamid_lobby(::google::protobuf::uint64 value) {
  _set_bit(1);
  steamid_lobby_ = value;
}

// optional uint32 client_version = 3 [default = 1225];
inline bool CMsgAcceptInvite::has_client_version() const {
  return _has_bit(2);
}
inline void CMsgAcceptInvite::clear_client_version() {
  client_version_ = 1225u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgAcceptInvite::client_version() const {
  return client_version_;
}
inline void CMsgAcceptInvite::set_client_version(::google::protobuf::uint32 value) {
  _set_bit(2);
  client_version_ = value;
}

// -------------------------------------------------------------------

// CMsgAcceptInviteResponse

// optional int32 result_code = 1;
inline bool CMsgAcceptInviteResponse::has_result_code() const {
  return _has_bit(0);
}
inline void CMsgAcceptInviteResponse::clear_result_code() {
  result_code_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMsgAcceptInviteResponse::result_code() const {
  return result_code_;
}
inline void CMsgAcceptInviteResponse::set_result_code(::google::protobuf::int32 value) {
  _set_bit(0);
  result_code_ = value;
}

// -------------------------------------------------------------------

// CMsgReadyUp

// optional .TFLobbyReadyState state = 1 [default = TFLobbyReadyState_UNDECLARED];
inline bool CMsgReadyUp::has_state() const {
  return _has_bit(0);
}
inline void CMsgReadyUp::clear_state() {
  state_ = 0;
  _clear_bit(0);
}
inline TFLobbyReadyState CMsgReadyUp::state() const {
  return static_cast< TFLobbyReadyState >(state_);
}
inline void CMsgReadyUp::set_state(TFLobbyReadyState value) {
  GOOGLE_DCHECK(TFLobbyReadyState_IsValid(value));
  _set_bit(0);
  state_ = value;
}

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountRequest

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountResponse

// repeated uint32 searching_players_by_group = 1;
inline int CMsgMatchmakingSearchCountResponse::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CMsgMatchmakingSearchCountResponse::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CMsgMatchmakingSearchCountResponse::searching_players_by_group(int index) const {
  return searching_players_by_group_.Get(index);
}
inline void CMsgMatchmakingSearchCountResponse::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
}
inline void CMsgMatchmakingSearchCountResponse::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgMatchmakingSearchCountResponse::searching_players_by_group() const {
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgMatchmakingSearchCountResponse::mutable_searching_players_by_group() {
  return &searching_players_by_group_;
}

// -------------------------------------------------------------------

// CMsgKickedFromMatchmakingQueue

// -------------------------------------------------------------------

// CMsgTFJoinChatChannel

// optional string persona_name = 1;
inline bool CMsgTFJoinChatChannel::has_persona_name() const {
  return _has_bit(0);
}
inline void CMsgTFJoinChatChannel::clear_persona_name() {
  if (persona_name_ != &_default_persona_name_) {
    persona_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMsgTFJoinChatChannel::persona_name() const {
  return *persona_name_;
}
inline void CMsgTFJoinChatChannel::set_persona_name(const ::std::string& value) {
  _set_bit(0);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgTFJoinChatChannel::set_persona_name(const char* value) {
  _set_bit(0);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgTFJoinChatChannel::set_persona_name(const char* value, size_t size) {
  _set_bit(0);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_persona_name() {
  _set_bit(0);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  return persona_name_;
}

// optional string channel_name = 2;
inline bool CMsgTFJoinChatChannel::has_channel_name() const {
  return _has_bit(1);
}
inline void CMsgTFJoinChatChannel::clear_channel_name() {
  if (channel_name_ != &_default_channel_name_) {
    channel_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgTFJoinChatChannel::channel_name() const {
  return *channel_name_;
}
inline void CMsgTFJoinChatChannel::set_channel_name(const ::std::string& value) {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFJoinChatChannel::set_channel_name(const char* value) {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFJoinChatChannel::set_channel_name(const char* value, size_t size) {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_channel_name() {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  return channel_name_;
}

// optional string password = 3;
inline bool CMsgTFJoinChatChannel::has_password() const {
  return _has_bit(2);
}
inline void CMsgTFJoinChatChannel::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgTFJoinChatChannel::password() const {
  return *password_;
}
inline void CMsgTFJoinChatChannel::set_password(const ::std::string& value) {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMsgTFJoinChatChannel::set_password(const char* value) {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMsgTFJoinChatChannel::set_password(const char* value, size_t size) {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_password() {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional .ChatChannelType_t channel_type = 4 [default = ChatChannelType_Regional];
inline bool CMsgTFJoinChatChannel::has_channel_type() const {
  return _has_bit(3);
}
inline void CMsgTFJoinChatChannel::clear_channel_type() {
  channel_type_ = 0;
  _clear_bit(3);
}
inline ChatChannelType_t CMsgTFJoinChatChannel::channel_type() const {
  return static_cast< ChatChannelType_t >(channel_type_);
}
inline void CMsgTFJoinChatChannel::set_channel_type(ChatChannelType_t value) {
  GOOGLE_DCHECK(ChatChannelType_t_IsValid(value));
  _set_bit(3);
  channel_type_ = value;
}

// -------------------------------------------------------------------

// CMsgTFLeaveChatChannel

// optional string channel_name = 1;
inline bool CMsgTFLeaveChatChannel::has_channel_name() const {
  return _has_bit(0);
}
inline void CMsgTFLeaveChatChannel::clear_channel_name() {
  if (channel_name_ != &_default_channel_name_) {
    channel_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMsgTFLeaveChatChannel::channel_name() const {
  return *channel_name_;
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const ::std::string& value) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const char* value) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const char* value, size_t size) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFLeaveChatChannel::mutable_channel_name() {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  return channel_name_;
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannelResponse_ChatMember

// optional fixed64 steam_id = 1;
inline bool CMsgTFJoinChatChannelResponse_ChatMember::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgTFJoinChatChannelResponse_ChatMember::steam_id() const {
  return steam_id_;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional string persona_name = 2;
inline bool CMsgTFJoinChatChannelResponse_ChatMember::has_persona_name() const {
  return _has_bit(1);
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_persona_name() {
  if (persona_name_ != &_default_persona_name_) {
    persona_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgTFJoinChatChannelResponse_ChatMember::persona_name() const {
  return *persona_name_;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const ::std::string& value) {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const char* value) {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const char* value, size_t size) {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFJoinChatChannelResponse_ChatMember::mutable_persona_name() {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  return persona_name_;
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannelResponse

// optional uint32 response = 1;
inline bool CMsgTFJoinChatChannelResponse::has_response() const {
  return _has_bit(0);
}
inline void CMsgTFJoinChatChannelResponse::clear_response() {
  response_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgTFJoinChatChannelResponse::response() const {
  return response_;
}
inline void CMsgTFJoinChatChannelResponse::set_response(::google::protobuf::uint32 value) {
  _set_bit(0);
  response_ = value;
}

// optional string channel_name = 2;
inline bool CMsgTFJoinChatChannelResponse::has_channel_name() const {
  return _has_bit(1);
}
inline void CMsgTFJoinChatChannelResponse::clear_channel_name() {
  if (channel_name_ != &_default_channel_name_) {
    channel_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgTFJoinChatChannelResponse::channel_name() const {
  return *channel_name_;
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const ::std::string& value) {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const char* value) {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const char* value, size_t size) {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFJoinChatChannelResponse::mutable_channel_name() {
  _set_bit(1);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  return channel_name_;
}

// optional fixed64 channel_id = 3;
inline bool CMsgTFJoinChatChannelResponse::has_channel_id() const {
  return _has_bit(2);
}
inline void CMsgTFJoinChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMsgTFJoinChatChannelResponse::channel_id() const {
  return channel_id_;
}
inline void CMsgTFJoinChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  _set_bit(2);
  channel_id_ = value;
}

// optional uint32 max_members = 4;
inline bool CMsgTFJoinChatChannelResponse::has_max_members() const {
  return _has_bit(3);
}
inline void CMsgTFJoinChatChannelResponse::clear_max_members() {
  max_members_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgTFJoinChatChannelResponse::max_members() const {
  return max_members_;
}
inline void CMsgTFJoinChatChannelResponse::set_max_members(::google::protobuf::uint32 value) {
  _set_bit(3);
  max_members_ = value;
}

// repeated .CMsgTFJoinChatChannelResponse.ChatMember members = 5;
inline int CMsgTFJoinChatChannelResponse::members_size() const {
  return members_.size();
}
inline void CMsgTFJoinChatChannelResponse::clear_members() {
  members_.Clear();
}
inline const ::CMsgTFJoinChatChannelResponse_ChatMember& CMsgTFJoinChatChannelResponse::members(int index) const {
  return members_.Get(index);
}
inline ::CMsgTFJoinChatChannelResponse_ChatMember* CMsgTFJoinChatChannelResponse::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::CMsgTFJoinChatChannelResponse_ChatMember* CMsgTFJoinChatChannelResponse::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >&
CMsgTFJoinChatChannelResponse::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >*
CMsgTFJoinChatChannelResponse::mutable_members() {
  return &members_;
}

// -------------------------------------------------------------------

// CMsgTFOtherJoinedChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgTFOtherJoinedChatChannel::has_channel_id() const {
  return _has_bit(0);
}
inline void CMsgTFOtherJoinedChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgTFOtherJoinedChatChannel::channel_id() const {
  return channel_id_;
}
inline void CMsgTFOtherJoinedChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  channel_id_ = value;
}

// optional string persona_name = 2;
inline bool CMsgTFOtherJoinedChatChannel::has_persona_name() const {
  return _has_bit(1);
}
inline void CMsgTFOtherJoinedChatChannel::clear_persona_name() {
  if (persona_name_ != &_default_persona_name_) {
    persona_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgTFOtherJoinedChatChannel::persona_name() const {
  return *persona_name_;
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const ::std::string& value) {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const char* value) {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const char* value, size_t size) {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFOtherJoinedChatChannel::mutable_persona_name() {
  _set_bit(1);
  if (persona_name_ == &_default_persona_name_) {
    persona_name_ = new ::std::string;
  }
  return persona_name_;
}

// optional fixed64 steam_id = 3;
inline bool CMsgTFOtherJoinedChatChannel::has_steam_id() const {
  return _has_bit(2);
}
inline void CMsgTFOtherJoinedChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMsgTFOtherJoinedChatChannel::steam_id() const {
  return steam_id_;
}
inline void CMsgTFOtherJoinedChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(2);
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgTFOtherLeftChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgTFOtherLeftChatChannel::has_channel_id() const {
  return _has_bit(0);
}
inline void CMsgTFOtherLeftChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgTFOtherLeftChatChannel::channel_id() const {
  return channel_id_;
}
inline void CMsgTFOtherLeftChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  channel_id_ = value;
}

// optional fixed64 steam_id = 2;
inline bool CMsgTFOtherLeftChatChannel::has_steam_id() const {
  return _has_bit(1);
}
inline void CMsgTFOtherLeftChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgTFOtherLeftChatChannel::steam_id() const {
  return steam_id_;
}
inline void CMsgTFOtherLeftChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgTFRequestDefaultChatChannel

// -------------------------------------------------------------------

// CMsgTFRequestDefaultChatChannelResponse

// optional string channel_name = 1;
inline bool CMsgTFRequestDefaultChatChannelResponse::has_channel_name() const {
  return _has_bit(0);
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_channel_name() {
  if (channel_name_ != &_default_channel_name_) {
    channel_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMsgTFRequestDefaultChatChannelResponse::channel_name() const {
  return *channel_name_;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const ::std::string& value) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const char* value) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const char* value, size_t size) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFRequestDefaultChatChannelResponse::mutable_channel_name() {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  return channel_name_;
}

// optional fixed64 channel_id = 2;
inline bool CMsgTFRequestDefaultChatChannelResponse::has_channel_id() const {
  return _has_bit(1);
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgTFRequestDefaultChatChannelResponse::channel_id() const {
  return channel_id_;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelList

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelListResponse_ChatChannel

// optional string channel_name = 1;
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_channel_name() const {
  return _has_bit(0);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_channel_name() {
  if (channel_name_ != &_default_channel_name_) {
    channel_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMsgTFRequestChatChannelListResponse_ChatChannel::channel_name() const {
  return *channel_name_;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const ::std::string& value) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value, size_t size) {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFRequestChatChannelListResponse_ChatChannel::mutable_channel_name() {
  _set_bit(0);
  if (channel_name_ == &_default_channel_name_) {
    channel_name_ = new ::std::string;
  }
  return channel_name_;
}

// optional uint32 num_members = 2;
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_num_members() const {
  return _has_bit(1);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_num_members() {
  num_members_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgTFRequestChatChannelListResponse_ChatChannel::num_members() const {
  return num_members_;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_num_members(::google::protobuf::uint32 value) {
  _set_bit(1);
  num_members_ = value;
}

// optional .ChatChannelType_t channel_type = 3 [default = ChatChannelType_Regional];
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_channel_type() const {
  return _has_bit(2);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_channel_type() {
  channel_type_ = 0;
  _clear_bit(2);
}
inline ChatChannelType_t CMsgTFRequestChatChannelListResponse_ChatChannel::channel_type() const {
  return static_cast< ChatChannelType_t >(channel_type_);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_type(ChatChannelType_t value) {
  GOOGLE_DCHECK(ChatChannelType_t_IsValid(value));
  _set_bit(2);
  channel_type_ = value;
}

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelListResponse

// repeated .CMsgTFRequestChatChannelListResponse.ChatChannel channels = 1;
inline int CMsgTFRequestChatChannelListResponse::channels_size() const {
  return channels_.size();
}
inline void CMsgTFRequestChatChannelListResponse::clear_channels() {
  channels_.Clear();
}
inline const ::CMsgTFRequestChatChannelListResponse_ChatChannel& CMsgTFRequestChatChannelListResponse::channels(int index) const {
  return channels_.Get(index);
}
inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* CMsgTFRequestChatChannelListResponse::mutable_channels(int index) {
  return channels_.Mutable(index);
}
inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* CMsgTFRequestChatChannelListResponse::add_channels() {
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >&
CMsgTFRequestChatChannelListResponse::channels() const {
  return channels_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >*
CMsgTFRequestChatChannelListResponse::mutable_channels() {
  return &channels_;
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGameServerMatchmakingStatus_Player::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgGameServerMatchmakingStatus_Player::steam_id() const {
  return steam_id_;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2 [default = INVALID];
inline bool CMsgGameServerMatchmakingStatus_Player::has_connect_state() const {
  return _has_bit(1);
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_connect_state() {
  connect_state_ = 0;
  _clear_bit(1);
}
inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_Player::connect_state() const {
  return static_cast< ::CMsgGameServerMatchmakingStatus_PlayerConnectState >(connect_state_);
}
inline void CMsgGameServerMatchmakingStatus_Player::set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  GOOGLE_DCHECK(::CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value));
  _set_bit(1);
  connect_state_ = value;
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus

// optional uint32 server_version = 16 [default = 1225];
inline bool CMsgGameServerMatchmakingStatus::has_server_version() const {
  return _has_bit(0);
}
inline void CMsgGameServerMatchmakingStatus::clear_server_version() {
  server_version_ = 1225u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_version() const {
  return server_version_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  server_version_ = value;
}

// optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_state() const {
  return _has_bit(1);
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_state() {
  matchmaking_state_ = 0;
  _clear_bit(1);
}
inline ServerMatchmakingState CMsgGameServerMatchmakingStatus::matchmaking_state() const {
  return static_cast< ServerMatchmakingState >(matchmaking_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_state(ServerMatchmakingState value) {
  GOOGLE_DCHECK(ServerMatchmakingState_IsValid(value));
  _set_bit(1);
  matchmaking_state_ = value;
}

// optional .TF_MatchmakingMode matchmaking_mode = 2 [default = TF_Matchmaking_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_mode() const {
  return _has_bit(2);
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  _clear_bit(2);
}
inline TF_MatchmakingMode CMsgGameServerMatchmakingStatus::matchmaking_mode() const {
  return static_cast< TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_mode(TF_MatchmakingMode value) {
  GOOGLE_DCHECK(TF_MatchmakingMode_IsValid(value));
  _set_bit(2);
  matchmaking_mode_ = value;
}

// optional string map = 3;
inline bool CMsgGameServerMatchmakingStatus::has_map() const {
  return _has_bit(3);
}
inline void CMsgGameServerMatchmakingStatus::clear_map() {
  if (map_ != &_default_map_) {
    map_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::map() const {
  return *map_;
}
inline void CMsgGameServerMatchmakingStatus::set_map(const ::std::string& value) {
  _set_bit(3);
  if (map_ == &_default_map_) {
    map_ = new ::std::string;
  }
  map_->assign(value);
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value) {
  _set_bit(3);
  if (map_ == &_default_map_) {
    map_ = new ::std::string;
  }
  map_->assign(value);
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value, size_t size) {
  _set_bit(3);
  if (map_ == &_default_map_) {
    map_ = new ::std::string;
  }
  map_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_map() {
  _set_bit(3);
  if (map_ == &_default_map_) {
    map_ = new ::std::string;
  }
  return map_;
}

// optional string tags = 4;
inline bool CMsgGameServerMatchmakingStatus::has_tags() const {
  return _has_bit(4);
}
inline void CMsgGameServerMatchmakingStatus::clear_tags() {
  if (tags_ != &_default_tags_) {
    tags_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::tags() const {
  return *tags_;
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const ::std::string& value) {
  _set_bit(4);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value) {
  _set_bit(4);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value, size_t size) {
  _set_bit(4);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  tags_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_tags() {
  _set_bit(4);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  return tags_;
}

// optional uint32 bot_count = 5;
inline bool CMsgGameServerMatchmakingStatus::has_bot_count() const {
  return _has_bit(5);
}
inline void CMsgGameServerMatchmakingStatus::clear_bot_count() {
  bot_count_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::bot_count() const {
  return bot_count_;
}
inline void CMsgGameServerMatchmakingStatus::set_bot_count(::google::protobuf::uint32 value) {
  _set_bit(5);
  bot_count_ = value;
}

// optional uint32 num_spectators = 6;
inline bool CMsgGameServerMatchmakingStatus::has_num_spectators() const {
  return _has_bit(6);
}
inline void CMsgGameServerMatchmakingStatus::clear_num_spectators() {
  num_spectators_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::num_spectators() const {
  return num_spectators_;
}
inline void CMsgGameServerMatchmakingStatus::set_num_spectators(::google::protobuf::uint32 value) {
  _set_bit(6);
  num_spectators_ = value;
}

// optional uint32 max_players = 7;
inline bool CMsgGameServerMatchmakingStatus::has_max_players() const {
  return _has_bit(7);
}
inline void CMsgGameServerMatchmakingStatus::clear_max_players() {
  max_players_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::max_players() const {
  return max_players_;
}
inline void CMsgGameServerMatchmakingStatus::set_max_players(::google::protobuf::uint32 value) {
  _set_bit(7);
  max_players_ = value;
}

// optional uint32 slots_free = 8;
inline bool CMsgGameServerMatchmakingStatus::has_slots_free() const {
  return _has_bit(8);
}
inline void CMsgGameServerMatchmakingStatus::clear_slots_free() {
  slots_free_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::slots_free() const {
  return slots_free_;
}
inline void CMsgGameServerMatchmakingStatus::set_slots_free(::google::protobuf::uint32 value) {
  _set_bit(8);
  slots_free_ = value;
}

// optional uint32 server_region = 9;
inline bool CMsgGameServerMatchmakingStatus::has_server_region() const {
  return _has_bit(9);
}
inline void CMsgGameServerMatchmakingStatus::clear_server_region() {
  server_region_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_region() const {
  return server_region_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_region(::google::protobuf::uint32 value) {
  _set_bit(9);
  server_region_ = value;
}

// optional float server_loadavg = 10;
inline bool CMsgGameServerMatchmakingStatus::has_server_loadavg() const {
  return _has_bit(10);
}
inline void CMsgGameServerMatchmakingStatus::clear_server_loadavg() {
  server_loadavg_ = 0;
  _clear_bit(10);
}
inline float CMsgGameServerMatchmakingStatus::server_loadavg() const {
  return server_loadavg_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_loadavg(float value) {
  _set_bit(10);
  server_loadavg_ = value;
}

// optional bool server_trusted = 11;
inline bool CMsgGameServerMatchmakingStatus::has_server_trusted() const {
  return _has_bit(11);
}
inline void CMsgGameServerMatchmakingStatus::clear_server_trusted() {
  server_trusted_ = false;
  _clear_bit(11);
}
inline bool CMsgGameServerMatchmakingStatus::server_trusted() const {
  return server_trusted_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_trusted(bool value) {
  _set_bit(11);
  server_trusted_ = value;
}

// optional bool server_dedicated = 12;
inline bool CMsgGameServerMatchmakingStatus::has_server_dedicated() const {
  return _has_bit(12);
}
inline void CMsgGameServerMatchmakingStatus::clear_server_dedicated() {
  server_dedicated_ = false;
  _clear_bit(12);
}
inline bool CMsgGameServerMatchmakingStatus::server_dedicated() const {
  return server_dedicated_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_dedicated(bool value) {
  _set_bit(12);
  server_dedicated_ = value;
}

// optional uint32 strict = 17;
inline bool CMsgGameServerMatchmakingStatus::has_strict() const {
  return _has_bit(13);
}
inline void CMsgGameServerMatchmakingStatus::clear_strict() {
  strict_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::strict() const {
  return strict_;
}
inline void CMsgGameServerMatchmakingStatus::set_strict(::google::protobuf::uint32 value) {
  _set_bit(13);
  strict_ = value;
}

// repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
inline int CMsgGameServerMatchmakingStatus::players_size() const {
  return players_.size();
}
inline void CMsgGameServerMatchmakingStatus::clear_players() {
  players_.Clear();
}
inline const ::CMsgGameServerMatchmakingStatus_Player& CMsgGameServerMatchmakingStatus::players(int index) const {
  return players_.Get(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
CMsgGameServerMatchmakingStatus::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
CMsgGameServerMatchmakingStatus::mutable_players() {
  return &players_;
}

// optional .TF_GC_GameState game_state = 14 [default = TF_GC_GAMESTATE_STATE_INIT];
inline bool CMsgGameServerMatchmakingStatus::has_game_state() const {
  return _has_bit(15);
}
inline void CMsgGameServerMatchmakingStatus::clear_game_state() {
  game_state_ = 0;
  _clear_bit(15);
}
inline TF_GC_GameState CMsgGameServerMatchmakingStatus::game_state() const {
  return static_cast< TF_GC_GameState >(game_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_game_state(TF_GC_GameState value) {
  GOOGLE_DCHECK(TF_GC_GameState_IsValid(value));
  _set_bit(15);
  game_state_ = value;
}

// optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
inline bool CMsgGameServerMatchmakingStatus::has_event() const {
  return _has_bit(16);
}
inline void CMsgGameServerMatchmakingStatus::clear_event() {
  event_ = 0;
  _clear_bit(16);
}
inline ::CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus::event() const {
  return static_cast< ::CMsgGameServerMatchmakingStatus_Event >(event_);
}
inline void CMsgGameServerMatchmakingStatus::set_event(::CMsgGameServerMatchmakingStatus_Event value) {
  GOOGLE_DCHECK(::CMsgGameServerMatchmakingStatus_Event_IsValid(value));
  _set_bit(16);
  event_ = value;
}

// optional uint32 mvm_wave = 18;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_wave() const {
  return _has_bit(17);
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_wave() {
  mvm_wave_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_wave() const {
  return mvm_wave_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_wave(::google::protobuf::uint32 value) {
  _set_bit(17);
  mvm_wave_ = value;
}

// optional uint32 mvm_credits_acquired = 19;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_acquired() const {
  return _has_bit(18);
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_acquired() {
  mvm_credits_acquired_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_acquired() const {
  return mvm_credits_acquired_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_acquired(::google::protobuf::uint32 value) {
  _set_bit(18);
  mvm_credits_acquired_ = value;
}

// optional uint32 mvm_credits_dropped = 20;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_dropped() const {
  return _has_bit(19);
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_dropped() {
  mvm_credits_dropped_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_dropped() const {
  return mvm_credits_dropped_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_dropped(::google::protobuf::uint32 value) {
  _set_bit(19);
  mvm_credits_dropped_ = value;
}

// optional sint32 match_group = 23 [default = -1];
inline bool CMsgGameServerMatchmakingStatus::has_match_group() const {
  return _has_bit(20);
}
inline void CMsgGameServerMatchmakingStatus::clear_match_group() {
  match_group_ = -1;
  _clear_bit(20);
}
inline ::google::protobuf::int32 CMsgGameServerMatchmakingStatus::match_group() const {
  return match_group_;
}
inline void CMsgGameServerMatchmakingStatus::set_match_group(::google::protobuf::int32 value) {
  _set_bit(20);
  match_group_ = value;
}

// -------------------------------------------------------------------

// CMsgMatchmakingProgress

// optional uint32 avg_wait_time_new = 4;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_new() const {
  return _has_bit(0);
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_new() {
  avg_wait_time_new_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_new() const {
  return avg_wait_time_new_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_new(::google::protobuf::uint32 value) {
  _set_bit(0);
  avg_wait_time_new_ = value;
}

// optional uint32 avg_wait_time_join_late = 5;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_join_late() const {
  return _has_bit(1);
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_join_late() {
  avg_wait_time_join_late_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_join_late() const {
  return avg_wait_time_join_late_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_join_late(::google::protobuf::uint32 value) {
  _set_bit(1);
  avg_wait_time_join_late_ = value;
}

// optional uint32 your_wait_time = 6;
inline bool CMsgMatchmakingProgress::has_your_wait_time() const {
  return _has_bit(2);
}
inline void CMsgMatchmakingProgress::clear_your_wait_time() {
  your_wait_time_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::your_wait_time() const {
  return your_wait_time_;
}
inline void CMsgMatchmakingProgress::set_your_wait_time(::google::protobuf::uint32 value) {
  _set_bit(2);
  your_wait_time_ = value;
}

// optional uint32 matching_worldwide_searching_players = 8;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_searching_players() const {
  return _has_bit(3);
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_searching_players() {
  matching_worldwide_searching_players_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_searching_players() const {
  return matching_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_searching_players(::google::protobuf::uint32 value) {
  _set_bit(3);
  matching_worldwide_searching_players_ = value;
}

// optional uint32 matching_near_you_searching_players = 9;
inline bool CMsgMatchmakingProgress::has_matching_near_you_searching_players() const {
  return _has_bit(4);
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_searching_players() {
  matching_near_you_searching_players_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_searching_players() const {
  return matching_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_searching_players(::google::protobuf::uint32 value) {
  _set_bit(4);
  matching_near_you_searching_players_ = value;
}

// optional uint32 total_worldwide_searching_players = 13;
inline bool CMsgMatchmakingProgress::has_total_worldwide_searching_players() const {
  return _has_bit(5);
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_searching_players() {
  total_worldwide_searching_players_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_searching_players() const {
  return total_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_searching_players(::google::protobuf::uint32 value) {
  _set_bit(5);
  total_worldwide_searching_players_ = value;
}

// optional uint32 total_near_you_searching_players = 14;
inline bool CMsgMatchmakingProgress::has_total_near_you_searching_players() const {
  return _has_bit(6);
}
inline void CMsgMatchmakingProgress::clear_total_near_you_searching_players() {
  total_near_you_searching_players_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_searching_players() const {
  return total_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_searching_players(::google::protobuf::uint32 value) {
  _set_bit(6);
  total_near_you_searching_players_ = value;
}

// optional uint32 matching_worldwide_active_players = 15;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_active_players() const {
  return _has_bit(7);
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_active_players() {
  matching_worldwide_active_players_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_active_players() const {
  return matching_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_active_players(::google::protobuf::uint32 value) {
  _set_bit(7);
  matching_worldwide_active_players_ = value;
}

// optional uint32 matching_near_you_active_players = 16;
inline bool CMsgMatchmakingProgress::has_matching_near_you_active_players() const {
  return _has_bit(8);
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_active_players() {
  matching_near_you_active_players_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_active_players() const {
  return matching_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_active_players(::google::protobuf::uint32 value) {
  _set_bit(8);
  matching_near_you_active_players_ = value;
}

// optional uint32 total_worldwide_active_players = 17;
inline bool CMsgMatchmakingProgress::has_total_worldwide_active_players() const {
  return _has_bit(9);
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_active_players() {
  total_worldwide_active_players_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_active_players() const {
  return total_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_active_players(::google::protobuf::uint32 value) {
  _set_bit(9);
  total_worldwide_active_players_ = value;
}

// optional uint32 total_near_you_active_players = 18;
inline bool CMsgMatchmakingProgress::has_total_near_you_active_players() const {
  return _has_bit(10);
}
inline void CMsgMatchmakingProgress::clear_total_near_you_active_players() {
  total_near_you_active_players_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_active_players() const {
  return total_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_active_players(::google::protobuf::uint32 value) {
  _set_bit(10);
  total_near_you_active_players_ = value;
}

// optional uint32 matching_worldwide_empty_gameservers = 19;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_empty_gameservers() const {
  return _has_bit(11);
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_empty_gameservers() {
  matching_worldwide_empty_gameservers_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_empty_gameservers() const {
  return matching_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  _set_bit(11);
  matching_worldwide_empty_gameservers_ = value;
}

// optional uint32 matching_near_you_empty_gameservers = 20;
inline bool CMsgMatchmakingProgress::has_matching_near_you_empty_gameservers() const {
  return _has_bit(12);
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_empty_gameservers() {
  matching_near_you_empty_gameservers_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_empty_gameservers() const {
  return matching_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  _set_bit(12);
  matching_near_you_empty_gameservers_ = value;
}

// optional uint32 total_worldwide_empty_gameservers = 21;
inline bool CMsgMatchmakingProgress::has_total_worldwide_empty_gameservers() const {
  return _has_bit(13);
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_empty_gameservers() {
  total_worldwide_empty_gameservers_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_empty_gameservers() const {
  return total_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  _set_bit(13);
  total_worldwide_empty_gameservers_ = value;
}

// optional uint32 total_near_you_empty_gameservers = 22;
inline bool CMsgMatchmakingProgress::has_total_near_you_empty_gameservers() const {
  return _has_bit(14);
}
inline void CMsgMatchmakingProgress::clear_total_near_you_empty_gameservers() {
  total_near_you_empty_gameservers_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_empty_gameservers() const {
  return total_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  _set_bit(14);
  total_near_you_empty_gameservers_ = value;
}

// optional uint32 urgency_pct = 1;
inline bool CMsgMatchmakingProgress::has_urgency_pct() const {
  return _has_bit(15);
}
inline void CMsgMatchmakingProgress::clear_urgency_pct() {
  urgency_pct_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::urgency_pct() const {
  return urgency_pct_;
}
inline void CMsgMatchmakingProgress::set_urgency_pct(::google::protobuf::uint32 value) {
  _set_bit(15);
  urgency_pct_ = value;
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Item

// optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1 [default = INVALID];
inline bool CMsgMvMVictoryInfo_Item::has_grant_reason() const {
  return _has_bit(0);
}
inline void CMsgMvMVictoryInfo_Item::clear_grant_reason() {
  grant_reason_ = 0;
  _clear_bit(0);
}
inline ::CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_Item::grant_reason() const {
  return static_cast< ::CMsgMvMVictoryInfo_GrantReason >(grant_reason_);
}
inline void CMsgMvMVictoryInfo_Item::set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value) {
  GOOGLE_DCHECK(::CMsgMvMVictoryInfo_GrantReason_IsValid(value));
  _set_bit(0);
  grant_reason_ = value;
}

// optional bytes item_data = 2;
inline bool CMsgMvMVictoryInfo_Item::has_item_data() const {
  return _has_bit(1);
}
inline void CMsgMvMVictoryInfo_Item::clear_item_data() {
  if (item_data_ != &_default_item_data_) {
    item_data_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgMvMVictoryInfo_Item::item_data() const {
  return *item_data_;
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const ::std::string& value) {
  _set_bit(1);
  if (item_data_ == &_default_item_data_) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(value);
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const char* value) {
  _set_bit(1);
  if (item_data_ == &_default_item_data_) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(value);
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const void* value, size_t size) {
  _set_bit(1);
  if (item_data_ == &_default_item_data_) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMvMVictoryInfo_Item::mutable_item_data() {
  _set_bit(1);
  if (item_data_ == &_default_item_data_) {
    item_data_ = new ::std::string;
  }
  return item_data_;
}

// optional fixed64 squad_surplus_claimer_steam_id = 3;
inline bool CMsgMvMVictoryInfo_Item::has_squad_surplus_claimer_steam_id() const {
  return _has_bit(2);
}
inline void CMsgMvMVictoryInfo_Item::clear_squad_surplus_claimer_steam_id() {
  squad_surplus_claimer_steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Item::squad_surplus_claimer_steam_id() const {
  return squad_surplus_claimer_steam_id_;
}
inline void CMsgMvMVictoryInfo_Item::set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value) {
  _set_bit(2);
  squad_surplus_claimer_steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictoryInfo_Player::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgMvMVictoryInfo_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Player::steam_id() const {
  return steam_id_;
}
inline void CMsgMvMVictoryInfo_Player::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional bool badge_granted = 3;
inline bool CMsgMvMVictoryInfo_Player::has_badge_granted() const {
  return _has_bit(1);
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_granted() {
  badge_granted_ = false;
  _clear_bit(1);
}
inline bool CMsgMvMVictoryInfo_Player::badge_granted() const {
  return badge_granted_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_granted(bool value) {
  _set_bit(1);
  badge_granted_ = value;
}

// optional bool badge_progress_updated = 4;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_updated() const {
  return _has_bit(2);
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_updated() {
  badge_progress_updated_ = false;
  _clear_bit(2);
}
inline bool CMsgMvMVictoryInfo_Player::badge_progress_updated() const {
  return badge_progress_updated_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_updated(bool value) {
  _set_bit(2);
  badge_progress_updated_ = value;
}

// optional bool badge_leveled = 5;
inline bool CMsgMvMVictoryInfo_Player::has_badge_leveled() const {
  return _has_bit(3);
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_leveled() {
  badge_leveled_ = false;
  _clear_bit(3);
}
inline bool CMsgMvMVictoryInfo_Player::badge_leveled() const {
  return badge_leveled_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_leveled(bool value) {
  _set_bit(3);
  badge_leveled_ = value;
}

// optional uint32 badge_level = 6;
inline bool CMsgMvMVictoryInfo_Player::has_badge_level() const {
  return _has_bit(4);
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_level() {
  badge_level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_level() const {
  return badge_level_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  badge_level_ = value;
}

// optional uint32 badge_progress_bits = 7;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_bits() const {
  return _has_bit(5);
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_bits() {
  badge_progress_bits_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_progress_bits() const {
  return badge_progress_bits_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_bits(::google::protobuf::uint32 value) {
  _set_bit(5);
  badge_progress_bits_ = value;
}

// repeated .CMsgMvMVictoryInfo.Item items = 8;
inline int CMsgMvMVictoryInfo_Player::items_size() const {
  return items_.size();
}
inline void CMsgMvMVictoryInfo_Player::clear_items() {
  items_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Item& CMsgMvMVictoryInfo_Player::items(int index) const {
  return items_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
CMsgMvMVictoryInfo_Player::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
CMsgMvMVictoryInfo_Player::mutable_items() {
  return &items_;
}

// optional bool voucher_missing = 9;
inline bool CMsgMvMVictoryInfo_Player::has_voucher_missing() const {
  return _has_bit(7);
}
inline void CMsgMvMVictoryInfo_Player::clear_voucher_missing() {
  voucher_missing_ = false;
  _clear_bit(7);
}
inline bool CMsgMvMVictoryInfo_Player::voucher_missing() const {
  return voucher_missing_;
}
inline void CMsgMvMVictoryInfo_Player::set_voucher_missing(bool value) {
  _set_bit(7);
  voucher_missing_ = value;
}

// optional uint32 badge_points = 10;
inline bool CMsgMvMVictoryInfo_Player::has_badge_points() const {
  return _has_bit(8);
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_points() {
  badge_points_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_points() const {
  return badge_points_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_points(::google::protobuf::uint32 value) {
  _set_bit(8);
  badge_points_ = value;
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo

// repeated .CMsgMvMVictoryInfo.Player players = 1;
inline int CMsgMvMVictoryInfo::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictoryInfo::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Player& CMsgMvMVictoryInfo::players(int index) const {
  return players_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
CMsgMvMVictoryInfo::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
CMsgMvMVictoryInfo::mutable_players() {
  return &players_;
}

// optional string tour_name = 2;
inline bool CMsgMvMVictoryInfo::has_tour_name() const {
  return _has_bit(1);
}
inline void CMsgMvMVictoryInfo::clear_tour_name() {
  if (tour_name_ != &_default_tour_name_) {
    tour_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgMvMVictoryInfo::tour_name() const {
  return *tour_name_;
}
inline void CMsgMvMVictoryInfo::set_tour_name(const ::std::string& value) {
  _set_bit(1);
  if (tour_name_ == &_default_tour_name_) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(value);
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value) {
  _set_bit(1);
  if (tour_name_ == &_default_tour_name_) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(value);
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value, size_t size) {
  _set_bit(1);
  if (tour_name_ == &_default_tour_name_) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_tour_name() {
  _set_bit(1);
  if (tour_name_ == &_default_tour_name_) {
    tour_name_ = new ::std::string;
  }
  return tour_name_;
}

// optional string mission_name = 3;
inline bool CMsgMvMVictoryInfo::has_mission_name() const {
  return _has_bit(2);
}
inline void CMsgMvMVictoryInfo::clear_mission_name() {
  if (mission_name_ != &_default_mission_name_) {
    mission_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgMvMVictoryInfo::mission_name() const {
  return *mission_name_;
}
inline void CMsgMvMVictoryInfo::set_mission_name(const ::std::string& value) {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value) {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value, size_t size) {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_mission_name() {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  return mission_name_;
}

// -------------------------------------------------------------------

// CGCMsgTFHelloResponse

// optional uint32 version_check = 1;
inline bool CGCMsgTFHelloResponse::has_version_check() const {
  return _has_bit(0);
}
inline void CGCMsgTFHelloResponse::clear_version_check() {
  version_check_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_check() const {
  return version_check_;
}
inline void CGCMsgTFHelloResponse::set_version_check(::google::protobuf::uint32 value) {
  _set_bit(0);
  version_check_ = value;
}

// repeated uint64 version_checksum = 2;
inline int CGCMsgTFHelloResponse::version_checksum_size() const {
  return version_checksum_.size();
}
inline void CGCMsgTFHelloResponse::clear_version_checksum() {
  version_checksum_.Clear();
}
inline ::google::protobuf::uint64 CGCMsgTFHelloResponse::version_checksum(int index) const {
  return version_checksum_.Get(index);
}
inline void CGCMsgTFHelloResponse::set_version_checksum(int index, ::google::protobuf::uint64 value) {
  version_checksum_.Set(index, value);
}
inline void CGCMsgTFHelloResponse::add_version_checksum(::google::protobuf::uint64 value) {
  version_checksum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CGCMsgTFHelloResponse::version_checksum() const {
  return version_checksum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CGCMsgTFHelloResponse::mutable_version_checksum() {
  return &version_checksum_;
}

// optional uint32 version_verbose = 3;
inline bool CGCMsgTFHelloResponse::has_version_verbose() const {
  return _has_bit(2);
}
inline void CGCMsgTFHelloResponse::clear_version_verbose() {
  version_verbose_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_verbose() const {
  return version_verbose_;
}
inline void CGCMsgTFHelloResponse::set_version_verbose(::google::protobuf::uint32 value) {
  _set_bit(2);
  version_verbose_ = value;
}

// -------------------------------------------------------------------

// CGCMsgTFSync

// optional bytes version_checksum = 1;
inline bool CGCMsgTFSync::has_version_checksum() const {
  return _has_bit(0);
}
inline void CGCMsgTFSync::clear_version_checksum() {
  if (version_checksum_ != &_default_version_checksum_) {
    version_checksum_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CGCMsgTFSync::version_checksum() const {
  return *version_checksum_;
}
inline void CGCMsgTFSync::set_version_checksum(const ::std::string& value) {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
}
inline void CGCMsgTFSync::set_version_checksum(const char* value) {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
}
inline void CGCMsgTFSync::set_version_checksum(const void* value, size_t size) {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum() {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  return version_checksum_;
}

// optional uint32 version_check = 2;
inline bool CGCMsgTFSync::has_version_check() const {
  return _has_bit(1);
}
inline void CGCMsgTFSync::clear_version_check() {
  version_check_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check() const {
  return version_check_;
}
inline void CGCMsgTFSync::set_version_check(::google::protobuf::uint32 value) {
  _set_bit(1);
  version_check_ = value;
}

// optional uint32 version_check_ex = 3;
inline bool CGCMsgTFSync::has_version_check_ex() const {
  return _has_bit(2);
}
inline void CGCMsgTFSync::clear_version_check_ex() {
  version_check_ex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex() const {
  return version_check_ex_;
}
inline void CGCMsgTFSync::set_version_check_ex(::google::protobuf::uint32 value) {
  _set_bit(2);
  version_check_ex_ = value;
}

// optional uint32 version_check_ex2 = 4;
inline bool CGCMsgTFSync::has_version_check_ex2() const {
  return _has_bit(3);
}
inline void CGCMsgTFSync::clear_version_check_ex2() {
  version_check_ex2_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex2() const {
  return version_check_ex2_;
}
inline void CGCMsgTFSync::set_version_check_ex2(::google::protobuf::uint32 value) {
  _set_bit(3);
  version_check_ex2_ = value;
}

// optional bytes version_checksum_ex = 5;
inline bool CGCMsgTFSync::has_version_checksum_ex() const {
  return _has_bit(4);
}
inline void CGCMsgTFSync::clear_version_checksum_ex() {
  if (version_checksum_ex_ != &_default_version_checksum_ex_) {
    version_checksum_ex_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGCMsgTFSync::version_checksum_ex() const {
  return *version_checksum_ex_;
}
inline void CGCMsgTFSync::set_version_checksum_ex(const ::std::string& value) {
  _set_bit(4);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
}
inline void CGCMsgTFSync::set_version_checksum_ex(const char* value) {
  _set_bit(4);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
}
inline void CGCMsgTFSync::set_version_checksum_ex(const void* value, size_t size) {
  _set_bit(4);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum_ex() {
  _set_bit(4);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  return version_checksum_ex_;
}

// -------------------------------------------------------------------

// CGCMsgTFSyncEx

// optional string version_checksum = 1;
inline bool CGCMsgTFSyncEx::has_version_checksum() const {
  return _has_bit(0);
}
inline void CGCMsgTFSyncEx::clear_version_checksum() {
  if (version_checksum_ != &_default_version_checksum_) {
    version_checksum_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum() const {
  return *version_checksum_;
}
inline void CGCMsgTFSyncEx::set_version_checksum(const ::std::string& value) {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value) {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value, size_t size) {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum() {
  _set_bit(0);
  if (version_checksum_ == &_default_version_checksum_) {
    version_checksum_ = new ::std::string;
  }
  return version_checksum_;
}

// optional bytes version_checksum_ex = 2;
inline bool CGCMsgTFSyncEx::has_version_checksum_ex() const {
  return _has_bit(1);
}
inline void CGCMsgTFSyncEx::clear_version_checksum_ex() {
  if (version_checksum_ex_ != &_default_version_checksum_ex_) {
    version_checksum_ex_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum_ex() const {
  return *version_checksum_ex_;
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const ::std::string& value) {
  _set_bit(1);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const char* value) {
  _set_bit(1);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const void* value, size_t size) {
  _set_bit(1);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum_ex() {
  _set_bit(1);
  if (version_checksum_ex_ == &_default_version_checksum_ex_) {
    version_checksum_ex_ = new ::std::string;
  }
  return version_checksum_ex_;
}

// optional uint32 version_check = 3;
inline bool CGCMsgTFSyncEx::has_version_check() const {
  return _has_bit(2);
}
inline void CGCMsgTFSyncEx::clear_version_check() {
  version_check_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGCMsgTFSyncEx::version_check() const {
  return version_check_;
}
inline void CGCMsgTFSyncEx::set_version_check(::google::protobuf::uint32 value) {
  _set_bit(2);
  version_check_ = value;
}

// -------------------------------------------------------------------

// CMsgMvMVictory_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictory_Player::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgMvMVictory_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgMvMVictory_Player::steam_id() const {
  return steam_id_;
}
inline void CMsgMvMVictory_Player::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional bool squad_surplus = 2;
inline bool CMsgMvMVictory_Player::has_squad_surplus() const {
  return _has_bit(1);
}
inline void CMsgMvMVictory_Player::clear_squad_surplus() {
  squad_surplus_ = false;
  _clear_bit(1);
}
inline bool CMsgMvMVictory_Player::squad_surplus() const {
  return squad_surplus_;
}
inline void CMsgMvMVictory_Player::set_squad_surplus(bool value) {
  _set_bit(1);
  squad_surplus_ = value;
}

// -------------------------------------------------------------------

// CMsgMvMVictory

// optional uint32 legacy_mission_index = 1;
inline bool CMsgMvMVictory::has_legacy_mission_index() const {
  return _has_bit(0);
}
inline void CMsgMvMVictory::clear_legacy_mission_index() {
  legacy_mission_index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgMvMVictory::legacy_mission_index() const {
  return legacy_mission_index_;
}
inline void CMsgMvMVictory::set_legacy_mission_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  legacy_mission_index_ = value;
}

// optional string tour_name_mannup = 5;
inline bool CMsgMvMVictory::has_tour_name_mannup() const {
  return _has_bit(1);
}
inline void CMsgMvMVictory::clear_tour_name_mannup() {
  if (tour_name_mannup_ != &_default_tour_name_mannup_) {
    tour_name_mannup_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgMvMVictory::tour_name_mannup() const {
  return *tour_name_mannup_;
}
inline void CMsgMvMVictory::set_tour_name_mannup(const ::std::string& value) {
  _set_bit(1);
  if (tour_name_mannup_ == &_default_tour_name_mannup_) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(value);
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value) {
  _set_bit(1);
  if (tour_name_mannup_ == &_default_tour_name_mannup_) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(value);
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value, size_t size) {
  _set_bit(1);
  if (tour_name_mannup_ == &_default_tour_name_mannup_) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMvMVictory::mutable_tour_name_mannup() {
  _set_bit(1);
  if (tour_name_mannup_ == &_default_tour_name_mannup_) {
    tour_name_mannup_ = new ::std::string;
  }
  return tour_name_mannup_;
}

// optional string mission_name = 6;
inline bool CMsgMvMVictory::has_mission_name() const {
  return _has_bit(2);
}
inline void CMsgMvMVictory::clear_mission_name() {
  if (mission_name_ != &_default_mission_name_) {
    mission_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMsgMvMVictory::mission_name() const {
  return *mission_name_;
}
inline void CMsgMvMVictory::set_mission_name(const ::std::string& value) {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
}
inline void CMsgMvMVictory::set_mission_name(const char* value) {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
}
inline void CMsgMvMVictory::set_mission_name(const char* value, size_t size) {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgMvMVictory::mutable_mission_name() {
  _set_bit(2);
  if (mission_name_ == &_default_mission_name_) {
    mission_name_ = new ::std::string;
  }
  return mission_name_;
}

// repeated .CMsgMvMVictory.Player players = 2;
inline int CMsgMvMVictory::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictory::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictory_Player& CMsgMvMVictory::players(int index) const {
  return players_.Get(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
CMsgMvMVictory::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
CMsgMvMVictory::mutable_players() {
  return &players_;
}

// optional uint64 lobby_id = 3;
inline bool CMsgMvMVictory::has_lobby_id() const {
  return _has_bit(4);
}
inline void CMsgMvMVictory::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 CMsgMvMVictory::lobby_id() const {
  return lobby_id_;
}
inline void CMsgMvMVictory::set_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(4);
  lobby_id_ = value;
}

// optional fixed32 event_time = 4;
inline bool CMsgMvMVictory::has_event_time() const {
  return _has_bit(5);
}
inline void CMsgMvMVictory::clear_event_time() {
  event_time_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgMvMVictory::event_time() const {
  return event_time_;
}
inline void CMsgMvMVictory::set_event_time(::google::protobuf::uint32 value) {
  _set_bit(5);
  event_time_ = value;
}

// -------------------------------------------------------------------

// CMsgMvMMannUpVictoryReply

// -------------------------------------------------------------------

// CMsgGameServerKickingLobby

// repeated fixed64 connected_players = 1;
inline int CMsgGameServerKickingLobby::connected_players_size() const {
  return connected_players_.size();
}
inline void CMsgGameServerKickingLobby::clear_connected_players() {
  connected_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::connected_players(int index) const {
  return connected_players_.Get(index);
}
inline void CMsgGameServerKickingLobby::set_connected_players(int index, ::google::protobuf::uint64 value) {
  connected_players_.Set(index, value);
}
inline void CMsgGameServerKickingLobby::add_connected_players(::google::protobuf::uint64 value) {
  connected_players_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGameServerKickingLobby::connected_players() const {
  return connected_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGameServerKickingLobby::mutable_connected_players() {
  return &connected_players_;
}

// optional bool create_party = 2 [default = true];
inline bool CMsgGameServerKickingLobby::has_create_party() const {
  return _has_bit(1);
}
inline void CMsgGameServerKickingLobby::clear_create_party() {
  create_party_ = true;
  _clear_bit(1);
}
inline bool CMsgGameServerKickingLobby::create_party() const {
  return create_party_;
}
inline void CMsgGameServerKickingLobby::set_create_party(bool value) {
  _set_bit(1);
  create_party_ = value;
}

// optional uint64 lobby_id = 3;
inline bool CMsgGameServerKickingLobby::has_lobby_id() const {
  return _has_bit(2);
}
inline void CMsgGameServerKickingLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::lobby_id() const {
  return lobby_id_;
}
inline void CMsgGameServerKickingLobby::set_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(2);
  lobby_id_ = value;
}

// optional uint64 match_id = 4;
inline bool CMsgGameServerKickingLobby::has_match_id() const {
  return _has_bit(3);
}
inline void CMsgGameServerKickingLobby::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::match_id() const {
  return match_id_;
}
inline void CMsgGameServerKickingLobby::set_match_id(::google::protobuf::uint64 value) {
  _set_bit(3);
  match_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGameServerKickingLobbyResponse

// -------------------------------------------------------------------

// CMsgLeaveGameAndPrepareToJoinParty

// optional fixed64 party_id = 1;
inline bool CMsgLeaveGameAndPrepareToJoinParty::has_party_id() const {
  return _has_bit(0);
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgLeaveGameAndPrepareToJoinParty::party_id() const {
  return party_id_;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_party_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  party_id_ = value;
}

// -------------------------------------------------------------------

// CMsgPlayerLeftMatch

// optional fixed64 steam_id = 1;
inline bool CMsgPlayerLeftMatch::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgPlayerLeftMatch::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::steam_id() const {
  return steam_id_;
}
inline void CMsgPlayerLeftMatch::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional .TFMatchLeaveReason leave_reason = 2 [default = TFMatchLeaveReason_UNSPECIFIED];
inline bool CMsgPlayerLeftMatch::has_leave_reason() const {
  return _has_bit(1);
}
inline void CMsgPlayerLeftMatch::clear_leave_reason() {
  leave_reason_ = 0;
  _clear_bit(1);
}
inline TFMatchLeaveReason CMsgPlayerLeftMatch::leave_reason() const {
  return static_cast< TFMatchLeaveReason >(leave_reason_);
}
inline void CMsgPlayerLeftMatch::set_leave_reason(TFMatchLeaveReason value) {
  GOOGLE_DCHECK(TFMatchLeaveReason_IsValid(value));
  _set_bit(1);
  leave_reason_ = value;
}

// optional bool was_abandon = 3;
inline bool CMsgPlayerLeftMatch::has_was_abandon() const {
  return _has_bit(2);
}
inline void CMsgPlayerLeftMatch::clear_was_abandon() {
  was_abandon_ = false;
  _clear_bit(2);
}
inline bool CMsgPlayerLeftMatch::was_abandon() const {
  return was_abandon_;
}
inline void CMsgPlayerLeftMatch::set_was_abandon(bool value) {
  _set_bit(2);
  was_abandon_ = value;
}

// optional uint64 lobby_id = 4;
inline bool CMsgPlayerLeftMatch::has_lobby_id() const {
  return _has_bit(3);
}
inline void CMsgPlayerLeftMatch::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::lobby_id() const {
  return lobby_id_;
}
inline void CMsgPlayerLeftMatch::set_lobby_id(::google::protobuf::uint64 value) {
  _set_bit(3);
  lobby_id_ = value;
}

// optional uint64 match_id = 5;
inline bool CMsgPlayerLeftMatch::has_match_id() const {
  return _has_bit(4);
}
inline void CMsgPlayerLeftMatch::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::match_id() const {
  return match_id_;
}
inline void CMsgPlayerLeftMatch::set_match_id(::google::protobuf::uint64 value) {
  _set_bit(4);
  match_id_ = value;
}

// -------------------------------------------------------------------

// CMsgPlayerLeftMatchResponse

// -------------------------------------------------------------------

// CMsgHalloween_ServerBossEvent

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_ServerBossEvent::has_event_counter() const {
  return _has_bit(0);
}
inline void CMsgHalloween_ServerBossEvent::clear_event_counter() {
  event_counter_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_counter() const {
  return event_counter_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_counter(::google::protobuf::uint32 value) {
  _set_bit(0);
  event_counter_ = value;
}

// optional uint32 timestamp = 2;
inline bool CMsgHalloween_ServerBossEvent::has_timestamp() const {
  return _has_bit(1);
}
inline void CMsgHalloween_ServerBossEvent::clear_timestamp() {
  timestamp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::timestamp() const {
  return timestamp_;
}
inline void CMsgHalloween_ServerBossEvent::set_timestamp(::google::protobuf::uint32 value) {
  _set_bit(1);
  timestamp_ = value;
}

// optional uint32 boss_type = 3;
inline bool CMsgHalloween_ServerBossEvent::has_boss_type() const {
  return _has_bit(2);
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_type() {
  boss_type_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_type() const {
  return boss_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_type(::google::protobuf::uint32 value) {
  _set_bit(2);
  boss_type_ = value;
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_ServerBossEvent::has_boss_level() const {
  return _has_bit(3);
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_level() {
  boss_level_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_level() const {
  return boss_level_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_level(::google::protobuf::uint32 value) {
  _set_bit(3);
  boss_level_ = value;
}

// optional uint32 event_type = 5;
inline bool CMsgHalloween_ServerBossEvent::has_event_type() const {
  return _has_bit(4);
}
inline void CMsgHalloween_ServerBossEvent::clear_event_type() {
  event_type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_type() const {
  return event_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  event_type_ = value;
}

// optional uint32 players_involved = 6;
inline bool CMsgHalloween_ServerBossEvent::has_players_involved() const {
  return _has_bit(5);
}
inline void CMsgHalloween_ServerBossEvent::clear_players_involved() {
  players_involved_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::players_involved() const {
  return players_involved_;
}
inline void CMsgHalloween_ServerBossEvent::set_players_involved(::google::protobuf::uint32 value) {
  _set_bit(5);
  players_involved_ = value;
}

// optional float elapsed_time = 7;
inline bool CMsgHalloween_ServerBossEvent::has_elapsed_time() const {
  return _has_bit(6);
}
inline void CMsgHalloween_ServerBossEvent::clear_elapsed_time() {
  elapsed_time_ = 0;
  _clear_bit(6);
}
inline float CMsgHalloween_ServerBossEvent::elapsed_time() const {
  return elapsed_time_;
}
inline void CMsgHalloween_ServerBossEvent::set_elapsed_time(float value) {
  _set_bit(6);
  elapsed_time_ = value;
}

// -------------------------------------------------------------------

// CMsgHalloween_Merasmus2012

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_Merasmus2012::has_event_counter() const {
  return _has_bit(0);
}
inline void CMsgHalloween_Merasmus2012::clear_event_counter() {
  event_counter_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::event_counter() const {
  return event_counter_;
}
inline void CMsgHalloween_Merasmus2012::set_event_counter(::google::protobuf::uint32 value) {
  _set_bit(0);
  event_counter_ = value;
}

// optional fixed32 time_submitted = 2;
inline bool CMsgHalloween_Merasmus2012::has_time_submitted() const {
  return _has_bit(1);
}
inline void CMsgHalloween_Merasmus2012::clear_time_submitted() {
  time_submitted_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::time_submitted() const {
  return time_submitted_;
}
inline void CMsgHalloween_Merasmus2012::set_time_submitted(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_submitted_ = value;
}

// optional bool is_valve_server = 3;
inline bool CMsgHalloween_Merasmus2012::has_is_valve_server() const {
  return _has_bit(2);
}
inline void CMsgHalloween_Merasmus2012::clear_is_valve_server() {
  is_valve_server_ = false;
  _clear_bit(2);
}
inline bool CMsgHalloween_Merasmus2012::is_valve_server() const {
  return is_valve_server_;
}
inline void CMsgHalloween_Merasmus2012::set_is_valve_server(bool value) {
  _set_bit(2);
  is_valve_server_ = value;
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_Merasmus2012::has_boss_level() const {
  return _has_bit(3);
}
inline void CMsgHalloween_Merasmus2012::clear_boss_level() {
  boss_level_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::boss_level() const {
  return boss_level_;
}
inline void CMsgHalloween_Merasmus2012::set_boss_level(::google::protobuf::uint32 value) {
  _set_bit(3);
  boss_level_ = value;
}

// optional uint32 spawned_health = 5;
inline bool CMsgHalloween_Merasmus2012::has_spawned_health() const {
  return _has_bit(4);
}
inline void CMsgHalloween_Merasmus2012::clear_spawned_health() {
  spawned_health_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spawned_health() const {
  return spawned_health_;
}
inline void CMsgHalloween_Merasmus2012::set_spawned_health(::google::protobuf::uint32 value) {
  _set_bit(4);
  spawned_health_ = value;
}

// optional uint32 remaining_health = 6;
inline bool CMsgHalloween_Merasmus2012::has_remaining_health() const {
  return _has_bit(5);
}
inline void CMsgHalloween_Merasmus2012::clear_remaining_health() {
  remaining_health_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::remaining_health() const {
  return remaining_health_;
}
inline void CMsgHalloween_Merasmus2012::set_remaining_health(::google::protobuf::uint32 value) {
  _set_bit(5);
  remaining_health_ = value;
}

// optional uint32 life_time = 7;
inline bool CMsgHalloween_Merasmus2012::has_life_time() const {
  return _has_bit(6);
}
inline void CMsgHalloween_Merasmus2012::clear_life_time() {
  life_time_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::life_time() const {
  return life_time_;
}
inline void CMsgHalloween_Merasmus2012::set_life_time(::google::protobuf::uint32 value) {
  _set_bit(6);
  life_time_ = value;
}

// optional uint32 bomb_kills = 8;
inline bool CMsgHalloween_Merasmus2012::has_bomb_kills() const {
  return _has_bit(7);
}
inline void CMsgHalloween_Merasmus2012::clear_bomb_kills() {
  bomb_kills_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::bomb_kills() const {
  return bomb_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_bomb_kills(::google::protobuf::uint32 value) {
  _set_bit(7);
  bomb_kills_ = value;
}

// optional uint32 staff_kills = 9;
inline bool CMsgHalloween_Merasmus2012::has_staff_kills() const {
  return _has_bit(8);
}
inline void CMsgHalloween_Merasmus2012::clear_staff_kills() {
  staff_kills_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::staff_kills() const {
  return staff_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_staff_kills(::google::protobuf::uint32 value) {
  _set_bit(8);
  staff_kills_ = value;
}

// optional uint32 pvp_kills = 10;
inline bool CMsgHalloween_Merasmus2012::has_pvp_kills() const {
  return _has_bit(9);
}
inline void CMsgHalloween_Merasmus2012::clear_pvp_kills() {
  pvp_kills_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pvp_kills() const {
  return pvp_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_pvp_kills(::google::protobuf::uint32 value) {
  _set_bit(9);
  pvp_kills_ = value;
}

// optional uint32 prophunt_time1 = 11;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time1() const {
  return _has_bit(10);
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time1() {
  prophunt_time1_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time1() const {
  return prophunt_time1_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time1(::google::protobuf::uint32 value) {
  _set_bit(10);
  prophunt_time1_ = value;
}

// optional uint32 prophunt_time2 = 12;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time2() const {
  return _has_bit(11);
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time2() {
  prophunt_time2_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time2() const {
  return prophunt_time2_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time2(::google::protobuf::uint32 value) {
  _set_bit(11);
  prophunt_time2_ = value;
}

// optional uint32 dmg_scout = 13;
inline bool CMsgHalloween_Merasmus2012::has_dmg_scout() const {
  return _has_bit(12);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_scout() {
  dmg_scout_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_scout() const {
  return dmg_scout_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_scout(::google::protobuf::uint32 value) {
  _set_bit(12);
  dmg_scout_ = value;
}

// optional uint32 dmg_sniper = 14;
inline bool CMsgHalloween_Merasmus2012::has_dmg_sniper() const {
  return _has_bit(13);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_sniper() {
  dmg_sniper_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_sniper() const {
  return dmg_sniper_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_sniper(::google::protobuf::uint32 value) {
  _set_bit(13);
  dmg_sniper_ = value;
}

// optional uint32 dmg_soldier = 15;
inline bool CMsgHalloween_Merasmus2012::has_dmg_soldier() const {
  return _has_bit(14);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_soldier() {
  dmg_soldier_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_soldier() const {
  return dmg_soldier_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_soldier(::google::protobuf::uint32 value) {
  _set_bit(14);
  dmg_soldier_ = value;
}

// optional uint32 dmg_demo = 16;
inline bool CMsgHalloween_Merasmus2012::has_dmg_demo() const {
  return _has_bit(15);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_demo() {
  dmg_demo_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_demo() const {
  return dmg_demo_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_demo(::google::protobuf::uint32 value) {
  _set_bit(15);
  dmg_demo_ = value;
}

// optional uint32 dmg_medic = 17;
inline bool CMsgHalloween_Merasmus2012::has_dmg_medic() const {
  return _has_bit(16);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_medic() {
  dmg_medic_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_medic() const {
  return dmg_medic_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_medic(::google::protobuf::uint32 value) {
  _set_bit(16);
  dmg_medic_ = value;
}

// optional uint32 dmg_heavy = 18;
inline bool CMsgHalloween_Merasmus2012::has_dmg_heavy() const {
  return _has_bit(17);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_heavy() {
  dmg_heavy_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_heavy() const {
  return dmg_heavy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_heavy(::google::protobuf::uint32 value) {
  _set_bit(17);
  dmg_heavy_ = value;
}

// optional uint32 dmg_pyro = 19;
inline bool CMsgHalloween_Merasmus2012::has_dmg_pyro() const {
  return _has_bit(18);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_pyro() {
  dmg_pyro_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_pyro() const {
  return dmg_pyro_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_pyro(::google::protobuf::uint32 value) {
  _set_bit(18);
  dmg_pyro_ = value;
}

// optional uint32 dmg_spy = 20;
inline bool CMsgHalloween_Merasmus2012::has_dmg_spy() const {
  return _has_bit(19);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_spy() {
  dmg_spy_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_spy() const {
  return dmg_spy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_spy(::google::protobuf::uint32 value) {
  _set_bit(19);
  dmg_spy_ = value;
}

// optional uint32 dmg_engineer = 21;
inline bool CMsgHalloween_Merasmus2012::has_dmg_engineer() const {
  return _has_bit(20);
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_engineer() {
  dmg_engineer_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_engineer() const {
  return dmg_engineer_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_engineer(::google::protobuf::uint32 value) {
  _set_bit(20);
  dmg_engineer_ = value;
}

// optional uint32 scout_count = 22;
inline bool CMsgHalloween_Merasmus2012::has_scout_count() const {
  return _has_bit(21);
}
inline void CMsgHalloween_Merasmus2012::clear_scout_count() {
  scout_count_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::scout_count() const {
  return scout_count_;
}
inline void CMsgHalloween_Merasmus2012::set_scout_count(::google::protobuf::uint32 value) {
  _set_bit(21);
  scout_count_ = value;
}

// optional uint32 sniper_count = 23;
inline bool CMsgHalloween_Merasmus2012::has_sniper_count() const {
  return _has_bit(22);
}
inline void CMsgHalloween_Merasmus2012::clear_sniper_count() {
  sniper_count_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::sniper_count() const {
  return sniper_count_;
}
inline void CMsgHalloween_Merasmus2012::set_sniper_count(::google::protobuf::uint32 value) {
  _set_bit(22);
  sniper_count_ = value;
}

// optional uint32 solider_count = 24;
inline bool CMsgHalloween_Merasmus2012::has_solider_count() const {
  return _has_bit(23);
}
inline void CMsgHalloween_Merasmus2012::clear_solider_count() {
  solider_count_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::solider_count() const {
  return solider_count_;
}
inline void CMsgHalloween_Merasmus2012::set_solider_count(::google::protobuf::uint32 value) {
  _set_bit(23);
  solider_count_ = value;
}

// optional uint32 demo_count = 25;
inline bool CMsgHalloween_Merasmus2012::has_demo_count() const {
  return _has_bit(24);
}
inline void CMsgHalloween_Merasmus2012::clear_demo_count() {
  demo_count_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::demo_count() const {
  return demo_count_;
}
inline void CMsgHalloween_Merasmus2012::set_demo_count(::google::protobuf::uint32 value) {
  _set_bit(24);
  demo_count_ = value;
}

// optional uint32 medic_count = 26;
inline bool CMsgHalloween_Merasmus2012::has_medic_count() const {
  return _has_bit(25);
}
inline void CMsgHalloween_Merasmus2012::clear_medic_count() {
  medic_count_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::medic_count() const {
  return medic_count_;
}
inline void CMsgHalloween_Merasmus2012::set_medic_count(::google::protobuf::uint32 value) {
  _set_bit(25);
  medic_count_ = value;
}

// optional uint32 heavy_count = 27;
inline bool CMsgHalloween_Merasmus2012::has_heavy_count() const {
  return _has_bit(26);
}
inline void CMsgHalloween_Merasmus2012::clear_heavy_count() {
  heavy_count_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::heavy_count() const {
  return heavy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_heavy_count(::google::protobuf::uint32 value) {
  _set_bit(26);
  heavy_count_ = value;
}

// optional uint32 pyro_count = 28;
inline bool CMsgHalloween_Merasmus2012::has_pyro_count() const {
  return _has_bit(27);
}
inline void CMsgHalloween_Merasmus2012::clear_pyro_count() {
  pyro_count_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pyro_count() const {
  return pyro_count_;
}
inline void CMsgHalloween_Merasmus2012::set_pyro_count(::google::protobuf::uint32 value) {
  _set_bit(27);
  pyro_count_ = value;
}

// optional uint32 spy_count = 29;
inline bool CMsgHalloween_Merasmus2012::has_spy_count() const {
  return _has_bit(28);
}
inline void CMsgHalloween_Merasmus2012::clear_spy_count() {
  spy_count_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spy_count() const {
  return spy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_spy_count(::google::protobuf::uint32 value) {
  _set_bit(28);
  spy_count_ = value;
}

// optional uint32 engineer_count = 30;
inline bool CMsgHalloween_Merasmus2012::has_engineer_count() const {
  return _has_bit(29);
}
inline void CMsgHalloween_Merasmus2012::clear_engineer_count() {
  engineer_count_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::engineer_count() const {
  return engineer_count_;
}
inline void CMsgHalloween_Merasmus2012::set_engineer_count(::google::protobuf::uint32 value) {
  _set_bit(29);
  engineer_count_ = value;
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel_Player

// optional fixed64 steam_id = 1;
inline bool CMsgUpdateHalloweenMerasmusLootLevel_Player::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgUpdateHalloweenMerasmusLootLevel_Player::steam_id() const {
  return steam_id_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel

// repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
inline int CMsgUpdateHalloweenMerasmusLootLevel::players_size() const {
  return players_.size();
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_players() {
  players_.Clear();
}
inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& CMsgUpdateHalloweenMerasmusLootLevel::players(int index) const {
  return players_.Get(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
CMsgUpdateHalloweenMerasmusLootLevel::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
CMsgUpdateHalloweenMerasmusLootLevel::mutable_players() {
  return &players_;
}

// optional uint32 merasmus_level = 2;
inline bool CMsgUpdateHalloweenMerasmusLootLevel::has_merasmus_level() const {
  return _has_bit(1);
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_merasmus_level() {
  merasmus_level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgUpdateHalloweenMerasmusLootLevel::merasmus_level() const {
  return merasmus_level_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_merasmus_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  merasmus_level_ = value;
}

// -------------------------------------------------------------------

// CAttribute_String

// optional string value = 1;
inline bool CAttribute_String::has_value() const {
  return _has_bit(0);
}
inline void CAttribute_String::clear_value() {
  if (value_ != &_default_value_) {
    value_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CAttribute_String::value() const {
  return *value_;
}
inline void CAttribute_String::set_value(const ::std::string& value) {
  _set_bit(0);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CAttribute_String::set_value(const char* value) {
  _set_bit(0);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CAttribute_String::set_value(const char* value, size_t size) {
  _set_bit(0);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CAttribute_String::mutable_value() {
  _set_bit(0);
  if (value_ == &_default_value_) {
    value_ = new ::std::string;
  }
  return value_;
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent::has_def_index() const {
  return _has_bit(0);
}
inline void CAttribute_DynamicRecipeComponent::clear_def_index() {
  def_index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::def_index() const {
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent::set_def_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  def_index_ = value;
}

// optional uint32 item_quality = 2;
inline bool CAttribute_DynamicRecipeComponent::has_item_quality() const {
  return _has_bit(1);
}
inline void CAttribute_DynamicRecipeComponent::clear_item_quality() {
  item_quality_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::item_quality() const {
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent::set_item_quality(::google::protobuf::uint32 value) {
  _set_bit(1);
  item_quality_ = value;
}

// optional uint32 component_flags = 3;
inline bool CAttribute_DynamicRecipeComponent::has_component_flags() const {
  return _has_bit(2);
}
inline void CAttribute_DynamicRecipeComponent::clear_component_flags() {
  component_flags_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::component_flags() const {
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent::set_component_flags(::google::protobuf::uint32 value) {
  _set_bit(2);
  component_flags_ = value;
}

// optional string attributes_string = 4;
inline bool CAttribute_DynamicRecipeComponent::has_attributes_string() const {
  return _has_bit(3);
}
inline void CAttribute_DynamicRecipeComponent::clear_attributes_string() {
  if (attributes_string_ != &_default_attributes_string_) {
    attributes_string_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CAttribute_DynamicRecipeComponent::attributes_string() const {
  return *attributes_string_;
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const ::std::string& value) {
  _set_bit(3);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value) {
  _set_bit(3);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value, size_t size) {
  _set_bit(3);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CAttribute_DynamicRecipeComponent::mutable_attributes_string() {
  _set_bit(3);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  return attributes_string_;
}

// optional uint32 num_required = 5;
inline bool CAttribute_DynamicRecipeComponent::has_num_required() const {
  return _has_bit(4);
}
inline void CAttribute_DynamicRecipeComponent::clear_num_required() {
  num_required_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_required() const {
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_required(::google::protobuf::uint32 value) {
  _set_bit(4);
  num_required_ = value;
}

// optional uint32 num_fulfilled = 6;
inline bool CAttribute_DynamicRecipeComponent::has_num_fulfilled() const {
  return _has_bit(5);
}
inline void CAttribute_DynamicRecipeComponent::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_fulfilled() const {
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_fulfilled(::google::protobuf::uint32 value) {
  _set_bit(5);
  num_fulfilled_ = value;
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_def_index() const {
  return _has_bit(0);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_def_index() {
  def_index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::def_index() const {
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_def_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  def_index_ = value;
}

// optional uint32 item_def = 2;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_def() const {
  return _has_bit(1);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_def() {
  item_def_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_def() const {
  return item_def_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_def(::google::protobuf::uint32 value) {
  _set_bit(1);
  item_def_ = value;
}

// optional uint32 item_quality = 3;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_quality() const {
  return _has_bit(2);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_quality() {
  item_quality_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_quality() const {
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_quality(::google::protobuf::uint32 value) {
  _set_bit(2);
  item_quality_ = value;
}

// optional uint32 component_flags = 4;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_component_flags() const {
  return _has_bit(3);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_component_flags() {
  component_flags_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::component_flags() const {
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_component_flags(::google::protobuf::uint32 value) {
  _set_bit(3);
  component_flags_ = value;
}

// optional uint32 item_flags = 5;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_flags() const {
  return _has_bit(4);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_flags() {
  item_flags_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_flags() const {
  return item_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_flags(::google::protobuf::uint32 value) {
  _set_bit(4);
  item_flags_ = value;
}

// optional string attributes_string = 6;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_attributes_string() const {
  return _has_bit(5);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_attributes_string() {
  if (attributes_string_ != &_default_attributes_string_) {
    attributes_string_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::attributes_string() const {
  return *attributes_string_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const ::std::string& value) {
  _set_bit(5);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value) {
  _set_bit(5);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value, size_t size) {
  _set_bit(5);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::mutable_attributes_string() {
  _set_bit(5);
  if (attributes_string_ == &_default_attributes_string_) {
    attributes_string_ = new ::std::string;
  }
  return attributes_string_;
}

// optional uint32 num_required = 7;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_required() const {
  return _has_bit(6);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_required() {
  num_required_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_required() const {
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_required(::google::protobuf::uint32 value) {
  _set_bit(6);
  num_required_ = value;
}

// optional uint32 item_count = 8;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_count() const {
  return _has_bit(7);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_count() {
  item_count_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_count() const {
  return item_count_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_count(::google::protobuf::uint32 value) {
  _set_bit(7);
  item_count_ = value;
}

// optional uint32 num_fulfilled = 9;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_fulfilled() const {
  return _has_bit(8);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_fulfilled() const {
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_fulfilled(::google::protobuf::uint32 value) {
  _set_bit(8);
  num_fulfilled_ = value;
}

// optional uint32 items_fulfilled = 10;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_items_fulfilled() const {
  return _has_bit(9);
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_items_fulfilled() {
  items_fulfilled_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::items_fulfilled() const {
  return items_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_items_fulfilled(::google::protobuf::uint32 value) {
  _set_bit(9);
  items_fulfilled_ = value;
}

// -------------------------------------------------------------------

// CAttribute_ItemSlotCriteria

// optional string tags = 1;
inline bool CAttribute_ItemSlotCriteria::has_tags() const {
  return _has_bit(0);
}
inline void CAttribute_ItemSlotCriteria::clear_tags() {
  if (tags_ != &_default_tags_) {
    tags_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CAttribute_ItemSlotCriteria::tags() const {
  return *tags_;
}
inline void CAttribute_ItemSlotCriteria::set_tags(const ::std::string& value) {
  _set_bit(0);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value) {
  _set_bit(0);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value, size_t size) {
  _set_bit(0);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  tags_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CAttribute_ItemSlotCriteria::mutable_tags() {
  _set_bit(0);
  if (tags_ == &_default_tags_) {
    tags_ = new ::std::string;
  }
  return tags_;
}

// -------------------------------------------------------------------

// CMsgSetItemSlotAttribute

// optional uint64 item_id = 1;
inline bool CMsgSetItemSlotAttribute::has_item_id() const {
  return _has_bit(0);
}
inline void CMsgSetItemSlotAttribute::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::item_id() const {
  return item_id_;
}
inline void CMsgSetItemSlotAttribute::set_item_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  item_id_ = value;
}

// optional uint64 slot_item_original_id = 2;
inline bool CMsgSetItemSlotAttribute::has_slot_item_original_id() const {
  return _has_bit(1);
}
inline void CMsgSetItemSlotAttribute::clear_slot_item_original_id() {
  slot_item_original_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::slot_item_original_id() const {
  return slot_item_original_id_;
}
inline void CMsgSetItemSlotAttribute::set_slot_item_original_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  slot_item_original_id_ = value;
}

// optional uint32 slot_index = 3;
inline bool CMsgSetItemSlotAttribute::has_slot_index() const {
  return _has_bit(2);
}
inline void CMsgSetItemSlotAttribute::clear_slot_index() {
  slot_index_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgSetItemSlotAttribute::slot_index() const {
  return slot_index_;
}
inline void CMsgSetItemSlotAttribute::set_slot_index(::google::protobuf::uint32 value) {
  _set_bit(2);
  slot_index_ = value;
}

// -------------------------------------------------------------------

// CSOWarData

// optional uint32 account_id = 1;
inline bool CSOWarData::has_account_id() const {
  return _has_bit(0);
}
inline void CSOWarData::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CSOWarData::account_id() const {
  return account_id_;
}
inline void CSOWarData::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional uint32 war_id = 2;
inline bool CSOWarData::has_war_id() const {
  return _has_bit(1);
}
inline void CSOWarData::clear_war_id() {
  war_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CSOWarData::war_id() const {
  return war_id_;
}
inline void CSOWarData::set_war_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  war_id_ = value;
}

// optional uint32 affiliation = 3;
inline bool CSOWarData::has_affiliation() const {
  return _has_bit(2);
}
inline void CSOWarData::clear_affiliation() {
  affiliation_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CSOWarData::affiliation() const {
  return affiliation_;
}
inline void CSOWarData::set_affiliation(::google::protobuf::uint32 value) {
  _set_bit(2);
  affiliation_ = value;
}

// optional uint32 points_scored = 4;
inline bool CSOWarData::has_points_scored() const {
  return _has_bit(3);
}
inline void CSOWarData::clear_points_scored() {
  points_scored_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CSOWarData::points_scored() const {
  return points_scored_;
}
inline void CSOWarData::set_points_scored(::google::protobuf::uint32 value) {
  _set_bit(3);
  points_scored_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGC_War_IndividualUpdate

// optional fixed64 steam_id = 1;
inline bool CGCMsgGC_War_IndividualUpdate::has_steam_id() const {
  return _has_bit(0);
}
inline void CGCMsgGC_War_IndividualUpdate::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CGCMsgGC_War_IndividualUpdate::steam_id() const {
  return steam_id_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_IndividualUpdate::has_war_id() const {
  return _has_bit(1);
}
inline void CGCMsgGC_War_IndividualUpdate::clear_war_id() {
  war_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_IndividualUpdate::war_id() const {
  return war_id_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_war_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  war_id_ = value;
}

// optional uint32 score = 3;
inline bool CGCMsgGC_War_IndividualUpdate::has_score() const {
  return _has_bit(2);
}
inline void CGCMsgGC_War_IndividualUpdate::clear_score() {
  score_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_IndividualUpdate::score() const {
  return score_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  _set_bit(2);
  score_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGC_War_JoinWar

// optional uint32 affiliation = 1;
inline bool CGCMsgGC_War_JoinWar::has_affiliation() const {
  return _has_bit(0);
}
inline void CGCMsgGC_War_JoinWar::clear_affiliation() {
  affiliation_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_JoinWar::affiliation() const {
  return affiliation_;
}
inline void CGCMsgGC_War_JoinWar::set_affiliation(::google::protobuf::uint32 value) {
  _set_bit(0);
  affiliation_ = value;
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_JoinWar::has_war_id() const {
  return _has_bit(1);
}
inline void CGCMsgGC_War_JoinWar::clear_war_id() {
  war_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_JoinWar::war_id() const {
  return war_id_;
}
inline void CGCMsgGC_War_JoinWar::set_war_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  war_id_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGC_War_RequestGlobalStats

// optional uint32 war_id = 1;
inline bool CGCMsgGC_War_RequestGlobalStats::has_war_id() const {
  return _has_bit(0);
}
inline void CGCMsgGC_War_RequestGlobalStats::clear_war_id() {
  war_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_RequestGlobalStats::war_id() const {
  return war_id_;
}
inline void CGCMsgGC_War_RequestGlobalStats::set_war_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  war_id_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGC_War_GlobalStatsResponse_SideScore

// optional uint32 side = 1;
inline bool CGCMsgGC_War_GlobalStatsResponse_SideScore::has_side() const {
  return _has_bit(0);
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_side() {
  side_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_GlobalStatsResponse_SideScore::side() const {
  return side_;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_side(::google::protobuf::uint32 value) {
  _set_bit(0);
  side_ = value;
}

// optional uint64 score = 2;
inline bool CGCMsgGC_War_GlobalStatsResponse_SideScore::has_score() const {
  return _has_bit(1);
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CGCMsgGC_War_GlobalStatsResponse_SideScore::score() const {
  return score_;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_score(::google::protobuf::uint64 value) {
  _set_bit(1);
  score_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGC_War_GlobalStatsResponse

// repeated .CGCMsgGC_War_GlobalStatsResponse.SideScore side_scores = 1;
inline int CGCMsgGC_War_GlobalStatsResponse::side_scores_size() const {
  return side_scores_.size();
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_side_scores() {
  side_scores_.Clear();
}
inline const ::CGCMsgGC_War_GlobalStatsResponse_SideScore& CGCMsgGC_War_GlobalStatsResponse::side_scores(int index) const {
  return side_scores_.Get(index);
}
inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* CGCMsgGC_War_GlobalStatsResponse::mutable_side_scores(int index) {
  return side_scores_.Mutable(index);
}
inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* CGCMsgGC_War_GlobalStatsResponse::add_side_scores() {
  return side_scores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >&
CGCMsgGC_War_GlobalStatsResponse::side_scores() const {
  return side_scores_;
}
inline ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >*
CGCMsgGC_War_GlobalStatsResponse::mutable_side_scores() {
  return &side_scores_;
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_GlobalStatsResponse::has_war_id() const {
  return _has_bit(1);
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_war_id() {
  war_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGCMsgGC_War_GlobalStatsResponse::war_id() const {
  return war_id_;
}
inline void CGCMsgGC_War_GlobalStatsResponse::set_war_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  war_id_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate

// optional uint32 score = 2;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score() const {
  return _has_bit(0);
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score() {
  score_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score() const {
  return score_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  _set_bit(0);
  score_ = value;
}

// optional uint32 type = 3;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_type() const {
  return _has_bit(1);
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::type() const {
  return type_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional bytes score_id = 4;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_id() const {
  return _has_bit(2);
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_id() {
  if (score_id_ != &_default_score_id_) {
    score_id_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_id() const {
  return *score_id_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const ::std::string& value) {
  _set_bit(2);
  if (score_id_ == &_default_score_id_) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(value);
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const char* value) {
  _set_bit(2);
  if (score_id_ == &_default_score_id_) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(value);
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const void* value, size_t size) {
  _set_bit(2);
  if (score_id_ == &_default_score_id_) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::mutable_score_id() {
  _set_bit(2);
  if (score_id_ == &_default_score_id_) {
    score_id_ = new ::std::string;
  }
  return score_id_;
}

// optional uint32 score_check = 5;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_check() const {
  return _has_bit(3);
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_check() {
  score_check_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_check() const {
  return score_check_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_check(::google::protobuf::uint32 value) {
  _set_bit(3);
  score_check_ = value;
}

// -------------------------------------------------------------------

// CAttribute_WorldItemPlacement

// optional uint64 original_item_id = 1;
inline bool CAttribute_WorldItemPlacement::has_original_item_id() const {
  return _has_bit(0);
}
inline void CAttribute_WorldItemPlacement::clear_original_item_id() {
  original_item_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CAttribute_WorldItemPlacement::original_item_id() const {
  return original_item_id_;
}
inline void CAttribute_WorldItemPlacement::set_original_item_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  original_item_id_ = value;
}

// optional float pos_x = 2;
inline bool CAttribute_WorldItemPlacement::has_pos_x() const {
  return _has_bit(1);
}
inline void CAttribute_WorldItemPlacement::clear_pos_x() {
  pos_x_ = 0;
  _clear_bit(1);
}
inline float CAttribute_WorldItemPlacement::pos_x() const {
  return pos_x_;
}
inline void CAttribute_WorldItemPlacement::set_pos_x(float value) {
  _set_bit(1);
  pos_x_ = value;
}

// optional float pos_y = 3;
inline bool CAttribute_WorldItemPlacement::has_pos_y() const {
  return _has_bit(2);
}
inline void CAttribute_WorldItemPlacement::clear_pos_y() {
  pos_y_ = 0;
  _clear_bit(2);
}
inline float CAttribute_WorldItemPlacement::pos_y() const {
  return pos_y_;
}
inline void CAttribute_WorldItemPlacement::set_pos_y(float value) {
  _set_bit(2);
  pos_y_ = value;
}

// optional float pos_z = 4;
inline bool CAttribute_WorldItemPlacement::has_pos_z() const {
  return _has_bit(3);
}
inline void CAttribute_WorldItemPlacement::clear_pos_z() {
  pos_z_ = 0;
  _clear_bit(3);
}
inline float CAttribute_WorldItemPlacement::pos_z() const {
  return pos_z_;
}
inline void CAttribute_WorldItemPlacement::set_pos_z(float value) {
  _set_bit(3);
  pos_z_ = value;
}

// optional float ang_x = 5;
inline bool CAttribute_WorldItemPlacement::has_ang_x() const {
  return _has_bit(4);
}
inline void CAttribute_WorldItemPlacement::clear_ang_x() {
  ang_x_ = 0;
  _clear_bit(4);
}
inline float CAttribute_WorldItemPlacement::ang_x() const {
  return ang_x_;
}
inline void CAttribute_WorldItemPlacement::set_ang_x(float value) {
  _set_bit(4);
  ang_x_ = value;
}

// optional float ang_y = 6;
inline bool CAttribute_WorldItemPlacement::has_ang_y() const {
  return _has_bit(5);
}
inline void CAttribute_WorldItemPlacement::clear_ang_y() {
  ang_y_ = 0;
  _clear_bit(5);
}
inline float CAttribute_WorldItemPlacement::ang_y() const {
  return ang_y_;
}
inline void CAttribute_WorldItemPlacement::set_ang_y(float value) {
  _set_bit(5);
  ang_y_ = value;
}

// optional float ang_z = 7;
inline bool CAttribute_WorldItemPlacement::has_ang_z() const {
  return _has_bit(6);
}
inline void CAttribute_WorldItemPlacement::clear_ang_z() {
  ang_z_ = 0;
  _clear_bit(6);
}
inline float CAttribute_WorldItemPlacement::ang_z() const {
  return ang_z_;
}
inline void CAttribute_WorldItemPlacement::set_ang_z(float value) {
  _set_bit(6);
  ang_z_ = value;
}

// -------------------------------------------------------------------

// CGCMsg_WorldItemPlacement_Update

// optional uint64 original_item_id = 1;
inline bool CGCMsg_WorldItemPlacement_Update::has_original_item_id() const {
  return _has_bit(0);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_original_item_id() {
  original_item_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CGCMsg_WorldItemPlacement_Update::original_item_id() const {
  return original_item_id_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_original_item_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  original_item_id_ = value;
}

// optional float pos_x = 2;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_x() const {
  return _has_bit(1);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_x() {
  pos_x_ = 0;
  _clear_bit(1);
}
inline float CGCMsg_WorldItemPlacement_Update::pos_x() const {
  return pos_x_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_x(float value) {
  _set_bit(1);
  pos_x_ = value;
}

// optional float pos_y = 3;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_y() const {
  return _has_bit(2);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_y() {
  pos_y_ = 0;
  _clear_bit(2);
}
inline float CGCMsg_WorldItemPlacement_Update::pos_y() const {
  return pos_y_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_y(float value) {
  _set_bit(2);
  pos_y_ = value;
}

// optional float pos_z = 4;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_z() const {
  return _has_bit(3);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_z() {
  pos_z_ = 0;
  _clear_bit(3);
}
inline float CGCMsg_WorldItemPlacement_Update::pos_z() const {
  return pos_z_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_z(float value) {
  _set_bit(3);
  pos_z_ = value;
}

// optional float ang_x = 5;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_x() const {
  return _has_bit(4);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_x() {
  ang_x_ = 0;
  _clear_bit(4);
}
inline float CGCMsg_WorldItemPlacement_Update::ang_x() const {
  return ang_x_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_x(float value) {
  _set_bit(4);
  ang_x_ = value;
}

// optional float ang_y = 6;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_y() const {
  return _has_bit(5);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_y() {
  ang_y_ = 0;
  _clear_bit(5);
}
inline float CGCMsg_WorldItemPlacement_Update::ang_y() const {
  return ang_y_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_y(float value) {
  _set_bit(5);
  ang_y_ = value;
}

// optional float ang_z = 7;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_z() const {
  return _has_bit(6);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_z() {
  ang_z_ = 0;
  _clear_bit(6);
}
inline float CGCMsg_WorldItemPlacement_Update::ang_z() const {
  return ang_z_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_z(float value) {
  _set_bit(6);
  ang_z_ = value;
}

// optional bool force_remove_all = 8;
inline bool CGCMsg_WorldItemPlacement_Update::has_force_remove_all() const {
  return _has_bit(7);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_force_remove_all() {
  force_remove_all_ = false;
  _clear_bit(7);
}
inline bool CGCMsg_WorldItemPlacement_Update::force_remove_all() const {
  return force_remove_all_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_force_remove_all(bool value) {
  _set_bit(7);
  force_remove_all_ = value;
}

// optional string attrib_name = 9;
inline bool CGCMsg_WorldItemPlacement_Update::has_attrib_name() const {
  return _has_bit(8);
}
inline void CGCMsg_WorldItemPlacement_Update::clear_attrib_name() {
  if (attrib_name_ != &_default_attrib_name_) {
    attrib_name_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CGCMsg_WorldItemPlacement_Update::attrib_name() const {
  return *attrib_name_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const ::std::string& value) {
  _set_bit(8);
  if (attrib_name_ == &_default_attrib_name_) {
    attrib_name_ = new ::std::string;
  }
  attrib_name_->assign(value);
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const char* value) {
  _set_bit(8);
  if (attrib_name_ == &_default_attrib_name_) {
    attrib_name_ = new ::std::string;
  }
  attrib_name_->assign(value);
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const char* value, size_t size) {
  _set_bit(8);
  if (attrib_name_ == &_default_attrib_name_) {
    attrib_name_ = new ::std::string;
  }
  attrib_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsg_WorldItemPlacement_Update::mutable_attrib_name() {
  _set_bit(8);
  if (attrib_name_ == &_default_attrib_name_) {
    attrib_name_ = new ::std::string;
  }
  return attrib_name_;
}

// -------------------------------------------------------------------

// CMsgGCNotification

// optional uint64 notification_id = 1;
inline bool CMsgGCNotification::has_notification_id() const {
  return _has_bit(0);
}
inline void CMsgGCNotification::clear_notification_id() {
  notification_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgGCNotification::notification_id() const {
  return notification_id_;
}
inline void CMsgGCNotification::set_notification_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  notification_id_ = value;
}

// optional uint32 account_id = 2;
inline bool CMsgGCNotification::has_account_id() const {
  return _has_bit(1);
}
inline void CMsgGCNotification::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgGCNotification::account_id() const {
  return account_id_;
}
inline void CMsgGCNotification::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  account_id_ = value;
}

// optional fixed32 expiration_time = 3;
inline bool CMsgGCNotification::has_expiration_time() const {
  return _has_bit(2);
}
inline void CMsgGCNotification::clear_expiration_time() {
  expiration_time_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgGCNotification::expiration_time() const {
  return expiration_time_;
}
inline void CMsgGCNotification::set_expiration_time(::google::protobuf::uint32 value) {
  _set_bit(2);
  expiration_time_ = value;
}

// optional .CMsgGCNotification.NotificationType type = 4 [default = NOTIFICATION_REPORTED_PLAYER_BANNED];
inline bool CMsgGCNotification::has_type() const {
  return _has_bit(3);
}
inline void CMsgGCNotification::clear_type() {
  type_ = 0;
  _clear_bit(3);
}
inline ::CMsgGCNotification_NotificationType CMsgGCNotification::type() const {
  return static_cast< ::CMsgGCNotification_NotificationType >(type_);
}
inline void CMsgGCNotification::set_type(::CMsgGCNotification_NotificationType value) {
  GOOGLE_DCHECK(::CMsgGCNotification_NotificationType_IsValid(value));
  _set_bit(3);
  type_ = value;
}

// optional string notification_string = 5;
inline bool CMsgGCNotification::has_notification_string() const {
  return _has_bit(4);
}
inline void CMsgGCNotification::clear_notification_string() {
  if (notification_string_ != &_default_notification_string_) {
    notification_string_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMsgGCNotification::notification_string() const {
  return *notification_string_;
}
inline void CMsgGCNotification::set_notification_string(const ::std::string& value) {
  _set_bit(4);
  if (notification_string_ == &_default_notification_string_) {
    notification_string_ = new ::std::string;
  }
  notification_string_->assign(value);
}
inline void CMsgGCNotification::set_notification_string(const char* value) {
  _set_bit(4);
  if (notification_string_ == &_default_notification_string_) {
    notification_string_ = new ::std::string;
  }
  notification_string_->assign(value);
}
inline void CMsgGCNotification::set_notification_string(const char* value, size_t size) {
  _set_bit(4);
  if (notification_string_ == &_default_notification_string_) {
    notification_string_ = new ::std::string;
  }
  notification_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCNotification::mutable_notification_string() {
  _set_bit(4);
  if (notification_string_ == &_default_notification_string_) {
    notification_string_ = new ::std::string;
  }
  return notification_string_;
}

// -------------------------------------------------------------------

// CMsgGCNotificationQueue

// repeated .CMsgGCNotification notifications = 1;
inline int CMsgGCNotificationQueue::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationQueue::clear_notifications() {
  notifications_.Clear();
}
inline const ::CMsgGCNotification& CMsgGCNotificationQueue::notifications(int index) const {
  return notifications_.Get(index);
}
inline ::CMsgGCNotification* CMsgGCNotificationQueue::mutable_notifications(int index) {
  return notifications_.Mutable(index);
}
inline ::CMsgGCNotification* CMsgGCNotificationQueue::add_notifications() {
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >&
CMsgGCNotificationQueue::notifications() const {
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >*
CMsgGCNotificationQueue::mutable_notifications() {
  return &notifications_;
}

// -------------------------------------------------------------------

// CMsgNotificationAcknowledge

// optional uint32 account_id = 1;
inline bool CMsgNotificationAcknowledge::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgNotificationAcknowledge::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgNotificationAcknowledge::account_id() const {
  return account_id_;
}
inline void CMsgNotificationAcknowledge::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional uint64 notification_id = 2;
inline bool CMsgNotificationAcknowledge::has_notification_id() const {
  return _has_bit(1);
}
inline void CMsgNotificationAcknowledge::clear_notification_id() {
  notification_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgNotificationAcknowledge::notification_id() const {
  return notification_id_;
}
inline void CMsgNotificationAcknowledge::set_notification_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  notification_id_ = value;
}

// -------------------------------------------------------------------

// CMsgNotificationAcknowledgeReply

// -------------------------------------------------------------------

// CMsgGC_Match_Result_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGC_Match_Result_Player::has_steam_id() const {
  return _has_bit(0);
}
inline void CMsgGC_Match_Result_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result_Player::steam_id() const {
  return steam_id_;
}
inline void CMsgGC_Match_Result_Player::set_steam_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  steam_id_ = value;
}

// optional uint64 party_id = 2;
inline bool CMsgGC_Match_Result_Player::has_party_id() const {
  return _has_bit(1);
}
inline void CMsgGC_Match_Result_Player::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result_Player::party_id() const {
  return party_id_;
}
inline void CMsgGC_Match_Result_Player::set_party_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  party_id_ = value;
}

// optional uint32 team = 3;
inline bool CMsgGC_Match_Result_Player::has_team() const {
  return _has_bit(2);
}
inline void CMsgGC_Match_Result_Player::clear_team() {
  team_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::team() const {
  return team_;
}
inline void CMsgGC_Match_Result_Player::set_team(::google::protobuf::uint32 value) {
  _set_bit(2);
  team_ = value;
}

// optional uint32 score = 4;
inline bool CMsgGC_Match_Result_Player::has_score() const {
  return _has_bit(3);
}
inline void CMsgGC_Match_Result_Player::clear_score() {
  score_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::score() const {
  return score_;
}
inline void CMsgGC_Match_Result_Player::set_score(::google::protobuf::uint32 value) {
  _set_bit(3);
  score_ = value;
}

// optional uint32 ping = 5;
inline bool CMsgGC_Match_Result_Player::has_ping() const {
  return _has_bit(4);
}
inline void CMsgGC_Match_Result_Player::clear_ping() {
  ping_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::ping() const {
  return ping_;
}
inline void CMsgGC_Match_Result_Player::set_ping(::google::protobuf::uint32 value) {
  _set_bit(4);
  ping_ = value;
}

// optional uint32 flags = 6;
inline bool CMsgGC_Match_Result_Player::has_flags() const {
  return _has_bit(5);
}
inline void CMsgGC_Match_Result_Player::clear_flags() {
  flags_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::flags() const {
  return flags_;
}
inline void CMsgGC_Match_Result_Player::set_flags(::google::protobuf::uint32 value) {
  _set_bit(5);
  flags_ = value;
}

// optional uint32 skillrating = 7;
inline bool CMsgGC_Match_Result_Player::has_skillrating() const {
  return _has_bit(6);
}
inline void CMsgGC_Match_Result_Player::clear_skillrating() {
  skillrating_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::skillrating() const {
  return skillrating_;
}
inline void CMsgGC_Match_Result_Player::set_skillrating(::google::protobuf::uint32 value) {
  _set_bit(6);
  skillrating_ = value;
}

// optional int32 skillrating_change = 8;
inline bool CMsgGC_Match_Result_Player::has_skillrating_change() const {
  return _has_bit(7);
}
inline void CMsgGC_Match_Result_Player::clear_skillrating_change() {
  skillrating_change_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CMsgGC_Match_Result_Player::skillrating_change() const {
  return skillrating_change_;
}
inline void CMsgGC_Match_Result_Player::set_skillrating_change(::google::protobuf::int32 value) {
  _set_bit(7);
  skillrating_change_ = value;
}

// optional uint32 rank = 9;
inline bool CMsgGC_Match_Result_Player::has_rank() const {
  return _has_bit(8);
}
inline void CMsgGC_Match_Result_Player::clear_rank() {
  rank_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::rank() const {
  return rank_;
}
inline void CMsgGC_Match_Result_Player::set_rank(::google::protobuf::uint32 value) {
  _set_bit(8);
  rank_ = value;
}

// optional uint32 classes_played = 10;
inline bool CMsgGC_Match_Result_Player::has_classes_played() const {
  return _has_bit(9);
}
inline void CMsgGC_Match_Result_Player::clear_classes_played() {
  classes_played_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::classes_played() const {
  return classes_played_;
}
inline void CMsgGC_Match_Result_Player::set_classes_played(::google::protobuf::uint32 value) {
  _set_bit(9);
  classes_played_ = value;
}

// optional uint32 kills = 11;
inline bool CMsgGC_Match_Result_Player::has_kills() const {
  return _has_bit(10);
}
inline void CMsgGC_Match_Result_Player::clear_kills() {
  kills_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::kills() const {
  return kills_;
}
inline void CMsgGC_Match_Result_Player::set_kills(::google::protobuf::uint32 value) {
  _set_bit(10);
  kills_ = value;
}

// optional uint32 deaths = 12;
inline bool CMsgGC_Match_Result_Player::has_deaths() const {
  return _has_bit(11);
}
inline void CMsgGC_Match_Result_Player::clear_deaths() {
  deaths_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::deaths() const {
  return deaths_;
}
inline void CMsgGC_Match_Result_Player::set_deaths(::google::protobuf::uint32 value) {
  _set_bit(11);
  deaths_ = value;
}

// optional uint32 damage = 13;
inline bool CMsgGC_Match_Result_Player::has_damage() const {
  return _has_bit(12);
}
inline void CMsgGC_Match_Result_Player::clear_damage() {
  damage_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::damage() const {
  return damage_;
}
inline void CMsgGC_Match_Result_Player::set_damage(::google::protobuf::uint32 value) {
  _set_bit(12);
  damage_ = value;
}

// optional uint32 healing = 14;
inline bool CMsgGC_Match_Result_Player::has_healing() const {
  return _has_bit(13);
}
inline void CMsgGC_Match_Result_Player::clear_healing() {
  healing_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::healing() const {
  return healing_;
}
inline void CMsgGC_Match_Result_Player::set_healing(::google::protobuf::uint32 value) {
  _set_bit(13);
  healing_ = value;
}

// optional uint32 support = 15;
inline bool CMsgGC_Match_Result_Player::has_support() const {
  return _has_bit(14);
}
inline void CMsgGC_Match_Result_Player::clear_support() {
  support_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::support() const {
  return support_;
}
inline void CMsgGC_Match_Result_Player::set_support(::google::protobuf::uint32 value) {
  _set_bit(14);
  support_ = value;
}

// optional uint32 score_medal = 16;
inline bool CMsgGC_Match_Result_Player::has_score_medal() const {
  return _has_bit(15);
}
inline void CMsgGC_Match_Result_Player::clear_score_medal() {
  score_medal_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::score_medal() const {
  return score_medal_;
}
inline void CMsgGC_Match_Result_Player::set_score_medal(::google::protobuf::uint32 value) {
  _set_bit(15);
  score_medal_ = value;
}

// optional uint32 kills_medal = 17;
inline bool CMsgGC_Match_Result_Player::has_kills_medal() const {
  return _has_bit(16);
}
inline void CMsgGC_Match_Result_Player::clear_kills_medal() {
  kills_medal_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::kills_medal() const {
  return kills_medal_;
}
inline void CMsgGC_Match_Result_Player::set_kills_medal(::google::protobuf::uint32 value) {
  _set_bit(16);
  kills_medal_ = value;
}

// optional uint32 damage_medal = 18;
inline bool CMsgGC_Match_Result_Player::has_damage_medal() const {
  return _has_bit(17);
}
inline void CMsgGC_Match_Result_Player::clear_damage_medal() {
  damage_medal_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::damage_medal() const {
  return damage_medal_;
}
inline void CMsgGC_Match_Result_Player::set_damage_medal(::google::protobuf::uint32 value) {
  _set_bit(17);
  damage_medal_ = value;
}

// optional uint32 healing_medal = 19;
inline bool CMsgGC_Match_Result_Player::has_healing_medal() const {
  return _has_bit(18);
}
inline void CMsgGC_Match_Result_Player::clear_healing_medal() {
  healing_medal_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::healing_medal() const {
  return healing_medal_;
}
inline void CMsgGC_Match_Result_Player::set_healing_medal(::google::protobuf::uint32 value) {
  _set_bit(18);
  healing_medal_ = value;
}

// optional uint32 support_medal = 20;
inline bool CMsgGC_Match_Result_Player::has_support_medal() const {
  return _has_bit(19);
}
inline void CMsgGC_Match_Result_Player::clear_support_medal() {
  support_medal_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::support_medal() const {
  return support_medal_;
}
inline void CMsgGC_Match_Result_Player::set_support_medal(::google::protobuf::uint32 value) {
  _set_bit(19);
  support_medal_ = value;
}

// optional uint32 leave_time = 22;
inline bool CMsgGC_Match_Result_Player::has_leave_time() const {
  return _has_bit(20);
}
inline void CMsgGC_Match_Result_Player::clear_leave_time() {
  leave_time_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::leave_time() const {
  return leave_time_;
}
inline void CMsgGC_Match_Result_Player::set_leave_time(::google::protobuf::uint32 value) {
  _set_bit(20);
  leave_time_ = value;
}

// optional .TFMatchLeaveReason leave_reason = 23 [default = TFMatchLeaveReason_UNSPECIFIED];
inline bool CMsgGC_Match_Result_Player::has_leave_reason() const {
  return _has_bit(21);
}
inline void CMsgGC_Match_Result_Player::clear_leave_reason() {
  leave_reason_ = 0;
  _clear_bit(21);
}
inline TFMatchLeaveReason CMsgGC_Match_Result_Player::leave_reason() const {
  return static_cast< TFMatchLeaveReason >(leave_reason_);
}
inline void CMsgGC_Match_Result_Player::set_leave_reason(TFMatchLeaveReason value) {
  GOOGLE_DCHECK(TFMatchLeaveReason_IsValid(value));
  _set_bit(21);
  leave_reason_ = value;
}

// optional uint32 connect_time = 24;
inline bool CMsgGC_Match_Result_Player::has_connect_time() const {
  return _has_bit(22);
}
inline void CMsgGC_Match_Result_Player::clear_connect_time() {
  connect_time_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::connect_time() const {
  return connect_time_;
}
inline void CMsgGC_Match_Result_Player::set_connect_time(::google::protobuf::uint32 value) {
  _set_bit(22);
  connect_time_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Match_Result

// optional uint64 match_id = 1;
inline bool CMsgGC_Match_Result::has_match_id() const {
  return _has_bit(0);
}
inline void CMsgGC_Match_Result::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result::match_id() const {
  return match_id_;
}
inline void CMsgGC_Match_Result::set_match_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  match_id_ = value;
}

// optional int32 match_group = 2;
inline bool CMsgGC_Match_Result::has_match_group() const {
  return _has_bit(1);
}
inline void CMsgGC_Match_Result::clear_match_group() {
  match_group_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMsgGC_Match_Result::match_group() const {
  return match_group_;
}
inline void CMsgGC_Match_Result::set_match_group(::google::protobuf::int32 value) {
  _set_bit(1);
  match_group_ = value;
}

// optional .CMsgGC_Match_Result.Status status = 3 [default = MATCH_SUCCEEDED];
inline bool CMsgGC_Match_Result::has_status() const {
  return _has_bit(2);
}
inline void CMsgGC_Match_Result::clear_status() {
  status_ = 0;
  _clear_bit(2);
}
inline ::CMsgGC_Match_Result_Status CMsgGC_Match_Result::status() const {
  return static_cast< ::CMsgGC_Match_Result_Status >(status_);
}
inline void CMsgGC_Match_Result::set_status(::CMsgGC_Match_Result_Status value) {
  GOOGLE_DCHECK(::CMsgGC_Match_Result_Status_IsValid(value));
  _set_bit(2);
  status_ = value;
}

// optional uint32 duration = 4;
inline bool CMsgGC_Match_Result::has_duration() const {
  return _has_bit(3);
}
inline void CMsgGC_Match_Result::clear_duration() {
  duration_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::duration() const {
  return duration_;
}
inline void CMsgGC_Match_Result::set_duration(::google::protobuf::uint32 value) {
  _set_bit(3);
  duration_ = value;
}

// optional uint32 red_score = 5;
inline bool CMsgGC_Match_Result::has_red_score() const {
  return _has_bit(4);
}
inline void CMsgGC_Match_Result::clear_red_score() {
  red_score_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::red_score() const {
  return red_score_;
}
inline void CMsgGC_Match_Result::set_red_score(::google::protobuf::uint32 value) {
  _set_bit(4);
  red_score_ = value;
}

// optional uint32 blue_score = 6;
inline bool CMsgGC_Match_Result::has_blue_score() const {
  return _has_bit(5);
}
inline void CMsgGC_Match_Result::clear_blue_score() {
  blue_score_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::blue_score() const {
  return blue_score_;
}
inline void CMsgGC_Match_Result::set_blue_score(::google::protobuf::uint32 value) {
  _set_bit(5);
  blue_score_ = value;
}

// optional uint32 winning_team = 7;
inline bool CMsgGC_Match_Result::has_winning_team() const {
  return _has_bit(6);
}
inline void CMsgGC_Match_Result::clear_winning_team() {
  winning_team_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::winning_team() const {
  return winning_team_;
}
inline void CMsgGC_Match_Result::set_winning_team(::google::protobuf::uint32 value) {
  _set_bit(6);
  winning_team_ = value;
}

// optional uint32 map_index = 8;
inline bool CMsgGC_Match_Result::has_map_index() const {
  return _has_bit(7);
}
inline void CMsgGC_Match_Result::clear_map_index() {
  map_index_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::map_index() const {
  return map_index_;
}
inline void CMsgGC_Match_Result::set_map_index(::google::protobuf::uint32 value) {
  _set_bit(7);
  map_index_ = value;
}

// optional uint32 game_type = 9 [default = 0];
inline bool CMsgGC_Match_Result::has_game_type() const {
  return _has_bit(8);
}
inline void CMsgGC_Match_Result::clear_game_type() {
  game_type_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::game_type() const {
  return game_type_;
}
inline void CMsgGC_Match_Result::set_game_type(::google::protobuf::uint32 value) {
  _set_bit(8);
  game_type_ = value;
}

// repeated .CMsgGC_Match_Result.Player players = 10;
inline int CMsgGC_Match_Result::players_size() const {
  return players_.size();
}
inline void CMsgGC_Match_Result::clear_players() {
  players_.Clear();
}
inline const ::CMsgGC_Match_Result_Player& CMsgGC_Match_Result::players(int index) const {
  return players_.Get(index);
}
inline ::CMsgGC_Match_Result_Player* CMsgGC_Match_Result::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::CMsgGC_Match_Result_Player* CMsgGC_Match_Result::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >&
CMsgGC_Match_Result::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >*
CMsgGC_Match_Result::mutable_players() {
  return &players_;
}

// optional uint32 red_skillrating = 11;
inline bool CMsgGC_Match_Result::has_red_skillrating() const {
  return _has_bit(10);
}
inline void CMsgGC_Match_Result::clear_red_skillrating() {
  red_skillrating_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::red_skillrating() const {
  return red_skillrating_;
}
inline void CMsgGC_Match_Result::set_red_skillrating(::google::protobuf::uint32 value) {
  _set_bit(10);
  red_skillrating_ = value;
}

// optional uint32 blue_skillrating = 12;
inline bool CMsgGC_Match_Result::has_blue_skillrating() const {
  return _has_bit(11);
}
inline void CMsgGC_Match_Result::clear_blue_skillrating() {
  blue_skillrating_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::blue_skillrating() const {
  return blue_skillrating_;
}
inline void CMsgGC_Match_Result::set_blue_skillrating(::google::protobuf::uint32 value) {
  _set_bit(11);
  blue_skillrating_ = value;
}

// optional uint32 win_reason = 13;
inline bool CMsgGC_Match_Result::has_win_reason() const {
  return _has_bit(12);
}
inline void CMsgGC_Match_Result::clear_win_reason() {
  win_reason_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::win_reason() const {
  return win_reason_;
}
inline void CMsgGC_Match_Result::set_win_reason(::google::protobuf::uint32 value) {
  _set_bit(12);
  win_reason_ = value;
}

// optional uint32 flags = 14;
inline bool CMsgGC_Match_Result::has_flags() const {
  return _has_bit(13);
}
inline void CMsgGC_Match_Result::clear_flags() {
  flags_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::flags() const {
  return flags_;
}
inline void CMsgGC_Match_Result::set_flags(::google::protobuf::uint32 value) {
  _set_bit(13);
  flags_ = value;
}

// optional uint32 server_version = 15;
inline bool CMsgGC_Match_Result::has_server_version() const {
  return _has_bit(14);
}
inline void CMsgGC_Match_Result::clear_server_version() {
  server_version_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::server_version() const {
  return server_version_;
}
inline void CMsgGC_Match_Result::set_server_version(::google::protobuf::uint32 value) {
  _set_bit(14);
  server_version_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Match_ResultResponse

// -------------------------------------------------------------------

// CEconItemPreviewDataBlock

// optional .CSOEconItem econitem = 1;
inline bool CEconItemPreviewDataBlock::has_econitem() const {
  return _has_bit(0);
}
inline void CEconItemPreviewDataBlock::clear_econitem() {
  if (econitem_ != NULL) econitem_->::CSOEconItem::Clear();
  _clear_bit(0);
}
inline const ::CSOEconItem& CEconItemPreviewDataBlock::econitem() const {
  return econitem_ != NULL ? *econitem_ : *default_instance_->econitem_;
}
inline ::CSOEconItem* CEconItemPreviewDataBlock::mutable_econitem() {
  _set_bit(0);
  if (econitem_ == NULL) econitem_ = new ::CSOEconItem;
  return econitem_;
}

// -------------------------------------------------------------------

// CMsgGC_Client2GCEconPreviewDataBlockRequest

// optional uint64 param_s = 1;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_s() const {
  return _has_bit(0);
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_s() {
  param_s_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_s() const {
  return param_s_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_s(::google::protobuf::uint64 value) {
  _set_bit(0);
  param_s_ = value;
}

// optional uint64 param_a = 2;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_a() const {
  return _has_bit(1);
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_a() {
  param_a_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_a() const {
  return param_a_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_a(::google::protobuf::uint64 value) {
  _set_bit(1);
  param_a_ = value;
}

// optional uint64 param_d = 3;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_d() const {
  return _has_bit(2);
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_d() {
  param_d_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_d() const {
  return param_d_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_d(::google::protobuf::uint64 value) {
  _set_bit(2);
  param_d_ = value;
}

// optional uint64 param_m = 4;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_m() const {
  return _has_bit(3);
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_m() {
  param_m_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_m() const {
  return param_m_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_m(::google::protobuf::uint64 value) {
  _set_bit(3);
  param_m_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_Client2GCEconPreviewDataBlockResponse

// optional .CEconItemPreviewDataBlock iteminfo = 1;
inline bool CMsgGC_Client2GCEconPreviewDataBlockResponse::has_iteminfo() const {
  return _has_bit(0);
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CEconItemPreviewDataBlock::Clear();
  _clear_bit(0);
}
inline const ::CEconItemPreviewDataBlock& CMsgGC_Client2GCEconPreviewDataBlockResponse::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::CEconItemPreviewDataBlock* CMsgGC_Client2GCEconPreviewDataBlockResponse::mutable_iteminfo() {
  _set_bit(0);
  if (iteminfo_ == NULL) iteminfo_ = new ::CEconItemPreviewDataBlock;
  return iteminfo_;
}

// -------------------------------------------------------------------

// CSOTFLadderPlayerStats

// optional uint32 account_id = 1;
inline bool CSOTFLadderPlayerStats::has_account_id() const {
  return _has_bit(0);
}
inline void CSOTFLadderPlayerStats::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::account_id() const {
  return account_id_;
}
inline void CSOTFLadderPlayerStats::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional int32 match_group = 2;
inline bool CSOTFLadderPlayerStats::has_match_group() const {
  return _has_bit(1);
}
inline void CSOTFLadderPlayerStats::clear_match_group() {
  match_group_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CSOTFLadderPlayerStats::match_group() const {
  return match_group_;
}
inline void CSOTFLadderPlayerStats::set_match_group(::google::protobuf::int32 value) {
  _set_bit(1);
  match_group_ = value;
}

// optional uint32 season_id = 3;
inline bool CSOTFLadderPlayerStats::has_season_id() const {
  return _has_bit(2);
}
inline void CSOTFLadderPlayerStats::clear_season_id() {
  season_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::season_id() const {
  return season_id_;
}
inline void CSOTFLadderPlayerStats::set_season_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  season_id_ = value;
}

// optional uint32 rating = 4;
inline bool CSOTFLadderPlayerStats::has_rating() const {
  return _has_bit(3);
}
inline void CSOTFLadderPlayerStats::clear_rating() {
  rating_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::rating() const {
  return rating_;
}
inline void CSOTFLadderPlayerStats::set_rating(::google::protobuf::uint32 value) {
  _set_bit(3);
  rating_ = value;
}

// optional int32 last_rating_change = 5;
inline bool CSOTFLadderPlayerStats::has_last_rating_change() const {
  return _has_bit(4);
}
inline void CSOTFLadderPlayerStats::clear_last_rating_change() {
  last_rating_change_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CSOTFLadderPlayerStats::last_rating_change() const {
  return last_rating_change_;
}
inline void CSOTFLadderPlayerStats::set_last_rating_change(::google::protobuf::int32 value) {
  _set_bit(4);
  last_rating_change_ = value;
}

// optional uint32 rank = 6;
inline bool CSOTFLadderPlayerStats::has_rank() const {
  return _has_bit(5);
}
inline void CSOTFLadderPlayerStats::clear_rank() {
  rank_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::rank() const {
  return rank_;
}
inline void CSOTFLadderPlayerStats::set_rank(::google::protobuf::uint32 value) {
  _set_bit(5);
  rank_ = value;
}

// optional uint32 highest_rank = 7;
inline bool CSOTFLadderPlayerStats::has_highest_rank() const {
  return _has_bit(6);
}
inline void CSOTFLadderPlayerStats::clear_highest_rank() {
  highest_rank_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::highest_rank() const {
  return highest_rank_;
}
inline void CSOTFLadderPlayerStats::set_highest_rank(::google::protobuf::uint32 value) {
  _set_bit(6);
  highest_rank_ = value;
}

// optional uint32 experience = 8;
inline bool CSOTFLadderPlayerStats::has_experience() const {
  return _has_bit(7);
}
inline void CSOTFLadderPlayerStats::clear_experience() {
  experience_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::experience() const {
  return experience_;
}
inline void CSOTFLadderPlayerStats::set_experience(::google::protobuf::uint32 value) {
  _set_bit(7);
  experience_ = value;
}

// optional uint32 games = 9;
inline bool CSOTFLadderPlayerStats::has_games() const {
  return _has_bit(8);
}
inline void CSOTFLadderPlayerStats::clear_games() {
  games_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::games() const {
  return games_;
}
inline void CSOTFLadderPlayerStats::set_games(::google::protobuf::uint32 value) {
  _set_bit(8);
  games_ = value;
}

// optional uint32 score = 10;
inline bool CSOTFLadderPlayerStats::has_score() const {
  return _has_bit(9);
}
inline void CSOTFLadderPlayerStats::clear_score() {
  score_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score() const {
  return score_;
}
inline void CSOTFLadderPlayerStats::set_score(::google::protobuf::uint32 value) {
  _set_bit(9);
  score_ = value;
}

// optional uint32 kills = 11;
inline bool CSOTFLadderPlayerStats::has_kills() const {
  return _has_bit(10);
}
inline void CSOTFLadderPlayerStats::clear_kills() {
  kills_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills() const {
  return kills_;
}
inline void CSOTFLadderPlayerStats::set_kills(::google::protobuf::uint32 value) {
  _set_bit(10);
  kills_ = value;
}

// optional uint32 deaths = 12;
inline bool CSOTFLadderPlayerStats::has_deaths() const {
  return _has_bit(11);
}
inline void CSOTFLadderPlayerStats::clear_deaths() {
  deaths_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::deaths() const {
  return deaths_;
}
inline void CSOTFLadderPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  _set_bit(11);
  deaths_ = value;
}

// optional uint32 damage = 13;
inline bool CSOTFLadderPlayerStats::has_damage() const {
  return _has_bit(12);
}
inline void CSOTFLadderPlayerStats::clear_damage() {
  damage_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage() const {
  return damage_;
}
inline void CSOTFLadderPlayerStats::set_damage(::google::protobuf::uint32 value) {
  _set_bit(12);
  damage_ = value;
}

// optional uint32 healing = 14;
inline bool CSOTFLadderPlayerStats::has_healing() const {
  return _has_bit(13);
}
inline void CSOTFLadderPlayerStats::clear_healing() {
  healing_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing() const {
  return healing_;
}
inline void CSOTFLadderPlayerStats::set_healing(::google::protobuf::uint32 value) {
  _set_bit(13);
  healing_ = value;
}

// optional uint32 support = 15;
inline bool CSOTFLadderPlayerStats::has_support() const {
  return _has_bit(14);
}
inline void CSOTFLadderPlayerStats::clear_support() {
  support_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support() const {
  return support_;
}
inline void CSOTFLadderPlayerStats::set_support(::google::protobuf::uint32 value) {
  _set_bit(14);
  support_ = value;
}

// optional uint32 score_bronze = 16;
inline bool CSOTFLadderPlayerStats::has_score_bronze() const {
  return _has_bit(15);
}
inline void CSOTFLadderPlayerStats::clear_score_bronze() {
  score_bronze_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_bronze() const {
  return score_bronze_;
}
inline void CSOTFLadderPlayerStats::set_score_bronze(::google::protobuf::uint32 value) {
  _set_bit(15);
  score_bronze_ = value;
}

// optional uint32 score_silver = 17;
inline bool CSOTFLadderPlayerStats::has_score_silver() const {
  return _has_bit(16);
}
inline void CSOTFLadderPlayerStats::clear_score_silver() {
  score_silver_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_silver() const {
  return score_silver_;
}
inline void CSOTFLadderPlayerStats::set_score_silver(::google::protobuf::uint32 value) {
  _set_bit(16);
  score_silver_ = value;
}

// optional uint32 score_gold = 18;
inline bool CSOTFLadderPlayerStats::has_score_gold() const {
  return _has_bit(17);
}
inline void CSOTFLadderPlayerStats::clear_score_gold() {
  score_gold_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_gold() const {
  return score_gold_;
}
inline void CSOTFLadderPlayerStats::set_score_gold(::google::protobuf::uint32 value) {
  _set_bit(17);
  score_gold_ = value;
}

// optional uint32 kills_bronze = 19;
inline bool CSOTFLadderPlayerStats::has_kills_bronze() const {
  return _has_bit(18);
}
inline void CSOTFLadderPlayerStats::clear_kills_bronze() {
  kills_bronze_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_bronze() const {
  return kills_bronze_;
}
inline void CSOTFLadderPlayerStats::set_kills_bronze(::google::protobuf::uint32 value) {
  _set_bit(18);
  kills_bronze_ = value;
}

// optional uint32 kills_silver = 20;
inline bool CSOTFLadderPlayerStats::has_kills_silver() const {
  return _has_bit(19);
}
inline void CSOTFLadderPlayerStats::clear_kills_silver() {
  kills_silver_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_silver() const {
  return kills_silver_;
}
inline void CSOTFLadderPlayerStats::set_kills_silver(::google::protobuf::uint32 value) {
  _set_bit(19);
  kills_silver_ = value;
}

// optional uint32 kills_gold = 21;
inline bool CSOTFLadderPlayerStats::has_kills_gold() const {
  return _has_bit(20);
}
inline void CSOTFLadderPlayerStats::clear_kills_gold() {
  kills_gold_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_gold() const {
  return kills_gold_;
}
inline void CSOTFLadderPlayerStats::set_kills_gold(::google::protobuf::uint32 value) {
  _set_bit(20);
  kills_gold_ = value;
}

// optional uint32 damage_bronze = 22;
inline bool CSOTFLadderPlayerStats::has_damage_bronze() const {
  return _has_bit(21);
}
inline void CSOTFLadderPlayerStats::clear_damage_bronze() {
  damage_bronze_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_bronze() const {
  return damage_bronze_;
}
inline void CSOTFLadderPlayerStats::set_damage_bronze(::google::protobuf::uint32 value) {
  _set_bit(21);
  damage_bronze_ = value;
}

// optional uint32 damage_silver = 23;
inline bool CSOTFLadderPlayerStats::has_damage_silver() const {
  return _has_bit(22);
}
inline void CSOTFLadderPlayerStats::clear_damage_silver() {
  damage_silver_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_silver() const {
  return damage_silver_;
}
inline void CSOTFLadderPlayerStats::set_damage_silver(::google::protobuf::uint32 value) {
  _set_bit(22);
  damage_silver_ = value;
}

// optional uint32 damage_gold = 24;
inline bool CSOTFLadderPlayerStats::has_damage_gold() const {
  return _has_bit(23);
}
inline void CSOTFLadderPlayerStats::clear_damage_gold() {
  damage_gold_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_gold() const {
  return damage_gold_;
}
inline void CSOTFLadderPlayerStats::set_damage_gold(::google::protobuf::uint32 value) {
  _set_bit(23);
  damage_gold_ = value;
}

// optional uint32 healing_bronze = 25;
inline bool CSOTFLadderPlayerStats::has_healing_bronze() const {
  return _has_bit(24);
}
inline void CSOTFLadderPlayerStats::clear_healing_bronze() {
  healing_bronze_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_bronze() const {
  return healing_bronze_;
}
inline void CSOTFLadderPlayerStats::set_healing_bronze(::google::protobuf::uint32 value) {
  _set_bit(24);
  healing_bronze_ = value;
}

// optional uint32 healing_silver = 26;
inline bool CSOTFLadderPlayerStats::has_healing_silver() const {
  return _has_bit(25);
}
inline void CSOTFLadderPlayerStats::clear_healing_silver() {
  healing_silver_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_silver() const {
  return healing_silver_;
}
inline void CSOTFLadderPlayerStats::set_healing_silver(::google::protobuf::uint32 value) {
  _set_bit(25);
  healing_silver_ = value;
}

// optional uint32 healing_gold = 27;
inline bool CSOTFLadderPlayerStats::has_healing_gold() const {
  return _has_bit(26);
}
inline void CSOTFLadderPlayerStats::clear_healing_gold() {
  healing_gold_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_gold() const {
  return healing_gold_;
}
inline void CSOTFLadderPlayerStats::set_healing_gold(::google::protobuf::uint32 value) {
  _set_bit(26);
  healing_gold_ = value;
}

// optional uint32 support_bronze = 28;
inline bool CSOTFLadderPlayerStats::has_support_bronze() const {
  return _has_bit(27);
}
inline void CSOTFLadderPlayerStats::clear_support_bronze() {
  support_bronze_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_bronze() const {
  return support_bronze_;
}
inline void CSOTFLadderPlayerStats::set_support_bronze(::google::protobuf::uint32 value) {
  _set_bit(27);
  support_bronze_ = value;
}

// optional uint32 support_silver = 29;
inline bool CSOTFLadderPlayerStats::has_support_silver() const {
  return _has_bit(28);
}
inline void CSOTFLadderPlayerStats::clear_support_silver() {
  support_silver_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_silver() const {
  return support_silver_;
}
inline void CSOTFLadderPlayerStats::set_support_silver(::google::protobuf::uint32 value) {
  _set_bit(28);
  support_silver_ = value;
}

// optional uint32 support_gold = 30;
inline bool CSOTFLadderPlayerStats::has_support_gold() const {
  return _has_bit(29);
}
inline void CSOTFLadderPlayerStats::clear_support_gold() {
  support_gold_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_gold() const {
  return support_gold_;
}
inline void CSOTFLadderPlayerStats::set_support_gold(::google::protobuf::uint32 value) {
  _set_bit(29);
  support_gold_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_TFVoteKickPlayerRequest

// optional uint32 account_id = 1;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_account_id() const {
  return _has_bit(0);
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_TFVoteKickPlayerRequest::account_id() const {
  return account_id_;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_VoteKickPlayerRequestResponse

// optional bool allowed = 1;
inline bool CMsgGC_VoteKickPlayerRequestResponse::has_allowed() const {
  return _has_bit(0);
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_allowed() {
  allowed_ = false;
  _clear_bit(0);
}
inline bool CMsgGC_VoteKickPlayerRequestResponse::allowed() const {
  return allowed_;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_allowed(bool value) {
  _set_bit(0);
  allowed_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry

// optional uint32 rank = 1;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_rank() const {
  return _has_bit(0);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_rank() {
  rank_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::rank() const {
  return rank_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_rank(::google::protobuf::uint32 value) {
  _set_bit(0);
  rank_ = value;
}

// optional uint32 records = 2;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_records() const {
  return _has_bit(1);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_records() {
  records_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::records() const {
  return records_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_records(::google::protobuf::uint32 value) {
  _set_bit(1);
  records_ = value;
}

// optional uint32 avg_score = 3;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_score() const {
  return _has_bit(2);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_score() {
  avg_score_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_score() const {
  return avg_score_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_score(::google::protobuf::uint32 value) {
  _set_bit(2);
  avg_score_ = value;
}

// optional uint32 stdev_score = 4;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_score() const {
  return _has_bit(3);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_score() {
  stdev_score_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_score() const {
  return stdev_score_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_score(::google::protobuf::uint32 value) {
  _set_bit(3);
  stdev_score_ = value;
}

// optional uint32 avg_kills = 5;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_kills() const {
  return _has_bit(4);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_kills() {
  avg_kills_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_kills() const {
  return avg_kills_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_kills(::google::protobuf::uint32 value) {
  _set_bit(4);
  avg_kills_ = value;
}

// optional uint32 stdev_kills = 6;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_kills() const {
  return _has_bit(5);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_kills() {
  stdev_kills_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_kills() const {
  return stdev_kills_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_kills(::google::protobuf::uint32 value) {
  _set_bit(5);
  stdev_kills_ = value;
}

// optional uint32 avg_damage = 7;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_damage() const {
  return _has_bit(6);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_damage() {
  avg_damage_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_damage() const {
  return avg_damage_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_damage(::google::protobuf::uint32 value) {
  _set_bit(6);
  avg_damage_ = value;
}

// optional uint32 stdev_damage = 8;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_damage() const {
  return _has_bit(7);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_damage() {
  stdev_damage_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_damage() const {
  return stdev_damage_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_damage(::google::protobuf::uint32 value) {
  _set_bit(7);
  stdev_damage_ = value;
}

// optional uint32 avg_healing = 9;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_healing() const {
  return _has_bit(8);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_healing() {
  avg_healing_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_healing() const {
  return avg_healing_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_healing(::google::protobuf::uint32 value) {
  _set_bit(8);
  avg_healing_ = value;
}

// optional uint32 stdev_healing = 10;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_healing() const {
  return _has_bit(9);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_healing() {
  stdev_healing_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_healing() const {
  return stdev_healing_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_healing(::google::protobuf::uint32 value) {
  _set_bit(9);
  stdev_healing_ = value;
}

// optional uint32 avg_support = 11;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_support() const {
  return _has_bit(10);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_support() {
  avg_support_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_support() const {
  return avg_support_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_support(::google::protobuf::uint32 value) {
  _set_bit(10);
  avg_support_ = value;
}

// optional uint32 stdev_support = 12;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_support() const {
  return _has_bit(11);
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_support() {
  stdev_support_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_support() const {
  return stdev_support_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_support(::google::protobuf::uint32 value) {
  _set_bit(11);
  stdev_support_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup_Response

// repeated .CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry rankdata = 1;
inline int CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata_size() const {
  return rankdata_.size();
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response::clear_rankdata() {
  rankdata_.Clear();
}
inline const ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata(int index) const {
  return rankdata_.Get(index);
}
inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* CMsgGC_DailyCompetitiveStatsRollup_Response::mutable_rankdata(int index) {
  return rankdata_.Mutable(index);
}
inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* CMsgGC_DailyCompetitiveStatsRollup_Response::add_rankdata() {
  return rankdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >&
CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata() const {
  return rankdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >*
CMsgGC_DailyCompetitiveStatsRollup_Response::mutable_rankdata() {
  return &rankdata_;
}

// -------------------------------------------------------------------

// CMsgGC_ReportPlayer

// optional uint32 account_id_target = 1;
inline bool CMsgGC_ReportPlayer::has_account_id_target() const {
  return _has_bit(0);
}
inline void CMsgGC_ReportPlayer::clear_account_id_target() {
  account_id_target_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgGC_ReportPlayer::account_id_target() const {
  return account_id_target_;
}
inline void CMsgGC_ReportPlayer::set_account_id_target(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_target_ = value;
}

// optional .CMsgGC_ReportPlayer.EReason reason = 2 [default = kReason_INVALID];
inline bool CMsgGC_ReportPlayer::has_reason() const {
  return _has_bit(1);
}
inline void CMsgGC_ReportPlayer::clear_reason() {
  reason_ = 0;
  _clear_bit(1);
}
inline ::CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer::reason() const {
  return static_cast< ::CMsgGC_ReportPlayer_EReason >(reason_);
}
inline void CMsgGC_ReportPlayer::set_reason(::CMsgGC_ReportPlayer_EReason value) {
  GOOGLE_DCHECK(::CMsgGC_ReportPlayer_EReason_IsValid(value));
  _set_bit(1);
  reason_ = value;
}

// -------------------------------------------------------------------

// CSOTFMatchResultPlayerStats

// optional uint64 match_id = 1;
inline bool CSOTFMatchResultPlayerStats::has_match_id() const {
  return _has_bit(0);
}
inline void CSOTFMatchResultPlayerStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CSOTFMatchResultPlayerStats::match_id() const {
  return match_id_;
}
inline void CSOTFMatchResultPlayerStats::set_match_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  match_id_ = value;
}

// optional uint32 account_id = 2;
inline bool CSOTFMatchResultPlayerStats::has_account_id() const {
  return _has_bit(1);
}
inline void CSOTFMatchResultPlayerStats::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::account_id() const {
  return account_id_;
}
inline void CSOTFMatchResultPlayerStats::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  account_id_ = value;
}

// optional int32 match_group = 3;
inline bool CSOTFMatchResultPlayerStats::has_match_group() const {
  return _has_bit(2);
}
inline void CSOTFMatchResultPlayerStats::clear_match_group() {
  match_group_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CSOTFMatchResultPlayerStats::match_group() const {
  return match_group_;
}
inline void CSOTFMatchResultPlayerStats::set_match_group(::google::protobuf::int32 value) {
  _set_bit(2);
  match_group_ = value;
}

// optional uint32 endtime = 4;
inline bool CSOTFMatchResultPlayerStats::has_endtime() const {
  return _has_bit(3);
}
inline void CSOTFMatchResultPlayerStats::clear_endtime() {
  endtime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::endtime() const {
  return endtime_;
}
inline void CSOTFMatchResultPlayerStats::set_endtime(::google::protobuf::uint32 value) {
  _set_bit(3);
  endtime_ = value;
}

// optional uint32 season_id = 5;
inline bool CSOTFMatchResultPlayerStats::has_season_id() const {
  return _has_bit(4);
}
inline void CSOTFMatchResultPlayerStats::clear_season_id() {
  season_id_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::season_id() const {
  return season_id_;
}
inline void CSOTFMatchResultPlayerStats::set_season_id(::google::protobuf::uint32 value) {
  _set_bit(4);
  season_id_ = value;
}

// optional uint32 status = 6;
inline bool CSOTFMatchResultPlayerStats::has_status() const {
  return _has_bit(5);
}
inline void CSOTFMatchResultPlayerStats::clear_status() {
  status_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::status() const {
  return status_;
}
inline void CSOTFMatchResultPlayerStats::set_status(::google::protobuf::uint32 value) {
  _set_bit(5);
  status_ = value;
}

// optional uint32 party_id = 7;
inline bool CSOTFMatchResultPlayerStats::has_party_id() const {
  return _has_bit(6);
}
inline void CSOTFMatchResultPlayerStats::clear_party_id() {
  party_id_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::party_id() const {
  return party_id_;
}
inline void CSOTFMatchResultPlayerStats::set_party_id(::google::protobuf::uint32 value) {
  _set_bit(6);
  party_id_ = value;
}

// optional uint32 team = 8;
inline bool CSOTFMatchResultPlayerStats::has_team() const {
  return _has_bit(7);
}
inline void CSOTFMatchResultPlayerStats::clear_team() {
  team_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::team() const {
  return team_;
}
inline void CSOTFMatchResultPlayerStats::set_team(::google::protobuf::uint32 value) {
  _set_bit(7);
  team_ = value;
}

// optional uint32 score = 9;
inline bool CSOTFMatchResultPlayerStats::has_score() const {
  return _has_bit(8);
}
inline void CSOTFMatchResultPlayerStats::clear_score() {
  score_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::score() const {
  return score_;
}
inline void CSOTFMatchResultPlayerStats::set_score(::google::protobuf::uint32 value) {
  _set_bit(8);
  score_ = value;
}

// optional uint32 ping = 10;
inline bool CSOTFMatchResultPlayerStats::has_ping() const {
  return _has_bit(9);
}
inline void CSOTFMatchResultPlayerStats::clear_ping() {
  ping_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::ping() const {
  return ping_;
}
inline void CSOTFMatchResultPlayerStats::set_ping(::google::protobuf::uint32 value) {
  _set_bit(9);
  ping_ = value;
}

// optional uint32 flags = 11;
inline bool CSOTFMatchResultPlayerStats::has_flags() const {
  return _has_bit(10);
}
inline void CSOTFMatchResultPlayerStats::clear_flags() {
  flags_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::flags() const {
  return flags_;
}
inline void CSOTFMatchResultPlayerStats::set_flags(::google::protobuf::uint32 value) {
  _set_bit(10);
  flags_ = value;
}

// optional uint32 skillrating = 12;
inline bool CSOTFMatchResultPlayerStats::has_skillrating() const {
  return _has_bit(11);
}
inline void CSOTFMatchResultPlayerStats::clear_skillrating() {
  skillrating_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::skillrating() const {
  return skillrating_;
}
inline void CSOTFMatchResultPlayerStats::set_skillrating(::google::protobuf::uint32 value) {
  _set_bit(11);
  skillrating_ = value;
}

// optional int32 skillrating_change = 13;
inline bool CSOTFMatchResultPlayerStats::has_skillrating_change() const {
  return _has_bit(12);
}
inline void CSOTFMatchResultPlayerStats::clear_skillrating_change() {
  skillrating_change_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 CSOTFMatchResultPlayerStats::skillrating_change() const {
  return skillrating_change_;
}
inline void CSOTFMatchResultPlayerStats::set_skillrating_change(::google::protobuf::int32 value) {
  _set_bit(12);
  skillrating_change_ = value;
}

// optional uint32 rank = 14;
inline bool CSOTFMatchResultPlayerStats::has_rank() const {
  return _has_bit(13);
}
inline void CSOTFMatchResultPlayerStats::clear_rank() {
  rank_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::rank() const {
  return rank_;
}
inline void CSOTFMatchResultPlayerStats::set_rank(::google::protobuf::uint32 value) {
  _set_bit(13);
  rank_ = value;
}

// optional uint32 classes_played = 15;
inline bool CSOTFMatchResultPlayerStats::has_classes_played() const {
  return _has_bit(14);
}
inline void CSOTFMatchResultPlayerStats::clear_classes_played() {
  classes_played_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::classes_played() const {
  return classes_played_;
}
inline void CSOTFMatchResultPlayerStats::set_classes_played(::google::protobuf::uint32 value) {
  _set_bit(14);
  classes_played_ = value;
}

// optional uint32 kills = 16;
inline bool CSOTFMatchResultPlayerStats::has_kills() const {
  return _has_bit(15);
}
inline void CSOTFMatchResultPlayerStats::clear_kills() {
  kills_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::kills() const {
  return kills_;
}
inline void CSOTFMatchResultPlayerStats::set_kills(::google::protobuf::uint32 value) {
  _set_bit(15);
  kills_ = value;
}

// optional uint32 deaths = 17;
inline bool CSOTFMatchResultPlayerStats::has_deaths() const {
  return _has_bit(16);
}
inline void CSOTFMatchResultPlayerStats::clear_deaths() {
  deaths_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::deaths() const {
  return deaths_;
}
inline void CSOTFMatchResultPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  _set_bit(16);
  deaths_ = value;
}

// optional uint32 damage = 18;
inline bool CSOTFMatchResultPlayerStats::has_damage() const {
  return _has_bit(17);
}
inline void CSOTFMatchResultPlayerStats::clear_damage() {
  damage_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::damage() const {
  return damage_;
}
inline void CSOTFMatchResultPlayerStats::set_damage(::google::protobuf::uint32 value) {
  _set_bit(17);
  damage_ = value;
}

// optional uint32 healing = 19;
inline bool CSOTFMatchResultPlayerStats::has_healing() const {
  return _has_bit(18);
}
inline void CSOTFMatchResultPlayerStats::clear_healing() {
  healing_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::healing() const {
  return healing_;
}
inline void CSOTFMatchResultPlayerStats::set_healing(::google::protobuf::uint32 value) {
  _set_bit(18);
  healing_ = value;
}

// optional uint32 support = 20;
inline bool CSOTFMatchResultPlayerStats::has_support() const {
  return _has_bit(19);
}
inline void CSOTFMatchResultPlayerStats::clear_support() {
  support_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::support() const {
  return support_;
}
inline void CSOTFMatchResultPlayerStats::set_support(::google::protobuf::uint32 value) {
  _set_bit(19);
  support_ = value;
}

// optional uint32 score_medal = 21;
inline bool CSOTFMatchResultPlayerStats::has_score_medal() const {
  return _has_bit(20);
}
inline void CSOTFMatchResultPlayerStats::clear_score_medal() {
  score_medal_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::score_medal() const {
  return score_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_score_medal(::google::protobuf::uint32 value) {
  _set_bit(20);
  score_medal_ = value;
}

// optional uint32 kills_medal = 22;
inline bool CSOTFMatchResultPlayerStats::has_kills_medal() const {
  return _has_bit(21);
}
inline void CSOTFMatchResultPlayerStats::clear_kills_medal() {
  kills_medal_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::kills_medal() const {
  return kills_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_kills_medal(::google::protobuf::uint32 value) {
  _set_bit(21);
  kills_medal_ = value;
}

// optional uint32 damage_medal = 23;
inline bool CSOTFMatchResultPlayerStats::has_damage_medal() const {
  return _has_bit(22);
}
inline void CSOTFMatchResultPlayerStats::clear_damage_medal() {
  damage_medal_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::damage_medal() const {
  return damage_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_damage_medal(::google::protobuf::uint32 value) {
  _set_bit(22);
  damage_medal_ = value;
}

// optional uint32 healing_medal = 24;
inline bool CSOTFMatchResultPlayerStats::has_healing_medal() const {
  return _has_bit(23);
}
inline void CSOTFMatchResultPlayerStats::clear_healing_medal() {
  healing_medal_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::healing_medal() const {
  return healing_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_healing_medal(::google::protobuf::uint32 value) {
  _set_bit(23);
  healing_medal_ = value;
}

// optional uint32 support_medal = 25;
inline bool CSOTFMatchResultPlayerStats::has_support_medal() const {
  return _has_bit(24);
}
inline void CSOTFMatchResultPlayerStats::clear_support_medal() {
  support_medal_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::support_medal() const {
  return support_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_support_medal(::google::protobuf::uint32 value) {
  _set_bit(24);
  support_medal_ = value;
}

// optional uint32 map_index = 26;
inline bool CSOTFMatchResultPlayerStats::has_map_index() const {
  return _has_bit(25);
}
inline void CSOTFMatchResultPlayerStats::clear_map_index() {
  map_index_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::map_index() const {
  return map_index_;
}
inline void CSOTFMatchResultPlayerStats::set_map_index(::google::protobuf::uint32 value) {
  _set_bit(25);
  map_index_ = value;
}

// -------------------------------------------------------------------

// CMsgGCRequestCasualCriteriaStats

// -------------------------------------------------------------------

// CMsgGCCasualCriteriaStatsResponse

// repeated uint32 map_count = 1;
inline int CMsgGCCasualCriteriaStatsResponse::map_count_size() const {
  return map_count_.size();
}
inline void CMsgGCCasualCriteriaStatsResponse::clear_map_count() {
  map_count_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCCasualCriteriaStatsResponse::map_count(int index) const {
  return map_count_.Get(index);
}
inline void CMsgGCCasualCriteriaStatsResponse::set_map_count(int index, ::google::protobuf::uint32 value) {
  map_count_.Set(index, value);
}
inline void CMsgGCCasualCriteriaStatsResponse::add_map_count(::google::protobuf::uint32 value) {
  map_count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCCasualCriteriaStatsResponse::map_count() const {
  return map_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCCasualCriteriaStatsResponse::mutable_map_count() {
  return &map_count_;
}

// -------------------------------------------------------------------

// CMsgGCMatchHistoryLoad


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus>() {
  return ::CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>() {
  return ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>() {
  return ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFParty_State>() {
  return ::CSOTFParty_State_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CTFLobbyMember_ConnectState>() {
  return ::CTFLobbyMember_ConnectState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFLobby_State>() {
  return ::CSOTFLobby_State_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFLobby_LobbyType>() {
  return ::CSOTFLobby_LobbyType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFLobby_WarMatch>() {
  return ::CSOTFLobby_WarMatch_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_PlayerConnectState>() {
  return ::CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_Event>() {
  return ::CMsgGameServerMatchmakingStatus_Event_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMvMVictoryInfo_GrantReason>() {
  return ::CMsgMvMVictoryInfo_GrantReason_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCNotification_NotificationType>() {
  return ::CMsgGCNotification_NotificationType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Match_Result_Status>() {
  return ::CMsgGC_Match_Result_Status_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_ReportPlayer_EReason>() {
  return ::CMsgGC_ReportPlayer_EReason_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ETFGCMsg>() {
  return ETFGCMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< EServerModificationItemType>() {
  return EServerModificationItemType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TF_MatchmakingMode>() {
  return TF_MatchmakingMode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TF_Matchmaking_WizardStep>() {
  return TF_Matchmaking_WizardStep_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TF_GC_GameState>() {
  return TF_GC_GameState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TF_GC_TEAM>() {
  return TF_GC_TEAM_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TFMatchLeaveReason>() {
  return TFMatchLeaveReason_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< TFLobbyReadyState>() {
  return TFLobbyReadyState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ChatChannelType_t>() {
  return ChatChannelType_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ServerMatchmakingState>() {
  return ServerMatchmakingState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning( pop )
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic warning "-Wshadow"
#endif // _PS3
#endif // _GNUC

#endif  // PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
